{"version":3,"sources":["components/unwanted/Test.js","app/firebase.js","features/userSlice.js","components/Login.js","features/signupSlice.js","components/Dataforsignup.js","features/counter/counterAPI.js","features/counter/counterSlice.js","components/Signup.js","components/unwanted/DelLater.js","components/globalstyles.js","components/UploadPhotos.js","components/Signupnew.js","components/Header.js","features/profilesSlice.js","components/Profiles.js","components/Profileimagegallery.js","components/Profilepartnerpreference.js","components/Withloading.js","utils/Shortlist.js","components/ProfileN.js","components/Requests.js","components/Shortlisted.js","components/Shortlisteme.js","components/Recentlyviewed.js","components/EditProfile/Horoscopeedit.js","components/EditProfile/Educationedit.js","components/EditProfile/Familydetailsedit.js","components/EditProfile/Partnerpreferences.js","components/EditProfile/Lifestyle.js","components/EditProfile/EditProfile.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["InlineDatePickerDemo","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","db","firestore","auth","GoogleAuthProvider","userSlice","createSlice","name","initialState","user","darkmode","reducers","login","state","action","payload","console","log","logout","updateData","handleDarkMode","actions","tabstate","selectUser","Login","classes","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","customLink","color","useStyles","dispatch","useDispatch","useState","email","setEmail","password","setPassword","history","useHistory","Grid","container","component","className","item","xs","sm","md","Paper","elevation","square","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","value","onChange","e","target","FormControlLabel","control","Checkbox","Button","onClick","preventDefault","signInWithEmailAndPassword","then","userAuth","userData","collection","doc","get","exists","data","uid","displayName","profileUrl","photoURL","push","catch","error","alert","href","to","signupSlice","signupData","storeSignupData","DegreeList","countryList","statesList","states","capital","code","districts","currencyList","cc","symbol","caste","subCasteArrSmartha","subCasteArrMadhwa","subCasteArrVaishnava","Raashi","birthStar","Gothra","heightList","languages","employedin","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","response","counterSlice","status","increment","decrement","incrementByAmount","extraReducers","builder","addCase","pending","fulfilled","flexGrow","padding","textAlign","text","selected","primary","background","defaultbutton","borderWidth","borderStyle","borderColor","borderLeftWidth","borderLeftColor","active","dark","withStyles","toggleButton","border","useForm","register","handleSubmit","errors","formState","setValue","subCasteArr","setsubCasteArr","setsubCaste","subcasteValue","country","setCountry","setState","city","setCity","residingcountry","setResidingCountry","setResidingState","residingcity","setResidingCity","employment","setEmployment","familyType","onSubmit","formData","FormControl","FormLabel","defaultValue","render","field","fieldState","ToggleButtonGroup","exclusive","_","helperText","message","ToggleButton","rules","FormHelperText","createdby","RadioGroup","row","Radio","labelPlacement","gender","Autocomplete","options","getOptionLabel","option","renderInput","params","Select","handleCountryChange","MenuItem","map","anObjectMapped","index","birthcountry","selectedState","handleStateChange","utils","DateFnsUtils","rest","ref","format","minDate","moment","subtract","maxDate","KeyboardButtonProps","Boolean","birthdate","maritalstatus","familystatus","familyvalues","familytype","handleEmployment","handleCountryChangeCurrent","handleStateChangeCurrent","fontSize","marginRight","globalUseStyles","redButton","greentButton","viewLink","mat__profilepics","mat__profilepicdiv","cursor","position","opacity","mat__profilepic_editdelicons","top","right","mat__profilepicupload","justifyContent","mat__profilepic","objectFit","mat__uploadphoto_radio","UploadPhotos","userDetails","useSelector","loggedUsersData","setloggedUsersData","filepickerRef","useRef","filepickerRef1","filepickerRef2","pic1","setpic1","pic2","setpic2","loadpic2","setloadpic2","profilePic","setprofilePic","useEffect","onSnapshot","profilepic","addImage","imageType","reader","FileReader","files","readAsDataURL","onload","readerEvent","result","putString","on","child","getDownloadURL","url","currentUser","updateProfile","set","merge","deletePic","pictype","imgurl","refFromURL","delete","React","privacy","photos","justify","src","alt","mat__profilepic_editicon","current","click","IconButton","title","hidden","Skeleton","event","Tooltip","placement","tooltiptitle","input","WebkitBoxShadow","ProfileForm","useFormContext","inputProps","HorosocopeForm","subCaste","district","disabled","statesC","PersonalForm","ProfessionalForm","residingstate","getStepContent","step","Signupnew","activeStep","setActiveStep","skippedSteps","setSkippedSteps","steps","isStepSkipped","includes","datastate","setdatastate","methods","defaultValues","phone","subcaste","birthstar","raashi","gothra","birthstate","birthcity","birthtime","mothertongue","education","Currency","income","companyname","jobnature","Stepper","alternativeLabel","labelProps","stepProps","Object","keys","length","completed","Step","key","StepLabel","align","createUserWithEmailAndPassword","toLowerCase","firsttimelogin","partnerpreferencesflag","timestamp","FieldValue","serverTimestamp","JSON","stringify","filter","skipItem","button","isStepOptional","grow","menuButton","breakpoints","up","search","borderRadius","shape","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","moreouter","more","paddingRight","sublinks","textDecoration","sublinksProfile","headericons","Header","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","handlelogout","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","moreopen","setOpen","anchorRef","handleClose","contains","handleListKeyDown","profileopen","setprofileopen","anchorRefProfile","handleCloseProfile","handleListKeyDownProfile","prevOpen","focus","prevOpenprofile","mobileMenuId","renderMobileMenu","noWrap","Badge","badgeContent","currentTarget","AppBar","Toolbar","edge","InputBase","placeholder","undefined","size","Popper","role","disablePortal","TransitionProps","Grow","style","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","underline","moreouter12","disableRipple","disableFocusRipple","pathname","tabids","Link","fetchAsyncProfiles","genderSearch","promise","where","snapshot","forEach","fetchAsyncProfileDetail","promiseDetail","detailData","profilesSlice","profiles","selectProfile","removeSelectedProfile","middleware","getDefaultMiddleware","serializableCheck","getAllProfiles","getSelectedProfile","maxWidth","media","paddingTop","expand","transform","duration","shortest","expandOpen","wordBreak","infoiconedu","red","viewButton","cardfooter","mat__dummyprofilepic","paddingBottom","mat__dummyprofilepicholder","mat__dummyprofileimg","mat__requestpic","left","fontWeight","borderBottomWidth","borderBottomStyle","Profiles","globalClasses","useTheme","setUser","setloggedinprofile","getAge","dateString","birthDate","today","Date","seconds","nanoseconds","age","getFullYear","m","getMonth","getDate","userlogged","loggedinuserEmail","userRef","openSnackbar","setopenSnackbar","snackbarmsg","setsnackbarmsg","snackbartype","setsnackbartype","reason","Alert","props","usersRef","docSnapshot","loggedinprofile","profilesThunk","Snackbar","autoHideDuration","severity","Array","i","lg","Card","card","CardHeader","animation","marginBottom","subheader","CardContent","Fragment","profile","charAt","CardMedia","exec","replace","btoa","CardActions","disableSpacing","shortlisted","indexOf","startIcon","sendshortbuttons","removershortlistmail","arrayRemove","shortlistedme","shortlist","arrayUnion","err","star","dob","dp","shortlistrr","interestssent","intersetedProfile","accepted","read","interestsreceived","sendInterest","Profileimagegallery","profileImages","images","Set","from","uniq","a","original","element","thumbnail","items","showNav","showPlayButton","showThumbnails","showBullets","profile__picholder","profile__pic","profile__percentage","profile__preferencesul","profile__preferencesli","profile__preference","profile__choice","profile__match","profile__matchnomatch","partnerprefLink","Profilepartnerpreference","count","match","useCallback","parseInt","trimHeight","slice","profilee","logggeduserSal","setlogggeduserSal","profileeSal","setprofileeSal","profilematchcount","setprofilematchcount","testfunc","bool","detail","prevProfilematchcount","CircularProgressWithLabel","Box","CircularProgress","bottom","Math","round","loggedsal","partnerpreferences","annualincome","trim","profilsal","toDate","fromNow","String","countryliving","smokinghabits","lifestyle","foodhabits","drinkinghabits","profile__preferences","Divider","join","WithLoading","Component","isLoading","shortlistNew","tobeshortlistedId","loggedinUser","ListWithLoading","imageGallery","actionButtons","actionButtonsHolder","actions__msg","subheading","listgroup","overflow","listdesc","listStyle","listdescli","leftSideHead","float","textTransform","content","rightSidedesc","requestsection","requestsectioninner","alignContent","requestmsgholder","requestmsg","borderBottomColor","acceptdecline","Profile","location","useLocation","userid","atob","split","loadingpartnerPref","setLoadingpartnerPref","profileimage","setprofileimage","setloggedinUser","viewedon","shortlistReturn","sentDate","recievedDate","interestSent","setinterestSent","interestReceived","setinterestReceived","endIcon","requestEmail","getTime","toLocaleTimeString","TabPanel","children","other","p","a11yProps","tabbutton","decline","cardheader","Requests","requests","setrequests","sentRequests","setsentRequests","docs","Tabs","newValue","indicatorColor","Tab","icon","request","Intl","DateTimeFormat","year","month","day","classname","sentRequest","Shortlisted","header","cardgrid","noshortlist","setshortlisted","customtest","Shortlistedme","Recentlyviewed","viewed","Chip","clickable","updatebutton","Horoscopeedit","setHoroscopepath","toLocaleDateString","mask","mat__horoscopeupload","horoscopeurl","rel","download","currencyLabel","Educationedit","Familydetailsedit","motherssoccupation","fathersoccupation","brothers","sisters","fatheroccupation","motheroccupation","buttontemp","toage","ageGrp","customlabel","customlabel2","toseperator","customwidthtextbox","Partnerpreferences","getValues","fromAge","ageMenuautocomplete","toString","getAgeAutocomplete","handleCasteChange","subcastearrwithin","prevState","setcastevalue","DegreeListt","allcastearr","incomeList","fromage","heightfrom","heightto","livingcountry","validate","always","multiple","renderTags","getTagProps","Lifestyle","tabs","borderRight","divider","mat__Caste","EditProfile","Number","handleChange","setcreatedBy","Hidden","smDown","orientation","mdUp","scrollButtons","textColor","weight","InputProps","startAdornment","InputAdornment","backdrop","zIndex","drawer","App","darkmodeselector","createMuiTheme","light","contrastText","onAuthStateChanged","ThemeProvider","CssBaseline","path","ProfileN","Backdrop","store","configureStore","reducer","counter","counterReducer","signup","signupReducer","userReducer","profilesReducer","devTools","process","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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EACA,mDACA,wDACA,8CACA,oDACA,mDACA,kFACA,yEACA,6EACA,sEACA,kCACA,0EACA,oDACA,6CACA,0CACA,qEACA,qDACA,+DACA,oDACA,oDACA,qDACA,0EACA,uDACA,wDACA,uEACA,qDACA,sDACA,+DACA,mDACA,6CACA,2CACA,yDACA,qCACA,oDACA,sEACA,yFACA,+DACA,8CACA,sCACA,0EACA,4DACA,yDACA,8CACA,2CACA,4CACA,mEACA,sDACA,6DACA,yEACA,2DACA,6FACA,kCACA,uEACA,uEACA,2CACA,gDACA,6BACA,2BACA,mDACA,yCACA,cACA,yCACA,sCACA,wDACA,8CACA,uCACA,uBACA,uBACA,+BACA,uCACA,kDACA,6BACA,8DACA,mDACA,kCACA,4CACA,uCACA,kCACA,wCACA,qCACA,0CACA,+CACA,qCACA,wCACA,4CACA,+BACA,6BACA,2BACA,wBACA,2CACA,mCACA,2BACA,8BACA,6BACA,2DACA,8BACA,sCACA,oCACA,uCACA,qCACA,sCACA,kCACA,4CACA,qDACA,2CACA,gDACA,oCACA,0DACA,2CACA,2CACA,6BACA,uBACA,uDACA,sCACA,qCACA,yCACA,uCACA,uCACA,0CACA,oCACA,6CACA,wCACA,kCACA,wDACA,2CACA,6CACA,iDACA,mCACA,gCACA,gCACA,4CACA,gDACA,0BACA,oCACA,uDACA,gCACA,2BACA,4CACA,uCACA,gCACA,wCACA,0CACA,0CACA,yCACA,qEACA,uCACA,qEACA,oCACA,sCACA,6CACA,oCACA,oCACA,yCACA,kCACA,qBACA,qCACA,yCACA,8BACA,gDACA,8CACA,+DACA,yCACA,6DACA,8CACA,mCACA,+BACA,8BACA,gEACA,UACA,cACA,MACA,eAGSC,GAAc,CACvB,QACA,cACA,UACA,UACA,iBACA,UACA,SACA,WACA,aACA,sBACA,YACA,UACA,QACA,YACA,UACA,aACA,gBACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,mCACA,mCACA,yBACA,WACA,gBACA,SACA,uCACA,oBACA,WACA,eACA,UACA,aACA,WACA,WACA,SACA,uBACA,iCACA,OACA,QACA,QACA,mBACA,gCACA,WACA,gBACA,yCACA,cACA,qBACA,aACA,UACA,OACA,aACA,SACA,UACA,mBACA,UACA,WACA,WACA,2BACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,WACA,oCACA,sBACA,OACA,UACA,SACA,gBACA,mBACA,oCACA,QACA,eACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,aACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,oCACA,iBACA,WACA,YACA,UACA,UAEA,YACA,6BACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,WACA,8CACA,0BACA,SACA,aACA,yCACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,aACA,SACA,WACA,WACA,OACA,QACA,yBACA,aACA,aACA,YACA,UACA,SACA,mCACA,4BACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,UACA,QACA,QACA,oBACA,gBACA,cACA,YACA,cACA,UACA,OACA,iBACA,iCACA,SACA,OACA,WACA,QACA,sBACA,SACA,mBACA,WACA,OACA,oBACA,WACA,SACA,WACA,cACA,QACA,8BACA,UACA,2BACA,SACA,aACA,sBACA,+CACA,wBACA,cACA,6BACA,4BACA,mCACA,QACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,4BACA,WACA,WACA,kBACA,UACA,eACA,+CACA,cACA,QACA,YACA,cACA,WACA,yBACA,SACA,cACA,uBACA,SACA,aACA,+BACA,WACA,cACA,OACA,UACA,QACA,sBACA,UACA,SACA,eACA,iCACA,SACA,SACA,UACA,6BACA,6DACA,6CACA,iCACA,UACA,aACA,UACA,qCACA,WACA,2BACA,wBACA,oBACA,iBACA,QACA,SACA,WACA,oBAGSC,GAAa,CACtBC,OAAQ,CACJ,CACIvC,GAAI,IACJ/C,KAAM,kBACNuF,QAAS,aACTC,KAAM,KACNpH,KAAM,8BACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,4BAEV,CACI2E,GAAI,IACJ3E,KAAM,mBAIlB,CACI2E,GAAI,IACJ/C,KAAM,QACNuF,QAAS,YACTC,KAAM,KACNpH,KAAM,iBACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,iBAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,iBAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAEV,CACI2E,GAAI,KACJ3E,KAAM,iBAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAIlB,CACI2E,GAAI,IACJ/C,KAAM,QACNuF,QAAS,WACTC,KAAM,KACNpH,KAAM,oBACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,gBAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,mBAEV,CACI2E,GAAI,IACJ3E,KAAM,mBAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,uBAEV,CACI2E,GAAI,KACJ3E,KAAM,iBAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,cAIlB,CACI2E,GAAI,IACJ/C,KAAM,QACNuF,QAAS,SACTC,KAAM,KACNpH,KAAM,QACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,uBAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,iBAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,2BAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,wBAIlB,CACI2E,GAAI,IACJ/C,KAAM,QACNuF,QAAS,QACTC,KAAM,KACNpH,KAAM,QACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,6BAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,mBAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,oBAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,mBAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,oBAIlB,CACI2E,GAAI,IACJ/C,KAAM,kBACNuF,QAAS,aACTC,KAAM,KACNpH,KAAM,aACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,gBAIlB,CACI2E,GAAI,IACJ/C,KAAM,QACNuF,QAAS,+BACTC,KAAM,KACNpH,KAAM,eACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,gBAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,4BAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,kBAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,wBAEV,CACI2E,GAAI,KACJ3E,KAAM,yBAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,kBAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,aAIlB,CACI2E,GAAI,IACJ/C,KAAM,kBACNuF,QAAS,WACTC,KAAM,KACNpH,KAAM,yBACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,0BAIlB,CACI2E,GAAI,IACJ/C,KAAM,kBACNuF,QAAS,QACTC,KAAM,KACNpH,KAAM,gBACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,SAIlB,CACI2E,GAAI,KACJ/C,KAAM,6BACNuF,QAAS,YACTC,KAAM,KACNpH,KAAM,QACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,iBAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,IACJ3E,KAAM,qBAEV,CACI2E,GAAI,IACJ3E,KAAM,qBAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,IACJ3E,KAAM,oBAEV,CACI2E,GAAI,KACJ3E,KAAM,qBAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,SACTC,KAAM,KACNpH,KAAM,MACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,eAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,cACTC,KAAM,KACNpH,KAAM,UACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,0BAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,iBAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAEV,CACI2E,GAAI,KACJ3E,KAAM,oBAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,kBAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,sBAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,uBAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,6BAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,iBAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,YAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,aACTC,KAAM,KACNpH,KAAM,UACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,iBAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,iBAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,SACTC,KAAM,KACNpH,KAAM,mBACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,sBAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,qBAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,SAIlB,CACI2E,GAAI,KACJ/C,KAAM,kBACNuF,QAAS,oCACTC,KAAM,KACNpH,KAAM,oBACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,QAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,OAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,cAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,SACTC,KAAM,KACNpH,KAAM,YACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,kBAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,uBAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,oBAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,YACTC,KAAM,KACNpH,KAAM,YACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,mBAEV,CACI2E,GAAI,IACJ3E,KAAM,mBAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,kBAEV,CACI2E,GAAI,IACJ3E,KAAM,gBAEV,CACI2E,GAAI,IACJ3E,KAAM,kBAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,oBAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,2BAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,YAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,qBACTC,KAAM,KACNpH,KAAM,SACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,kBAEV,CACI2E,GAAI,KACJ3E,KAAM,sBAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,aAIlB,CACI2E,GAAI,KACJ/C,KAAM,kBACNuF,QAAS,cACTC,KAAM,KACNpH,KAAM,SACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,SAIlB,CACI2E,GAAI,KACJ/C,KAAM,kBACNuF,QAAS,YACTC,KAAM,KACNpH,KAAM,cACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,aAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,SACTC,KAAM,KACNpH,KAAM,iBACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,SACTC,KAAM,KACNpH,KAAM,cACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,QAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,mBAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,cAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,SACTC,KAAM,KACNpH,KAAM,UACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,iBAEV,CACI2E,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,YAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,WACTC,KAAM,KACNpH,KAAM,YACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,mBAEV,CACI2E,GAAI,IACJ3E,KAAM,sBAEV,CACI2E,GAAI,IACJ3E,KAAM,oBAEV,CACI2E,GAAI,IACJ3E,KAAM,oBAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,oBAEV,CACI2E,GAAI,IACJ3E,KAAM,0BAEV,CACI2E,GAAI,IACJ3E,KAAM,0BAEV,CACI2E,GAAI,IACJ3E,KAAM,mBAEV,CACI2E,GAAI,KACJ3E,KAAM,sBAEV,CACI2E,GAAI,KACJ3E,KAAM,sBAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,SACTC,KAAM,KACNpH,KAAM,UACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,cAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,SACTC,KAAM,KACNpH,KAAM,WACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,OAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,QAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,eAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,cACTC,KAAM,KACNpH,KAAM,SACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,kBAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,wBAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAIlB,CACI2E,GAAI,KACJ/C,KAAM,kBACNuF,QAAS,aACTC,KAAM,KACNpH,KAAM,aACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,QAEV,CACI2E,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,IACJ3E,KAAM,WAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,aACTC,KAAM,KACNpH,KAAM,SACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,mBAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,0CAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,uCAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,SACTC,KAAM,KACNpH,KAAM,YACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,kBAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,kBAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,aAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,UACTC,KAAM,KACNpH,KAAM,SACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,IACJ3E,KAAM,gBAEV,CACI2E,GAAI,IACJ3E,KAAM,gBAEV,CACI2E,GAAI,IACJ3E,KAAM,iBAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,UACTC,KAAM,KACNpH,KAAM,aACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,SAEV,CACI2E,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,kBAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,2BAEV,CACI2E,GAAI,KACJ3E,KAAM,mBAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,kBAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,kBAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,YACTC,KAAM,KACNpH,KAAM,YACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,wBAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,4BAEV,CACI2E,GAAI,IACJ3E,KAAM,oBAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,0BAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,oBAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,oBAEV,CACI2E,GAAI,KACJ3E,KAAM,oBAEV,CACI2E,GAAI,KACJ3E,KAAM,yBAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,WACTC,KAAM,KACNpH,KAAM,UACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,iBAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,iBAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,kBAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,UACTC,KAAM,KACNpH,KAAM,gBACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,QAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,kBAEV,CACI2E,GAAI,IACJ3E,KAAM,2CAEV,CACI2E,GAAI,IACJ3E,KAAM,uBAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,QAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,uBAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,4BAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAEV,CACI2E,GAAI,KACJ3E,KAAM,6BAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,yBAEV,CACI2E,GAAI,KACJ3E,KAAM,qBAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,OAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,iBAEV,CACI2E,GAAI,KACJ3E,KAAM,YAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,wBAEV,CACI2E,GAAI,KACJ3E,KAAM,oBAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAEV,CACI2E,GAAI,KACJ3E,KAAM,4BAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,mBAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,cAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,WACTC,KAAM,KACNpH,KAAM,cACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,aAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,YAEV,CACI2E,GAAI,IACJ3E,KAAM,iBAEV,CACI2E,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,iBAEV,CACI2E,GAAI,KACJ3E,KAAM,qBAEV,CACI2E,GAAI,KACJ3E,KAAM,gBAIlB,CACI2E,GAAI,KACJ/C,KAAM,QACNuF,QAAS,UACTC,KAAM,KACNpH,KAAM,cACNqH,UAAW,CACP,CACI1C,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,uBAEV,CACI2E,GAAI,IACJ3E,KAAM,eAEV,CACI2E,GAAI,IACJ3E,KAAM,qCAEV,CACI2E,GAAI,IACJ3E,KAAM,cAEV,CACI2E,GAAI,IACJ3E,KAAM,WAEV,CACI2E,GAAI,IACJ3E,KAAM,UAEV,CACI2E,GAAI,KACJ3E,KAAM,cAEV,CACI2E,GAAI,KACJ3E,KAAM,aAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,eAEV,CACI2E,GAAI,KACJ3E,KAAM,SAEV,CACI2E,GAAI,KACJ3E,KAAM,qBAEV,CACI2E,GAAI,KACJ3E,KAAM,sCAEV,CACI2E,GAAI,KACJ3E,KAAM,oCAEV,CACI2E,GAAI,KACJ3E,KAAM,WAEV,CACI2E,GAAI,KACJ3E,KAAM,qBAEV,CACI2E,GAAI,KACJ3E,KAAM,uCAObsH,GAAe,CACxB,CAAEC,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,gBACrC,CAAEuH,GAAI,MAAOC,OAAQ,iBAAkBxH,KAAM,cAC7C,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,kBAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,gBAChC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,iBAClC,CAAEuH,GAAI,MAAOC,OAAQ,WAAYxH,KAAM,gCACvC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,kBACjC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,kBAChC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,qBAChC,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,iBACrC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,qBAClC,CACIuH,GAAI,MACJC,OAAQ,KACRxH,KAAM,8CAEV,CAAEuH,GAAI,MAAOC,OAAQ,OAAQxH,KAAM,oBACnC,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,oBACrC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,iBAClC,CAAEuH,GAAI,MAAOC,OAAQ,iBAAkBxH,KAAM,kBAC7C,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,iBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,oBAClC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,iBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,sBAClC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,kBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,mBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,sBAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,iBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,oBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,iBAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,mBAChC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,mBAChC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,eAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,gBAChC,CAAEuH,GAAI,MAAOC,OAAQ,OAAUxH,KAAM,yBACrC,CAAEuH,GAAI,MAAOC,OAAQ,OAAQxH,KAAM,kBACnC,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,qBACrC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,cAChC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,uBAClC,CAAEuH,GAAI,MAAOC,OAAQ,UAAWxH,KAAM,gBACtC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,oBAClC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,gBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,kBAClC,CAAEuH,GAAI,MAAOC,OAAQ,gBAAiBxH,KAAM,kBAC5C,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,kBACjC,CAAEuH,GAAI,MAAOC,OAAQ,OAAUxH,KAAM,kBACrC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,kBAClC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,kBACjC,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,iBACrC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,iBAClC,CAAEuH,GAAI,MAAOC,OAAQ,OAAUxH,KAAM,0BACrC,CAAEuH,GAAI,MAAOC,OAAQ,OAAUxH,KAAM,iBACrC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,iBAClC,CAAEuH,GAAI,MAAOC,OAAQ,WAAYxH,KAAM,iBACvC,CAAEuH,GAAI,MAAOC,OAAQ,OAAUxH,KAAM,mBACrC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,kBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,iBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,6BAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,sBAChC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,mBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,oBAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,oBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,iBACjC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,kBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,oBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,qBACjC,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,sBAErC,CAAEuH,GAAI,MAAOC,OAAQ,gBAAiBxH,KAAM,eAC5C,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,gBAClC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,sBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,mBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,mBAClC,CAAEuH,GAAI,MAAOC,OAAQ,OAAUxH,KAAM,gBACrC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,mBAClC,CAAEuH,GAAI,MAAOC,OAAQ,qBAAsBxH,KAAM,mBACjD,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,kBACrC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,kBAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,oBAChC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,oBAChC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,iBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,yBAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,qBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,WACjC,CAAEuH,GAAI,MAAOC,OAAQ,OAAUxH,KAAM,iBACrC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,oBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,mBACjC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,gBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,oBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,gBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,gBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,mBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,gBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,mBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,oBAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,eAChC,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,oBACrC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,mBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,uBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,mBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,qBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,mBACjC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,gBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,qBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,sBAClC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,mBACjC,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,kBACrC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,yBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,mBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,kBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,sBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,cAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,qBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,sBAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,0BAChC,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,mBACrC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,mBAClC,CAAEuH,GAAI,MAAOC,OAAQ,UAAWxH,KAAM,gBACtC,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,sBACrC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,gBACjC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,gBAChC,CAAEuH,GAAI,MAAOC,OAAQ,OAAQxH,KAAM,iBACnC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,iBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,eACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,0BAClC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,qBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,kBAClC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,iBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,oBACjC,CAAEuH,GAAI,MAAOC,OAAQ,OAAUxH,KAAM,sBACrC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,wBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,mBAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,qBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,gBACjC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,mBAChC,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,aACrC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,sBAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,iBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,kBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,oBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,8BAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,qBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,sBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,qBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,oBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,wBAClC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,kBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,mBAClC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,sBACjC,CAAEuH,GAAI,MAAOC,OAAQ,SAAUxH,KAAM,mBACrC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,gBACjC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,eAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,6BAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,yBAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,0BAClC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,0BAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,aAChC,CAAEuH,GAAI,MAAOC,OAAQ,MAAOxH,KAAM,eAClC,CAAEuH,GAAI,MAAOC,OAAQ,IAAKxH,KAAM,sBAChC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,kBACjC,CAAEuH,GAAI,MAAOC,OAAQ,KAAMxH,KAAM,sBAGxByH,GAAQ,CAAC,SAAU,UAAW,kBAC9BC,GAAqB,CAC9B,eACA,gBACA,mBACA,eACA,qBACA,aACA,WACA,2BACA,oCACA,oBACA,gBAESC,GAAoB,CAC7B,sBACA,qBACA,yBACA,qBACA,qBACA,kBACA,sBACA,sBACA,yBACA,yBACA,gCACA,+BACA,sBACA,qCACA,mCACA,uCACA,qCACA,6CACA,0CACA,yCACA,mBACA,mBACA,kCACA,yBAESC,GAAuB,CAAC,SACxBC,GAAS,CAClB,QACA,YACA,SACA,QACA,QACA,QACA,OACA,YACA,QACA,QACA,SACA,SAESC,GAAY,CACrB,UACA,UACA,WACA,SACA,aACA,QACA,YACA,SACA,WACA,QACA,iBACA,kBACA,QACA,SACA,QACA,UACA,WACA,UACA,QACA,aACA,cACA,YACA,YACA,aACA,cACA,eACA,UAGSC,GAAS,CAClB,iBACA,WACA,iCACA,OACA,SACA,SACA,aACA,WACA,cACA,UACA,WACA,WACA,aACA,QACA,oBACA,SACA,YACA,SACA,QACA,WACA,YACA,YACA,UACA,QACA,mBACA,WACA,SACA,WACA,aACA,YACA,UACA,YACA,SACA,SACA,QACA,WACA,cACA,WACA,UACA,YACA,UACA,QACA,SACA,cACA,8BACA,aACA,QACA,aACA,YA2CSC,GAAa,CACtB,YACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,YACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,YACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,iBACA,iBACA,YACA,gBACA,iBAGSC,GAAY,CACrB,UACA,SACA,QACA,UACA,OACA,QACA,YAGSC,GAAa,CACtB,MACA,aACA,YACA,UACA,Y,qFCpgIG,SAASC,KAAwB,IAAbC,EAAY,uDAAH,EAClC,OAAO,IAAIC,SAAQ,SAACC,GAAD,OACjBC,YAAW,kBAAMD,EAAQ,CAAErC,KAAMmC,GAAtB,GAAiC,IAD3B,GAGpB,CCFD,IAUaI,GAAiBC,YAC1B,qBAD0C,mDAE1C,WAAOL,GAAP,kGAC2BD,GAAWC,GADtC,cACUM,EADV,yBAGWA,EAASzC,MAHpB,2CAF0C,uDASjC0C,GAAe5I,YAAY,CACpCC,KAAM,UACNC,aArBiB,CACjB8E,MAAO,EACP6D,OAAQ,QAqBRxI,SAAU,CACNyI,UAAW,SAACvI,GACRG,QAAQC,IAAIJ,GAKZA,EAAMyE,OAAS,CAClB,EACD+D,UAAW,SAACxI,GACRA,EAAMyE,OAAS,CAClB,EAEDgE,kBAAmB,SAACzI,EAAOC,GACvBE,QAAQC,IAAI,QACZJ,EAAMyE,OAASxE,EAAOC,OACzB,GAILwI,cAAe,SAACC,GACZA,EACKC,QAAQV,GAAeW,SAAS,SAAC7I,GAC9BA,EAAMsI,OAAS,SAClB,IACAM,QAAQV,GAAeY,WAAW,SAAC9I,EAAOC,GACvCD,EAAMsI,OAAS,OACftI,EAAMyE,OAASxE,EAAOC,OACzB,GACR,IAGE,GAAoDmI,GAAa7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","file":"static/js/main.025f2838.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport {\n    DatePicker,\n    KeyboardDatePicker,\n    MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { Button } from \"@material-ui/core\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nfunction InlineDatePickerDemo(props) {\n    // const [selectedDate, handleDateChange] = useState(new Date());\n    const [selectedDate, setSelectedDate] = React.useState(\n        new Date(\"2014-08-18T21:11:54\")\n    );\n    const {\n        register,\n        control,\n        handleSubmit,\n        errors,\n        watch,\n        setValue,\n    } = useForm();\n    const onSubmit = (formData) => {\n        //e.preventDefault()\n        console.log(formData);\n    };\n    // const handleDateChange2 = (date) => {\n    //     // console.log(date);\n    //     handleDateChange(date);\n    //     console.log(selectedDate);\n    //     // handleDateChange((prevState) => {\n    //     //     return date\n    //     //   });\n    //     //   console.log(selectedDate)\n    // };\n    const handleDateChange = (date) => {\n        setSelectedDate(date);\n        alert();\n        console.log(date);\n    };\n    const [alignment, setAlignment] = useState(\"left\");\n\n    const options = [\"married\", \"unmarried\", \"bachelor\"];\n    const choice = watch(\"togglebutton\");\n    const handleAlignment = (event) => {\n        // alert(\"lll\");\n        // setAlignment(newAlignment);\n        console.log(event.target.innerText);\n        setAlignment(event.target.innerText);\n        setValue(\"ToggleTest\", event.target.innerText);\n    };\n    const onChange = (event, newAlignment) => {\n        setAlignment(newAlignment);\n        console.log(alignment);\n    };\n\n    const handleAlignment1 = (event, newAlignment) => {\n        console.log(newAlignment);\n        setAlignment(newAlignment);\n    };\n    return (\n        <div>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <span>{alignment}</span>\n                {/* <Controller\n                    name=\"ToggleTest\"\n                    control={control}\n                    defaultValue={alignment}\n                    value={alignment}\n                    render={({ field: { onChange, onBlur, value } }) => (\n                        <ToggleButtonGroup\n                            value={value}\n                            // exclusive\n                            // onChange={handleAlignment}\n                            onChange={handleAlignment1}\n                            // onChange={(e) => {\n                            //     handleAlignment(e);\n                            // }}\n                            aria-label=\"text alignment\"\n                        >\n                            <div className=\"clearboth\">{value}</div>\n                            <ToggleButton\n                                value=\"left\"\n                                aria-label=\"left aligned\"\n                                key=\"left\"\n                                className={\n                                    \"left\" === value ? \"selected\" : \"hhhh\"\n                                }\n                            >\n                                left\n                            </ToggleButton>\n\n                            <ToggleButton\n                                value=\"center1\"\n                                aria-label=\"centered\"\n                                key=\"center\"\n                            >\n                                center1\n                            </ToggleButton>\n                            <ToggleButton\n                                value=\"right\"\n                                aria-label=\"right aligned\"\n                                key=\"right\"\n                            >\n                                right\n                            </ToggleButton>\n                            <ToggleButton\n                                value=\"justify\"\n                                aria-label=\"justified\"\n                                // disabled\n                                key=\"justify\"\n                            >\n                                justify\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    )}\n                /> */}\n\n                <Controller\n                    render={({ field }) => (\n                        <ToggleButtonGroup aria-label=\"gender\" {...field}>\n                            <ToggleButton\n                                value=\"left\"\n                                aria-label=\"left aligned\"\n                            >\n                                Left\n                            </ToggleButton>\n                            <ToggleButton value=\"center\" aria-label=\"centered\">\n                                center\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    )}\n                    name=\"RadioGroup\"\n                    control={control}\n                />\n                <Controller\n                    render={({ field }) => (\n                        <ToggleButtonGroup\n                            aria-label=\"text alignment\"\n                            {...field}\n                        >\n                            <ToggleButton\n                                value=\"left\"\n                                aria-label=\"left aligned\"\n                            >\n                                Left\n                            </ToggleButton>\n                            <ToggleButton value=\"center\" aria-label=\"centered\">\n                                center\n                            </ToggleButton>\n                            <ToggleButton\n                                value=\"right\"\n                                aria-label=\"right aligned\"\n                            >\n                                right\n                            </ToggleButton>\n                            <ToggleButton\n                                value=\"justify\"\n                                aria-label=\"justified\"\n                            >\n                                justify\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    )}\n                    name=\"RadioGroup\"\n                    control={control}\n                />\n                {/* <Controller\n                    value={alignment}\n                    render={({ field: { onChange, onBlur, value } }) => (\n                        <div className=\"radio-group\">\n                            {value}\n                            {[\"Option 1\", \"Option 2\"].map((text) => {\n                                const isSelected = choice === text;\n                                console.log(choice + \" \" + \"Choice\");\n                                return (\n                                    <button\n                                        // {...props}\n                                        value={text}\n                                        type=\"button\"\n                                        onClick={() => handleAlignment(text)}\n                                        className={`button ${\n                                            alignment === text ? \"selected\" : \"\"\n                                        }`}\n                                    >\n                                        {text}\n                                        {value}\n                                    </button>\n                                );\n                            })}\n                        </div>\n                    )}\n                    name=\"togglebutton\"\n                    control={control}\n                /> */}\n\n                {/* <Controller\n                    value={alignment}\n                    render={({ field: { onChange, onBlur, value } }) => (\n                        <ToggleButtonGroup\n                            exclusive\n                            {...props}\n                            onChange={(e, value) => {\n                                handleAlignment(value);\n                            }}\n                        >\n                            <ToggleButton\n                                value=\"Married\"\n                                key=\"Married\"\n                                aria-label=\"Married\"\n                                classes={{\n                                    root:\n                                        \"button input-button coral w-radio-input\",\n                                }}\n                            >\n                                Married\n                            </ToggleButton>\n\n                            <ToggleButton\n                                value=\"Unmarried\"\n                                key=\"Unmarried\"\n                                aria-label=\"Unmarried\"\n                                classes={{\n                                    root:\n                                        \"button input-button coral w-radio-input\",\n                                }}\n                            >\n                                Unmarried\n                            </ToggleButton>\n\n                            <ToggleButton\n                                value=\"Divorced\"\n                                key=\"Divorced\"\n                                aria-label=\"Divorced\"\n                                classes={{\n                                    root:\n                                        \"button input-button coral w-radio-input\",\n                                }}\n                            >\n                                Divorced\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    )}\n                    name=\"test\"\n                    control={control}\n                /> */}\n\n                {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                        <Controller\n                            name=\"name1\"\n                            control={control}\n                            defaultValue=\"\"\n                            render={({\n                                field: { onChange, value },\n                                fieldState: { error },\n                            }) => (\n                                <KeyboardDatePicker\n                                \n                                    variant=\"inline\"\n                                    inputVariant=\"outlined\"\n                                    label=\"With keyboard\"\n                                    format=\"MM/dd/yyyy\"\n                                    value={selectedDate}\n                                    InputAdornmentProps={{ position: \"start\" }}\n                                    onChange={(date) => {handleDateChange2(date);}}\n                                    className=\"mat__textbox\"\n                                />\n                            )}\n                            rules={{\n                                required: \"Name is required\",\n                            }}\n                        />\n                    </MuiPickersUtilsProvider>  */}\n                {/* <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Controller\n            name=\"MUIPicker\"\n            control={control}\n            render={({ field: { ref, ...rest } }) => (\n              <KeyboardDatePicker\n                margin=\"normal\"\n                id=\"date-picker-dialog\"\n                label=\"Date picker dialog\"\n                format=\"MM/dd/yyyy\"\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\"\n                }}\n                {...rest}\n              />\n            )}\n          /> \n                </MuiPickersUtilsProvider>*/}\n                <Button\n                    className=\"sendMail__send mat__textbox\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    Send12\n                </Button>\n            </form>\n        </div>\n    );\n}\n\nexport default InlineDatePickerDemo;\n","import firebase from \"firebase\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAuhurmAsHlIZAbWQANLRlVwybkUlg4Wdc\",\n  authDomain: \"matrimony-b3327.firebaseapp.com\",\n  databaseURL: \"https://matrimony-b3327-default-rtdb.firebaseio.com\",\n  projectId: \"matrimony-b3327\",\n  storageBucket: \"matrimony-b3327.appspot.com\",\n  messagingSenderId: \"1074479741881\",\n  appId: \"1:1074479741881:web:e3db4bc6e669c27ba1d468\",\n  measurementId: \"G-6E000SWV97\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst storage = firebase.storage();\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { db, auth, provider, storage };\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n    darkmode: \"dark\"\n    // tabval: 2,\n  },\n\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n      console.log(\"inside login\");\n    },\n    logout: (state) => {\n      console.log(\"inside logout\");\n      state.user = null;\n    },\n    updateData: (state, action) => {\n      state.user = { ...state.user, ...action.payload };\n    },\n    // tabstate: (state, action) => {\n    //     console.log(action.payload);\n    //     state.tabval = action.payload;\n    // },\n    handleDarkMode: (state) => {\n      console.log(state.darkmode == \"dark\");\n      state.darkmode = state.darkmode == \"dark\" ? \"light\" : \"dark\";\n      console.log(state.darkmode);\n      // state.darkmode = !state.darkMode;\n    }\n  }\n});\n\nexport const {\n  login,\n  logout,\n  handleDarkMode,\n  tabstate,\n  updateData\n} = userSlice.actions;\nexport const selectUser = (state) => state.user.user;\n// export const tabval = (state) => state.user.tabval;\nexport const darkmode = (state) => state.user.darkmode;\n\nexport default userSlice.reducer;\n","import React, { useState } from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import TextField from '@material-ui/core/TextField';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n// import Link from \"@material-ui/core/Link\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\n// import LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { auth, db } from \"../app/firebase\";\nimport { login } from \"../features/userSlice\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Login() {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            height: \"100vh\",\n        },\n        image: {\n            backgroundImage: \"url(../../images/loginimage.jpg)\",\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor:\n                theme.palette.type === \"light\"\n                    ? theme.palette.grey[50]\n                    : theme.palette.grey[900],\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n        },\n        paper: {\n            margin: theme.spacing(8, 4),\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n        },\n        avatar: {\n            margin: theme.spacing(1),\n            backgroundColor: theme.palette.secondary.main,\n        },\n        form: {\n            width: \"100%\", // Fix IE 11 issue.\n            marginTop: theme.spacing(1),\n        },\n        submit: {\n            margin: theme.spacing(3, 0, 2),\n        },\n        customLink: {\n            color: \"inherit\",\n        },\n    }));\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [email, setEmail] = useState();\n    const [password, setPassword] = useState();\n    const history = useHistory();\n    const loginToapp = (e) => {\n        e.preventDefault();\n        auth.signInWithEmailAndPassword(email, password)\n            .then((userAuth) => {\n                var docRef = db.collection(\"users\").doc(userAuth.user.email);\n                let userData;\n                docRef\n                    .get()\n                    .then((doc) => {\n                        if (doc.exists) {\n                            userData = doc.data();\n                            console.log(userData);\n                        } else {\n                            console.log(\"else\");\n                        }\n                    })\n                    .then(() => {\n                        dispatch(\n                            login({\n                                email: userAuth.user.email,\n                                uid: userAuth.user.uid,\n                                displayName: userAuth.user.displayName,\n                                profileUrl: userAuth.user.photoURL,\n                                userData: userData,\n                            })\n                        );\n                        history.push(\"./Profiles\");\n                    });\n            })\n\n            .catch((error) => alert(error));\n    };\n    return (\n        <div>\n            <Grid container component=\"main\" className={classes.root}>\n                <Grid item xs={false} sm={4} md={7} className={classes.image} />\n                <Grid\n                    item\n                    xs={12}\n                    sm={8}\n                    md={5}\n                    component={Paper}\n                    elevation={6}\n                    square\n                >\n                    <div className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            {/* <LockOutlinedIcon /> */}\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            Sign in\n                        </Typography>\n                        <form className={classes.form} noValidate>\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                autoFocus\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        value=\"remember\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember me\"\n                            />\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}\n                                onClick={loginToapp}\n                            >\n                                Sign In\n                            </Button>\n                            <Grid container>\n                                <Grid item xs>\n                                    <Link\n                                        href=\"/signup\"\n                                        variant=\"body2\"\n                                        className={classes.customLink}\n                                    >\n                                        Forgot password?\n                                    </Link>\n                                </Grid>\n                                <Grid item>\n                                    <Link\n                                        to=\"/signup\"\n                                        color=\"inherit\"\n                                        className={classes.customLink}\n                                    >\n                                        {\"Don't have an account? Sign Up\"}\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </div>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Login;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const signupSlice = createSlice({\n    name: \"signup\",\n    initialState: {\n        signupData: [],\n    },\n    reducers: {\n        storeSignupData: (state, action) => {\n            console.log(action);\n            state.signupData = [...state.signupData, action.payload];\n            console.log(state.signupData);\n        },\n    },\n});\n\nexport const { storeSignupData } = signupSlice.actions;\nexport const selectSignupData = (state) => state.signup.signupData;\n\nexport default signupSlice.reducer;\n","export const DegreeList = [\n    \"Bachelor of Arts (B.A)\",\n    \"Bachelor of Arts Bachelor of Education (B.A. B.Ed)\",\n    \"Bachelor of Arts Bachelor of Law (B.A.B.L)\",\n    \"Bachelor of Arts Bachelor of Law (B.A.LLB)\",\n    \"Bachelor of Ayurvedic Medicine and Surgery (B.A.M.S)\",\n    \"Bachelor of Applied Sciences (B.A.S)\",\n    \"Bachelor of Arts (B.A.S.L.P)\",\n    \"Bachelor of Audiology and Speech Language Pathology (B.A.S.L.P)\",\n    \"Bachelor of Architecture (B.Arch)\",\n    \"Bachelor of Business Administration (B.B.A)\",\n    \"Bachelor of Business Administration Bachelor of Law (B.B.A LL.B)\",\n    \"Bachelor of Business Management (B.B.M)\",\n    \"Bachelor of Business Studies (B.B.S)\",\n    \"Bachelor of Computer Applications (B.C.A)\",\n    \"Bachelor of Communication Journalism (B.C.J)\",\n    \"Bachelor of Computer Science (B.C.S)\",\n    \"Bachelor of Commerce (B.Com)\",\n    \"Bachelor of Divinity (B.D)\",\n    \"Bachelor of Dental Surgery (B.D.S)\",\n    \"Basic Development Therapy (B.D.T)\",\n    \"Bachelor of Design (B.Des)\",\n    \"Bachelor of Engineering (B.E)\",\n    \"Bachelor of Electronic Science (B.E.S)\",\n    \"Bachelor of Education (B.Ed)\",\n    \"Bachelor of education in Artificial Intelligence (B.Ed AI)\",\n    \"Bachelor of Education (B.EdQ)\",\n    \"Bachelor of Elementary Education (B.EI.ED)\",\n    \"Bachelor of Elementary Education (B.EL.Ed)\",\n    \"Bachelor of Fine Arts (B.F.A)\",\n    \"Bachelor of Financial Investment and Analysis (B.F.I.A)\",\n    \"Bachelor of Fishery Sciences (B.F.S)\",\n    \"Bachelor of Fashion Technology (B.F.Tech)\",\n    \"Bachelor of General Law (B.G.L)\",\n    \"Behavioral Healthcare Education (B.H.Ed)\",\n    \"Bachelor of Hotel Management (B.H.M)\",\n    \"Bachelor Hotel Management and Catering Technology (B.H.M.C.T)\",\n    \"Bachelor of Homeopathic Medicine & Surgery (B.H.M.S)\",\n    \"Bachelor of Hospitality and Tourism Management (B.H.T.M)\",\n    \"Bachelor of Information Systems Management (B.I.S.M)\",\n    \"Bachelor of Laws (B.L)\",\n    \"Bachelor of Library and Information Science (B.L.I.S)\",\n    \"Bachelor of Labour Management (B.L.M)\",\n    \"Bachelor Library Science (B.L.Sc)\",\n    \"Bachelor of Literature (B.Lit)\",\n    \"Bachelor of Medical Laboratory Technology (B.M.L.T)\",\n    \"Bachelor of Mental Retardation (B.M.R)\",\n    \"Bachelor of Medical Record Science (B.M.R.Sc)\",\n    \"Bachelor in Mobility Science (B.M.Sc)\",\n    \"Bachelor of Mobility Science (B.M.Sc)\",\n    \"Bachelor of Medical Technology (B.M.T)\",\n    \"Bachelor of Naturopathy and Yogic Sciences (B.N.Y.Sc)\",\n    \"Bachelor of Occupational Therapy (B.O.T)\",\n    \"Bachelor of Occupational Therapy (B.O.Th)\",\n    \"Bachelor of Optometry and Vision Science (B.Optom)\",\n    \"Bachelor of Physical Education (B.P.E)\",\n    \"Bachelor Of Physical Education (B.P.Ed)\",\n    \"Bachelor in Prosthetics and Orthotics (B.P.O)\",\n    \"Bachelor of Public Relations (B.P.R)\",\n    \"Bachelor of Physiotherapy (B.P.T)\",\n    \"Bachelor of Pharmacy (B.Pharma)\",\n    \"Bachelor of Rehabilitation Therapy (B.R.T)\",\n    \"Bachelor of Science (B.S)\",\n    \"Bachelor in Science Education (B.S.E)\",\n    \"Bachelor of Speech Language & Audiology (B.S.L.A)\",\n    \"Bachelor of Socio Legal Sciences Bachelor of Laws (B.S.L.LL.B)\",\n    \"Bachelor of Siddha Medical Sciences (B.S.M.S)\",\n    \"Bachelor Of Social Work (B.S.W)\",\n    \"Bachelor of Science (B.Sc)\",\n    \"Bachelor of Science Bachelor of Education (B.Sc.B.Ed)\",\n    \"Bachelor of Science in Education (B.Sc.Ed)\",\n    \"Bachelor of Tourism Administration (B.T.A)\",\n    \"Basic Training Certificate (B.T.C)\",\n    \"Bachelor of Technology (B.Tech)\",\n    \"Bachelors of Technology (B.Tech)\",\n    \"Bachelor of Unani Medicine & Surgery (B.U.M.S)\",\n    \"Bachelor of Veterinary Science (B.V.Sc)\",\n    \"Bachelor of Medicine (Bachelor of Medicine)\",\n    \"Bachelor of Journalism and Mass Communication (BJMC)\",\n    \"Diploma in Special Education (D.S.E (CP))\",\n    \"Bachelor of Unani Medicine & Surgery (Kamil e Tob o Jarahat)\",\n    \"Bachelor of Law (LL.B)\",\n    \"Bachelor of Medicine Bachelor of Surgery (M.B.B.S)\",\n    \"Master of Journalism and Mass Communication (MJMC)\",\n    \"Doctor of Philosophy (Ph. D)\",\n    \"Clinical Psychology (Psy.D (Cl.Psy))\",\n    \"Master of Science (BOTANY)\",\n    \"Diploma in Medical (D.M)\",\n    \"Executive Fellow Program In Management (E.F.P.M)\",\n    \"Executive Management Programme (E.M.P)\",\n    \"NULL (EPGP)\",\n    \"Fellow Programme in Management (F.P.M)\",\n    \"FACULTY DEVELOPMENT PROGRAMME (FDP)\",\n    \"Executive Fellow Programme in Management (FELLOWSHIP)\",\n    \"FELLOW PROGRAMME IN MANAGEMENT (FELLOWSHIP)\",\n    \"FELLOW PROGRAMME IN MANAGEMENT (FPM)\",\n    \"Master of Law (LL.M)\",\n    \"Master of Arts (M.A)\",\n    \"Master of Arts (M.A. (SWDS))\",\n    \"Master of Arts in Management (M.A.M)\",\n    \"Master of Arts in Personal Management (M.A.P.M)\",\n    \"Master of Arts (M.A.S.L.P)\",\n    \"Master of Audiology & Speech Language Pathology (M.A.S.L.P)\",\n    \"Master of Arts in Theatre & Television (M.A.T.T)\",\n    \"Master of Architecture (M.Arch)\",\n    \"Master of Business Administration (M.B.A)\",\n    \"Master of Business Economics (M.B.E)\",\n    \"Master of Business Laws (M.B.L)\",\n    \"Master of Business Management (M.B.M)\",\n    \"Master of Business Studies (M.B.S)\",\n    \"Master of Computer Applications (M.C.A)\",\n    \"Master of Communication & Journalism (M.C.J)\",\n    \"Master of Comparative Laws (M.C.L)\",\n    \"Master of Computer Management (M.C.M)\",\n    \"Master of Corporate Secretaryship (M.C.S)\",\n    \"Master of Chirurgical (M.Ch)\",\n    \"Master of Commerce (M.Com)\",\n    \"Doctor of Medicine (M.D)\",\n    \"Sports Medicine (M.D)\",\n    \"Management Development Programme (M.D.P)\",\n    \"Master of Dental Surgery (M.D.S)\",\n    \"Master of Design (M.Des)\",\n    \"Master of Engineering (M.E)\",\n    \"Master of Education (M.Ed)\",\n    \"Master of education in Artificial Intelligence (M.Ed AI)\",\n    \"Master of Fine Arts (M.F.A)\",\n    \"Master of Finance & Control (M.F.C)\",\n    \"Master of Film Management (M.F.M)\",\n    \"Master of Financial Services (M.F.S)\",\n    \"Master of Fishery Science (M.F.Sc)\",\n    \"Master of Fishery Sciences (M.F.Sc)\",\n    \"Master of Foreign Trade (M.F.T)\",\n    \"Master of Hospital Administration (M.H.A)\",\n    \"Master of Hospitality & Hotel Management (M.H.H.M)\",\n    \"Master of Hospitality Management (M.H.M)\",\n    \"Master of Human Resource Management (M.H.R.M)\",\n    \"Master Of Health Science (M.H.Sc)\",\n    \"Masters of Hospitality and Tourism Management (M.H.T.M)\",\n    \"Master of International Business (M.I.B)\",\n    \"Master of Information Management (M.I.M)\",\n    \"Master of Journalism (M.J)\",\n    \"Master of Laws (M.L)\",\n    \"Master of Library and Information Science (M.L.I.Sc)\",\n    \"Master of Labour Management (M.L.M)\",\n    \"Master of Library Science (M.L.Sc)\",\n    \"Master of Marketing Management (M.M.M)\",\n    \"Master of Management Program (M.M.P)\",\n    \"Master of Management Studies (M.M.S)\",\n    \"Master of Occupational Theraphy (M.O.T)\",\n    \"Master of Performing Arts (M.P.A)\",\n    \"Master of Psychiatric Epidemiology (M.P.E)\",\n    \"Master Of Physical Education (M.P.Ed)\",\n    \"Master of Public Health (M.P.H)\",\n    \"Masters Programme in International Business (M.P.I.B)\",\n    \"Master of Performance Management (M.P.M)\",\n    \"Diploma in Prosthetics & Orthotics (M.P.O)\",\n    \"Masters in Public Systems Management (M.P.S.M)\",\n    \"Master of Physiotheraphy (M.P.T)\",\n    \"Master of Pharmacy (M.Pharma)\",\n    \"Master of Philosophy (M.Phil)\",\n    \"Master of Rehabilitation Science (M.R.Sc)\",\n    \"M.S. in Library and Information Science (M.S)\",\n    \"Master of Science (M.S)\",\n    \"Master of Social Dynamics (M.S.D)\",\n    \"Masters Programme In Sports Physiotheraphy (M.S.P.T)\",\n    \"Master of Social Work (M.S.W)\",\n    \"Master of Science (M.Sc)\",\n    \"Master of Tourism Administrations (M.T.A)\",\n    \"Master of Tourism Management (M.T.M)\",\n    \"Master of Technology (M.Tech)\",\n    \"Master of Veterinary Science (M.V.Sc)\",\n    \"Doctor of Medicine Unani (Mahir e Tibb)\",\n    \"Master of Business Administration (MBA)\",\n    \"MANAGEMENT DEVELOPMENT PROGRAMEE (MDP)\",\n    \"Master of Industrial Relation and Personal Management (MIR and PM)\",\n    \"Master of Personnel Management (MPM)\",\n    \"Master of Personal Management and Industrial Relation (MPM and IR)\",\n    \"Post Graduate Diploma (P Diplomo)\",\n    \"Post Graduate Diploma (P.G.D.D.R.M)\",\n    \"Post Graduate Diploma (P.G.D.D.T.(MD:P&N))\",\n    \"Post Graduate Diploma (P.G.D.E.I)\",\n    \"Post Graduate Diploma (P.G.D.R.P)\",\n    \"Post Graduate Diploma (P.G.D.S.E.(MR))\",\n    \"Post Graduate Programme (P.G.P)\",\n    \"Post Graduate (PG)\",\n    \"Post Graduate Diploma (PG Diploma)\",\n    \"Post Graduate Programme (PG Programme)\",\n    \"Post Graduate Diploma (PGD)\",\n    \"POST GRADUATE PROGRAME FOR EXECUTIVES (PGEXP)\",\n    \"POST-GRADUATE PROGRAMME IN MANAGEMENT (PGP)\",\n    \"POST GRADUATE PROGRAMME IN AGRIBUSINESS MANAGEMENT (PGP-ABM)\",\n    \"PUBLIC MANAGEMENT AND POLICY (PGP-PMP)\",\n    \"PGPX IN -VISIONARY LEADERSHIP IN MANUFACTURING (PGPEX-VLM)\",\n    \"POST GRADUATE PROGRAME IN MANAGEMENT (PGPM)\",\n    \"MANAGEMENT FOR EXECUTIVES (PGPX)\",\n    \"Doctor of Philosophy (Ph. D)\",\n    \"Doctor of Philosophy (Ph.D)\",\n    \"Visual Information Processing (Visual Information Processing)\",\n    \"Diploma\",\n    \"Polytechnic\",\n    \"ITI\",\n    \"High School\",\n];\n\nexport const countryList = [\n    \"India\",\n    \"Afghanistan\",\n    \"Albania\",\n    \"Algeria\",\n    \"American Samoa\",\n    \"Andorra\",\n    \"Angola\",\n    \"Anguilla\",\n    \"Antarctica\",\n    \"Antigua and Barbuda\",\n    \"Argentina\",\n    \"Armenia\",\n    \"Aruba\",\n    \"Australia\",\n    \"Austria\",\n    \"Azerbaijan\",\n    \"Bahamas (the)\",\n    \"Bahrain\",\n    \"Bangladesh\",\n    \"Barbados\",\n    \"Belarus\",\n    \"Belgium\",\n    \"Belize\",\n    \"Benin\",\n    \"Bermuda\",\n    \"Bhutan\",\n    \"Bolivia (Plurinational State of)\",\n    \"Bonaire, Sint Eustatius and Saba\",\n    \"Bosnia and Herzegovina\",\n    \"Botswana\",\n    \"Bouvet Island\",\n    \"Brazil\",\n    \"British Indian Ocean Territory (the)\",\n    \"Brunei Darussalam\",\n    \"Bulgaria\",\n    \"Burkina Faso\",\n    \"Burundi\",\n    \"Cabo Verde\",\n    \"Cambodia\",\n    \"Cameroon\",\n    \"Canada\",\n    \"Cayman Islands (the)\",\n    \"Central African Republic (the)\",\n    \"Chad\",\n    \"Chile\",\n    \"China\",\n    \"Christmas Island\",\n    \"Cocos (Keeling) Islands (the)\",\n    \"Colombia\",\n    \"Comoros (the)\",\n    \"Congo (the Democratic Republic of the)\",\n    \"Congo (the)\",\n    \"Cook Islands (the)\",\n    \"Costa Rica\",\n    \"Croatia\",\n    \"Cuba\",\n    \"Curaçao\",\n    \"Cyprus\",\n    \"Czechia\",\n    \"Côte d'Ivoire\",\n    \"Denmark\",\n    \"Djibouti\",\n    \"Dominica\",\n    \"Dominican Republic (the)\",\n    \"Ecuador\",\n    \"Egypt\",\n    \"El Salvador\",\n    \"Equatorial Guinea\",\n    \"Eritrea\",\n    \"Estonia\",\n    \"Eswatini\",\n    \"Ethiopia\",\n    \"Falkland Islands (the) [Malvinas]\",\n    \"Faroe Islands (the)\",\n    \"Fiji\",\n    \"Finland\",\n    \"France\",\n    \"French Guiana\",\n    \"French Polynesia\",\n    \"French Southern Territories (the)\",\n    \"Gabon\",\n    \"Gambia (the)\",\n    \"Georgia\",\n    \"Germany\",\n    \"Ghana\",\n    \"Gibraltar\",\n    \"Greece\",\n    \"Greenland\",\n    \"Grenada\",\n    \"Guadeloupe\",\n    \"Guam\",\n    \"Guatemala\",\n    \"Guernsey\",\n    \"Guinea\",\n    \"Guinea-Bissau\",\n    \"Guyana\",\n    \"Haiti\",\n    \"Heard Island and McDonald Islands\",\n    \"Holy See (the)\",\n    \"Honduras\",\n    \"Hong Kong\",\n    \"Hungary\",\n    \"Iceland\",\n\n    \"Indonesia\",\n    \"Iran (Islamic Republic of)\",\n    \"Iraq\",\n    \"Ireland\",\n    \"Isle of Man\",\n    \"Israel\",\n    \"Italy\",\n    \"Jamaica\",\n    \"Japan\",\n    \"Jersey\",\n    \"Jordan\",\n    \"Kazakhstan\",\n    \"Kenya\",\n    \"Kiribati\",\n    \"Korea (the Democratic People's Republic of)\",\n    \"Korea (the Republic of)\",\n    \"Kuwait\",\n    \"Kyrgyzstan\",\n    \"Lao People's Democratic Republic (the)\",\n    \"Latvia\",\n    \"Lebanon\",\n    \"Lesotho\",\n    \"Liberia\",\n    \"Libya\",\n    \"Liechtenstein\",\n    \"Lithuania\",\n    \"Luxembourg\",\n    \"Macao\",\n    \"Madagascar\",\n    \"Malawi\",\n    \"Malaysia\",\n    \"Maldives\",\n    \"Mali\",\n    \"Malta\",\n    \"Marshall Islands (the)\",\n    \"Martinique\",\n    \"Mauritania\",\n    \"Mauritius\",\n    \"Mayotte\",\n    \"Mexico\",\n    \"Micronesia (Federated States of)\",\n    \"Moldova (the Republic of)\",\n    \"Monaco\",\n    \"Mongolia\",\n    \"Montenegro\",\n    \"Montserrat\",\n    \"Morocco\",\n    \"Mozambique\",\n    \"Myanmar\",\n    \"Namibia\",\n    \"Nauru\",\n    \"Nepal\",\n    \"Netherlands (the)\",\n    \"New Caledonia\",\n    \"New Zealand\",\n    \"Nicaragua\",\n    \"Niger (the)\",\n    \"Nigeria\",\n    \"Niue\",\n    \"Norfolk Island\",\n    \"Northern Mariana Islands (the)\",\n    \"Norway\",\n    \"Oman\",\n    \"Pakistan\",\n    \"Palau\",\n    \"Palestine, State of\",\n    \"Panama\",\n    \"Papua New Guinea\",\n    \"Paraguay\",\n    \"Peru\",\n    \"Philippines (the)\",\n    \"Pitcairn\",\n    \"Poland\",\n    \"Portugal\",\n    \"Puerto Rico\",\n    \"Qatar\",\n    \"Republic of North Macedonia\",\n    \"Romania\",\n    \"Russian Federation (the)\",\n    \"Rwanda\",\n    \"Réunion\",\n    \"Saint Barthélemy\",\n    \"Saint Helena, Ascension and Tristan da Cunha\",\n    \"Saint Kitts and Nevis\",\n    \"Saint Lucia\",\n    \"Saint Martin (French part)\",\n    \"Saint Pierre and Miquelon\",\n    \"Saint Vincent and the Grenadines\",\n    \"Samoa\",\n    \"San Marino\",\n    \"Sao Tome and Principe\",\n    \"Saudi Arabia\",\n    \"Senegal\",\n    \"Serbia\",\n    \"Seychelles\",\n    \"Sierra Leone\",\n    \"Singapore\",\n    \"Sint Maarten (Dutch part)\",\n    \"Slovakia\",\n    \"Slovenia\",\n    \"Solomon Islands\",\n    \"Somalia\",\n    \"South Africa\",\n    \"South Georgia and the South Sandwich Islands\",\n    \"South Sudan\",\n    \"Spain\",\n    \"Sri Lanka\",\n    \"Sudan (the)\",\n    \"Suriname\",\n    \"Svalbard and Jan Mayen\",\n    \"Sweden\",\n    \"Switzerland\",\n    \"Syrian Arab Republic\",\n    \"Taiwan\",\n    \"Tajikistan\",\n    \"Tanzania, United Republic of\",\n    \"Thailand\",\n    \"Timor-Leste\",\n    \"Togo\",\n    \"Tokelau\",\n    \"Tonga\",\n    \"Trinidad and Tobago\",\n    \"Tunisia\",\n    \"Turkey\",\n    \"Turkmenistan\",\n    \"Turks and Caicos Islands (the)\",\n    \"Tuvalu\",\n    \"Uganda\",\n    \"Ukraine\",\n    \"United Arab Emirates (the)\",\n    \"United Kingdom of Great Britain and Northern Ireland (the)\",\n    \"United States Minor Outlying Islands (the)\",\n    \"United States of America (the)\",\n    \"Uruguay\",\n    \"Uzbekistan\",\n    \"Vanuatu\",\n    \"Venezuela (Bolivarian Republic of)\",\n    \"Viet Nam\",\n    \"Virgin Islands (British)\",\n    \"Virgin Islands (U.S.)\",\n    \"Wallis and Futuna\",\n    \"Western Sahara\",\n    \"Yemen\",\n    \"Zambia\",\n    \"Zimbabwe\",\n    \"Åland Islands\",\n];\n\nexport const statesList = {\n    states: [\n        {\n            id: \"1\",\n            type: \"Union Territory\",\n            capital: \"Mayabunder\",\n            code: \"AN\",\n            name: \"Andaman and Nicobar Islands\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Nicobar\",\n                },\n                {\n                    id: \"2\",\n                    name: \"North and Middle Andaman\",\n                },\n                {\n                    id: \"3\",\n                    name: \"South Andaman\",\n                },\n            ],\n        },\n        {\n            id: \"2\",\n            type: \"State\",\n            capital: \"Amaravati\",\n            code: \"AP\",\n            name: \"Andhra Pradesh\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Anantapur\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Chittoor\",\n                },\n                {\n                    id: \"3\",\n                    name: \"East Godavari\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Guntur\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Krishna\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Kurnool\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Nellore\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Prakasam\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Srikakulam\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Visakhapatnam\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Vizianagaram\",\n                },\n                {\n                    id: \"12\",\n                    name: \"West Godavari\",\n                },\n                {\n                    id: \"13\",\n                    name: \"YSR Kadapa\",\n                },\n            ],\n        },\n        {\n            id: \"3\",\n            type: \"State\",\n            capital: \"Itanagar\",\n            code: \"AR\",\n            name: \"Arunachal Pradesh\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Tawang\",\n                },\n                {\n                    id: \"2\",\n                    name: \"West Kameng\",\n                },\n                {\n                    id: \"3\",\n                    name: \"East Kameng\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Papum Pare\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Kurung Kumey\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Kra Daadi\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Lower Subansiri\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Upper Subansiri\",\n                },\n                {\n                    id: \"9\",\n                    name: \"West Siang\",\n                },\n                {\n                    id: \"10\",\n                    name: \"East Siang\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Siang\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Upper Siang\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Lower Siang\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Lower Dibang Valley\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Dibang Valley\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Anjaw\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Lohit\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Namsai\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Changlang\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Tirap\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Longding\",\n                },\n            ],\n        },\n        {\n            id: \"4\",\n            type: \"State\",\n            capital: \"Dispur\",\n            code: \"AS\",\n            name: \"Assam\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Baksa\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Barpeta\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Biswanath\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Bongaigaon\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Cachar\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Charaideo\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Chirang\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Darrang\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Dhemaji\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Dhubri\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Dibrugarh\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Goalpara\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Golaghat\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Hailakandi\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Hojai\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Jorhat\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Kamrup Metropolitan\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Kamrup\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Karbi Anglong\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Karimganj\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Kokrajhar\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Lakhimpur\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Majuli\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Morigaon\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Nagaon\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Nalbari\",\n                },\n                {\n                    id: \"27\",\n                    name: \"Dima Hasao\",\n                },\n                {\n                    id: \"28\",\n                    name: \"Sivasagar\",\n                },\n                {\n                    id: \"29\",\n                    name: \"Sonitpur\",\n                },\n                {\n                    id: \"30\",\n                    name: \"South Salmara-Mankachar\",\n                },\n                {\n                    id: \"31\",\n                    name: \"Tinsukia\",\n                },\n                {\n                    id: \"32\",\n                    name: \"Udalguri\",\n                },\n                {\n                    id: \"33\",\n                    name: \"West Karbi Anglong\",\n                },\n            ],\n        },\n        {\n            id: \"5\",\n            type: \"State\",\n            capital: \"Patna\",\n            code: \"BR\",\n            name: \"Bihar\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Araria\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Arwal\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Aurangabad\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Banka\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Begusarai\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Bhagalpur\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Bhojpur\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Buxar\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Darbhanga\",\n                },\n                {\n                    id: \"10\",\n                    name: \"East Champaran (Motihari)\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Gaya\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Gopalganj\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Jamui\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Jehanabad\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Kaimur (Bhabua)\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Katihar\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Khagaria\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Kishanganj\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Lakhisarai\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Madhepura\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Madhubani\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Munger (Monghyr)\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Muzaffarpur\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Nalanda\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Nawada\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Patna\",\n                },\n                {\n                    id: \"27\",\n                    name: \"Purnia (Purnea)\",\n                },\n                {\n                    id: \"28\",\n                    name: \"Rohtas\",\n                },\n                {\n                    id: \"29\",\n                    name: \"Saharsa\",\n                },\n                {\n                    id: \"30\",\n                    name: \"Samastipur\",\n                },\n                {\n                    id: \"31\",\n                    name: \"Saran\",\n                },\n                {\n                    id: \"32\",\n                    name: \"Sheikhpura\",\n                },\n                {\n                    id: \"33\",\n                    name: \"Sheohar\",\n                },\n                {\n                    id: \"34\",\n                    name: \"Sitamarhi\",\n                },\n                {\n                    id: \"35\",\n                    name: \"Siwan\",\n                },\n                {\n                    id: \"36\",\n                    name: \"Supaul\",\n                },\n                {\n                    id: \"37\",\n                    name: \"Vaishali\",\n                },\n                {\n                    id: \"38\",\n                    name: \"West Champaran\",\n                },\n            ],\n        },\n        {\n            id: \"6\",\n            type: \"Union Territory\",\n            capital: \"Chandigarh\",\n            code: \"CG\",\n            name: \"Chandigarh\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Chandigarh\",\n                },\n            ],\n        },\n        {\n            id: \"7\",\n            type: \"State\",\n            capital: \"Bilaspur (Judiciary), Raipur\",\n            code: \"CH\",\n            name: \"Chhattisgarh\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Balod\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Baloda Bazar\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Balrampur\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Bastar\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Bemetara\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Bijapur\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Bilaspur\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Dantewada (South Bastar)\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Dhamtari\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Durg\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Gariyaband\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Janjgir-Champa\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Jashpur\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Kabirdham (Kawardha)\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Kanker (North Bastar)\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Kondagaon\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Korba\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Korea (Koriya)\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Mahasamund\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Mungeli\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Narayanpur\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Raigarh\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Raipur\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Rajnandgaon\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Sukma\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Surajpur  \",\n                },\n                {\n                    id: \"27\",\n                    name: \"Surguja\",\n                },\n            ],\n        },\n        {\n            id: \"8\",\n            type: \"Union Territory\",\n            capital: \"Silvassa\",\n            code: \"DH\",\n            name: \"Dadra and Nagar Haveli\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Dadra & Nagar Haveli\",\n                },\n            ],\n        },\n        {\n            id: \"9\",\n            type: \"Union Territory\",\n            capital: \"Daman\",\n            code: \"DD\",\n            name: \"Daman and Diu\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Daman\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Diu\",\n                },\n            ],\n        },\n        {\n            id: \"10\",\n            type: \"National Capital Territory\",\n            capital: \"New Delhi\",\n            code: \"DL\",\n            name: \"Delhi\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Central Delhi\",\n                },\n                {\n                    id: \"2\",\n                    name: \"East Delhi\",\n                },\n                {\n                    id: \"3\",\n                    name: \"New Delhi\",\n                },\n                {\n                    id: \"4\",\n                    name: \"North Delhi\",\n                },\n                {\n                    id: \"5\",\n                    name: \"North East  Delhi\",\n                },\n                {\n                    id: \"6\",\n                    name: \"North West  Delhi\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Shahdara\",\n                },\n                {\n                    id: \"8\",\n                    name: \"South Delhi\",\n                },\n                {\n                    id: \"9\",\n                    name: \"South East Delhi\",\n                },\n                {\n                    id: \"10\",\n                    name: \"South West  Delhi\",\n                },\n                {\n                    id: \"11\",\n                    name: \"West Delhi\",\n                },\n            ],\n        },\n        {\n            id: \"11\",\n            type: \"State\",\n            capital: \"Panaji\",\n            code: \"GA\",\n            name: \"Goa\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"North Goa\",\n                },\n                {\n                    id: \"2\",\n                    name: \"South Goa\",\n                },\n            ],\n        },\n        {\n            id: \"12\",\n            type: \"State\",\n            capital: \"Gandhinagar\",\n            code: \"GJ\",\n            name: \"Gujarat\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Ahmedabad\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Amreli\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Anand\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Aravalli\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Banaskantha (Palanpur)\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Bharuch\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Bhavnagar\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Botad\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Chhota Udepur\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Dahod\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Dangs (Ahwa)\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Devbhoomi Dwarka\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Gandhinagar\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Gir Somnath\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Jamnagar\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Junagadh\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Kachchh\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Kheda (Nadiad)\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Mahisagar\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Mehsana\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Morbi\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Narmada (Rajpipla)\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Navsari\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Panchmahal (Godhra)\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Patan\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Porbandar\",\n                },\n                {\n                    id: \"27\",\n                    name: \"Rajkot\",\n                },\n                {\n                    id: \"28\",\n                    name: \"Sabarkantha (Himmatnagar)\",\n                },\n                {\n                    id: \"29\",\n                    name: \"Surat\",\n                },\n                {\n                    id: \"30\",\n                    name: \"Surendranagar\",\n                },\n                {\n                    id: \"31\",\n                    name: \"Tapi (Vyara)\",\n                },\n                {\n                    id: \"32\",\n                    name: \"Vadodara\",\n                },\n                {\n                    id: \"33\",\n                    name: \"Valsad\",\n                },\n            ],\n        },\n        {\n            id: \"13\",\n            type: \"State\",\n            capital: \"Chandigarh\",\n            code: \"HR\",\n            name: \"Haryana\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Ambala\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Bhiwani\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Charkhi Dadri\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Faridabad\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Fatehabad\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Gurgaon\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Hisar\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Jhajjar\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Jind\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Kaithal\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Karnal\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Kurukshetra\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Mahendragarh\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Mewat\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Palwal\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Panchkula\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Panipat\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Rewari\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Rohtak\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Sirsa\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Sonipat\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Yamunanagar\",\n                },\n            ],\n        },\n        {\n            id: \"14\",\n            type: \"State\",\n            capital: \"Shimla\",\n            code: \"HP\",\n            name: \"Himachal Pradesh\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Bilaspur\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Chamba\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Hamirpur\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Kangra\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Kinnaur\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Kullu\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Lahaul &amp; Spiti\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Mandi\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Shimla\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Sirmaur (Sirmour)\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Solan\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Una\",\n                },\n            ],\n        },\n        {\n            id: \"15\",\n            type: \"Union Territory\",\n            capital: \"Jammu (Winter), Srinagar (Summer)\",\n            code: \"JK\",\n            name: \"Jammu and Kashmir\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Anantnag\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Bandipore\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Baramulla\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Budgam\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Doda\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Ganderbal\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Jammu\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Kargil\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Kathua\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Kishtwar\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Kulgam\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Kupwara\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Leh\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Poonch\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Pulwama\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Rajouri\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Ramban\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Reasi\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Samba\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Shopian\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Srinagar\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Udhampur\",\n                },\n            ],\n        },\n        {\n            id: \"16\",\n            type: \"State\",\n            capital: \"Ranchi\",\n            code: \"JH\",\n            name: \"Jharkhand\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Bokaro\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Chatra\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Deoghar\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Dhanbad\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Dumka\",\n                },\n                {\n                    id: \"6\",\n                    name: \"East Singhbhum\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Garhwa\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Giridih\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Godda\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Gumla\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Hazaribag\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Jamtara\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Khunti\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Koderma\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Latehar\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Lohardaga\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Pakur\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Palamu\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Ramgarh\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Ranchi\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Sahibganj\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Seraikela-Kharsawan\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Simdega\",\n                },\n                {\n                    id: \"24\",\n                    name: \"West Singhbhum\",\n                },\n            ],\n        },\n        {\n            id: \"17\",\n            type: \"State\",\n            capital: \"Bengaluru\",\n            code: \"KA\",\n            name: \"Karnataka\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Bagalkot\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Ballari \",\n                },\n                {\n                    id: \"3\",\n                    name: \"Belagavi\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Bengaluru Rural\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Bengaluru Urban\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Bidar\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Chamarajanagar\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Chikballapur\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Chikkamagaluru\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Chitradurga\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Dakshina Kannada\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Davangere\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Dharwad\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Gadag\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Hassan\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Haveri\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Kalaburagi\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Kodagu\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Kolar\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Koppal\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Mandya\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Mysuru\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Raichur\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Ramanagara\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Shivamogga\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Tumakuru\",\n                },\n                {\n                    id: \"27\",\n                    name: \"Udupi\",\n                },\n                {\n                    id: \"28\",\n                    name: \"Uttara Kannada (Karwar)\",\n                },\n                {\n                    id: \"29\",\n                    name: \"Vijayapura\",\n                },\n                {\n                    id: \"30\",\n                    name: \"Yadgir\",\n                },\n            ],\n        },\n        {\n            id: \"18\",\n            type: \"State\",\n            capital: \"Thiruvananthapuram\",\n            code: \"KL\",\n            name: \"Kerala\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Alappuzha\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Ernakulam\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Idukki\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Kannur\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Kasaragod\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Kollam\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Kottayam\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Kozhikode\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Malappuram\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Palakkad\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Pathanamthitta\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Thiruvananthapuram\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Thrissur\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Wayanad\",\n                },\n            ],\n        },\n        {\n            id: \"19\",\n            type: \"Union Territory\",\n            capital: \"Leh, Kargil\",\n            code: \"LA\",\n            name: \"Ladakh\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Kargil\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Leh\",\n                },\n            ],\n        },\n        {\n            id: \"20\",\n            type: \"Union Territory\",\n            capital: \"Kavaratti\",\n            code: \"LD\",\n            name: \"Lakshadweep\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Agatti\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Amini\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Androth\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Bithra\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Chethlath\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Kavaratti\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Kadmath\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Kalpeni\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Kilthan\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Minicoy\",\n                },\n            ],\n        },\n        {\n            id: \"21\",\n            type: \"State\",\n            capital: \"Bhopal\",\n            code: \"MP\",\n            name: \"Madhya Pradesh\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Agar Malwa\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Alirajpur\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Anuppur\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Ashoknagar\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Balaghat\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Barwani\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Betul\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Bhind\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Bhopal\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Burhanpur\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Chhatarpur\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Chhindwara\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Damoh\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Datia\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Dewas\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Dhar\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Dindori\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Guna\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Gwalior\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Harda\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Hoshangabad\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Indore\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Jabalpur\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Jhabua\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Katni\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Khandwa\",\n                },\n                {\n                    id: \"27\",\n                    name: \"Khargone\",\n                },\n                {\n                    id: \"28\",\n                    name: \"Mandla\",\n                },\n                {\n                    id: \"29\",\n                    name: \"Mandsaur\",\n                },\n                {\n                    id: \"30\",\n                    name: \"Morena\",\n                },\n                {\n                    id: \"31\",\n                    name: \"Narsinghpur\",\n                },\n                {\n                    id: \"32\",\n                    name: \"Neemuch\",\n                },\n                {\n                    id: \"33\",\n                    name: \"Panna\",\n                },\n                {\n                    id: \"34\",\n                    name: \"Raisen\",\n                },\n                {\n                    id: \"35\",\n                    name: \"Rajgarh\",\n                },\n                {\n                    id: \"36\",\n                    name: \"Ratlam\",\n                },\n                {\n                    id: \"37\",\n                    name: \"Rewa\",\n                },\n                {\n                    id: \"38\",\n                    name: \"Sagar\",\n                },\n                {\n                    id: \"39\",\n                    name: \"Satna\",\n                },\n                {\n                    id: \"40\",\n                    name: \"Sehore\",\n                },\n                {\n                    id: \"41\",\n                    name: \"Seoni\",\n                },\n                {\n                    id: \"42\",\n                    name: \"Shahdol\",\n                },\n                {\n                    id: \"43\",\n                    name: \"Shajapur\",\n                },\n                {\n                    id: \"44\",\n                    name: \"Sheopur\",\n                },\n                {\n                    id: \"45\",\n                    name: \"Shivpuri\",\n                },\n                {\n                    id: \"46\",\n                    name: \"Sidhi\",\n                },\n                {\n                    id: \"47\",\n                    name: \"Singrauli\",\n                },\n                {\n                    id: \"48\",\n                    name: \"Tikamgarh\",\n                },\n                {\n                    id: \"49\",\n                    name: \"Ujjain\",\n                },\n                {\n                    id: \"50\",\n                    name: \"Umaria\",\n                },\n                {\n                    id: \"51\",\n                    name: \"Vidisha\",\n                },\n            ],\n        },\n        {\n            id: \"22\",\n            type: \"State\",\n            capital: \"Mumbai\",\n            code: \"MH\",\n            name: \"Maharashtra\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Ahmednagar\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Akola\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Amravati\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Aurangabad\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Beed\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Bhandara\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Buldhana\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Chandrapur\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Dhule\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Gadchiroli\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Gondia\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Hingoli\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Jalgaon\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Jalna\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Kolhapur\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Latur\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Mumbai City\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Mumbai Suburban\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Nagpur\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Nanded\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Nandurbar\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Nashik\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Osmanabad\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Palghar\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Parbhani\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Pune\",\n                },\n                {\n                    id: \"27\",\n                    name: \"Raigad\",\n                },\n                {\n                    id: \"28\",\n                    name: \"Ratnagiri\",\n                },\n                {\n                    id: \"29\",\n                    name: \"Sangli\",\n                },\n                {\n                    id: \"30\",\n                    name: \"Satara\",\n                },\n                {\n                    id: \"31\",\n                    name: \"Sindhudurg\",\n                },\n                {\n                    id: \"32\",\n                    name: \"Solapur\",\n                },\n                {\n                    id: \"33\",\n                    name: \"Thane\",\n                },\n                {\n                    id: \"34\",\n                    name: \"Wardha\",\n                },\n                {\n                    id: \"35\",\n                    name: \"Washim\",\n                },\n                {\n                    id: \"36\",\n                    name: \"Yavatmal\",\n                },\n            ],\n        },\n        {\n            id: \"23\",\n            type: \"State\",\n            capital: \"Imphal\",\n            code: \"MN\",\n            name: \"Manipur\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Bishnupur\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Chandel\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Churachandpur\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Imphal East\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Imphal West\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Jiribam\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Kakching\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Kamjong\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Kangpokpi\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Noney\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Pherzawl\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Senapati\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Tamenglong\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Tengnoupal\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Thoubal\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Ukhrul\",\n                },\n            ],\n        },\n        {\n            id: \"24\",\n            type: \"State\",\n            capital: \"Shillong\",\n            code: \"ML\",\n            name: \"Meghalaya\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"East Garo Hills\",\n                },\n                {\n                    id: \"2\",\n                    name: \"East Jaintia Hills\",\n                },\n                {\n                    id: \"3\",\n                    name: \"East Khasi Hills\",\n                },\n                {\n                    id: \"4\",\n                    name: \"North Garo Hills\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Ri Bhoi\",\n                },\n                {\n                    id: \"6\",\n                    name: \"South Garo Hills\",\n                },\n                {\n                    id: \"7\",\n                    name: \"South West Garo Hills \",\n                },\n                {\n                    id: \"8\",\n                    name: \"South West Khasi Hills\",\n                },\n                {\n                    id: \"9\",\n                    name: \"West Garo Hills\",\n                },\n                {\n                    id: \"10\",\n                    name: \"West Jaintia Hills\",\n                },\n                {\n                    id: \"11\",\n                    name: \"West Khasi Hills\",\n                },\n            ],\n        },\n        {\n            id: \"25\",\n            type: \"State\",\n            capital: \"Aizawl\",\n            code: \"MZ\",\n            name: \"Mizoram\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Aizawl\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Champhai\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Kolasib\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Lawngtlai\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Lunglei\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Mamit\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Saiha\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Serchhip\",\n                },\n            ],\n        },\n        {\n            id: \"26\",\n            type: \"State\",\n            capital: \"Kohima\",\n            code: \"NL\",\n            name: \"Nagaland\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Dimapur\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Kiphire\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Kohima\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Longleng\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Mokokchung\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Mon\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Peren\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Phek\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Tuensang\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Wokha\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Zunheboto\",\n                },\n            ],\n        },\n        {\n            id: \"27\",\n            type: \"State\",\n            capital: \"Bhubaneswar\",\n            code: \"OR\",\n            name: \"Odisha\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Angul\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Balangir\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Balasore\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Bargarh\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Bhadrak\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Boudh\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Cuttack\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Deogarh\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Dhenkanal\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Gajapati\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Ganjam\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Jagatsinghapur\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Jajpur\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Jharsuguda\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Kalahandi\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Kandhamal\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Kendrapara\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Kendujhar (Keonjhar)\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Khordha\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Koraput\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Malkangiri\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Mayurbhanj\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Nabarangpur\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Nayagarh\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Nuapada\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Puri\",\n                },\n                {\n                    id: \"27\",\n                    name: \"Rayagada\",\n                },\n                {\n                    id: \"28\",\n                    name: \"Sambalpur\",\n                },\n                {\n                    id: \"29\",\n                    name: \"Sonepur\",\n                },\n                {\n                    id: \"30\",\n                    name: \"Sundargarh\",\n                },\n            ],\n        },\n        {\n            id: \"28\",\n            type: \"Union Territory\",\n            capital: \"Puducherry\",\n            code: \"PY\",\n            name: \"Puducherry\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Karaikal\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Mahe\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Pondicherry\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Yanam\",\n                },\n            ],\n        },\n        {\n            id: \"29\",\n            type: \"State\",\n            capital: \"Chandigarh\",\n            code: \"PB\",\n            name: \"Punjab\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Amritsar\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Barnala\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Bathinda\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Faridkot\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Fatehgarh Sahib\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Fazilka\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Ferozepur\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Gurdaspur\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Hoshiarpur\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Jalandhar\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Kapurthala\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Ludhiana\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Mansa\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Moga\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Muktsar\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Nawanshahr (Shahid Bhagat Singh Nagar)\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Pathankot\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Patiala\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Rupnagar\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Sahibzada Ajit Singh Nagar (Mohali)\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Sangrur\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Tarn Taran\",\n                },\n            ],\n        },\n        {\n            id: \"30\",\n            type: \"State\",\n            capital: \"Jaipur\",\n            code: \"RJ\",\n            name: \"Rajasthan\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Ajmer\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Alwar\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Banswara\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Baran\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Barmer\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Bharatpur\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Bhilwara\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Bikaner\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Bundi\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Chittorgarh\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Churu\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Dausa\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Dholpur\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Dungarpur\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Hanumangarh\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Jaipur\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Jaisalmer\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Jalore\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Jhalawar\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Jhunjhunu\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Jodhpur\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Karauli\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Kota\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Nagaur\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Pali\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Pratapgarh\",\n                },\n                {\n                    id: \"27\",\n                    name: \"Rajsamand\",\n                },\n                {\n                    id: \"28\",\n                    name: \"Sawai Madhopur\",\n                },\n                {\n                    id: \"29\",\n                    name: \"Sikar\",\n                },\n                {\n                    id: \"30\",\n                    name: \"Sirohi\",\n                },\n                {\n                    id: \"31\",\n                    name: \"Sri Ganganagar\",\n                },\n                {\n                    id: \"32\",\n                    name: \"Tonk\",\n                },\n                {\n                    id: \"33\",\n                    name: \"Udaipur\",\n                },\n            ],\n        },\n        {\n            id: \"31\",\n            type: \"State\",\n            capital: \"Gangtok\",\n            code: \"SK\",\n            name: \"Sikkim\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"East Sikkim\",\n                },\n                {\n                    id: \"2\",\n                    name: \"North Sikkim\",\n                },\n                {\n                    id: \"3\",\n                    name: \"South Sikkim\",\n                },\n                {\n                    id: \"4\",\n                    name: \"West Sikkim\",\n                },\n            ],\n        },\n        {\n            id: \"32\",\n            type: \"State\",\n            capital: \"Chennai\",\n            code: \"TN\",\n            name: \"Tamil Nadu\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Ariyalur\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Chennai\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Coimbatore\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Cuddalore\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Dharmapuri\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Dindigul\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Erode\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Kanchipuram\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Kanyakumari\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Karur\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Krishnagiri\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Madurai\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Nagapattinam\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Namakkal\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Nilgiris\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Perambalur\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Pudukkottai\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Ramanathapuram\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Salem\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Sivaganga\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Thanjavur\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Theni\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Thoothukudi (Tuticorin)\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Tiruchirappalli\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Tirunelveli\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Tiruppur\",\n                },\n                {\n                    id: \"27\",\n                    name: \"Tiruvallur\",\n                },\n                {\n                    id: \"28\",\n                    name: \"Tiruvannamalai\",\n                },\n                {\n                    id: \"29\",\n                    name: \"Tiruvarur\",\n                },\n                {\n                    id: \"30\",\n                    name: \"Vellore\",\n                },\n                {\n                    id: \"31\",\n                    name: \"Viluppuram\",\n                },\n                {\n                    id: \"32\",\n                    name: \"Virudhunagar\",\n                },\n            ],\n        },\n        {\n            id: \"33\",\n            type: \"State\",\n            capital: \"Hyderabad\",\n            code: \"TS\",\n            name: \"Telangana\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Adilabad\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Bhadradri Kothagudem\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Hyderabad\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Jagtial\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Jangaon\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Jayashankar Bhoopalpally\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Jogulamba Gadwal\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Kamareddy\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Karimnagar\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Khammam\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Komaram Bheem Asifabad\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Mahabubabad\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Mahabubnagar\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Mancherial\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Medak\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Medchal\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Nagarkurnool\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Nalgonda\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Nirmal\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Nizamabad\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Peddapalli\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Rajanna Sircilla\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Rangareddy\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Sangareddy\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Siddipet\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Suryapet\",\n                },\n                {\n                    id: \"27\",\n                    name: \"Vikarabad\",\n                },\n                {\n                    id: \"28\",\n                    name: \"Wanaparthy\",\n                },\n                {\n                    id: \"29\",\n                    name: \"Warangal (Rural)\",\n                },\n                {\n                    id: \"30\",\n                    name: \"Warangal (Urban)\",\n                },\n                {\n                    id: \"31\",\n                    name: \"Yadadri Bhuvanagiri\",\n                },\n            ],\n        },\n        {\n            id: \"34\",\n            type: \"State\",\n            capital: \"Agartala\",\n            code: \"TR\",\n            name: \"Tripura\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Dhalai\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Gomati\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Khowai\",\n                },\n                {\n                    id: \"4\",\n                    name: \"North Tripura\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Sepahijala\",\n                },\n                {\n                    id: \"6\",\n                    name: \"South Tripura\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Unakoti\",\n                },\n                {\n                    id: \"8\",\n                    name: \"West Tripura\",\n                },\n            ],\n        },\n        {\n            id: \"35\",\n            type: \"State\",\n            capital: \"Lucknow\",\n            code: \"UP\",\n            name: \"Uttar Pradesh\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Agra\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Aligarh\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Allahabad\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Ambedkar Nagar\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Amethi (Chatrapati Sahuji Mahraj Nagar)\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Amroha (J.P. Nagar)\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Auraiya\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Azamgarh\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Baghpat\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Bahraich\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Ballia\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Balrampur\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Banda\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Barabanki\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Bareilly\",\n                },\n                {\n                    id: \"16\",\n                    name: \"Basti\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Bhadohi\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Bijnor\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Budaun\",\n                },\n                {\n                    id: \"20\",\n                    name: \"Bulandshahr\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Chandauli\",\n                },\n                {\n                    id: \"22\",\n                    name: \"Chitrakoot\",\n                },\n                {\n                    id: \"23\",\n                    name: \"Deoria\",\n                },\n                {\n                    id: \"24\",\n                    name: \"Etah\",\n                },\n                {\n                    id: \"25\",\n                    name: \"Etawah\",\n                },\n                {\n                    id: \"26\",\n                    name: \"Faizabad\",\n                },\n                {\n                    id: \"27\",\n                    name: \"Farrukhabad\",\n                },\n                {\n                    id: \"28\",\n                    name: \"Fatehpur\",\n                },\n                {\n                    id: \"29\",\n                    name: \"Firozabad\",\n                },\n                {\n                    id: \"30\",\n                    name: \"Gautam Buddha Nagar\",\n                },\n                {\n                    id: \"31\",\n                    name: \"Ghaziabad\",\n                },\n                {\n                    id: \"32\",\n                    name: \"Ghazipur\",\n                },\n                {\n                    id: \"33\",\n                    name: \"Gonda\",\n                },\n                {\n                    id: \"34\",\n                    name: \"Gorakhpur\",\n                },\n                {\n                    id: \"35\",\n                    name: \"Hamirpur\",\n                },\n                {\n                    id: \"36\",\n                    name: \"Hapur (Panchsheel Nagar)\",\n                },\n                {\n                    id: \"37\",\n                    name: \"Hardoi\",\n                },\n                {\n                    id: \"38\",\n                    name: \"Hathras\",\n                },\n                {\n                    id: \"39\",\n                    name: \"Jalaun\",\n                },\n                {\n                    id: \"40\",\n                    name: \"Jaunpur\",\n                },\n                {\n                    id: \"41\",\n                    name: \"Jhansi\",\n                },\n                {\n                    id: \"42\",\n                    name: \"Kannauj\",\n                },\n                {\n                    id: \"43\",\n                    name: \"Kanpur Dehat\",\n                },\n                {\n                    id: \"44\",\n                    name: \"Kanpur Nagar\",\n                },\n                {\n                    id: \"45\",\n                    name: \"Kanshiram Nagar (Kasganj)\",\n                },\n                {\n                    id: \"46\",\n                    name: \"Kaushambi\",\n                },\n                {\n                    id: \"47\",\n                    name: \"Kushinagar (Padrauna)\",\n                },\n                {\n                    id: \"48\",\n                    name: \"Lakhimpur - Kheri\",\n                },\n                {\n                    id: \"49\",\n                    name: \"Lalitpur\",\n                },\n                {\n                    id: \"50\",\n                    name: \"Lucknow\",\n                },\n                {\n                    id: \"51\",\n                    name: \"Maharajganj\",\n                },\n                {\n                    id: \"52\",\n                    name: \"Mahoba\",\n                },\n                {\n                    id: \"53\",\n                    name: \"Mainpuri\",\n                },\n                {\n                    id: \"54\",\n                    name: \"Mathura\",\n                },\n                {\n                    id: \"55\",\n                    name: \"Mau\",\n                },\n                {\n                    id: \"56\",\n                    name: \"Meerut\",\n                },\n                {\n                    id: \"57\",\n                    name: \"Mirzapur\",\n                },\n                {\n                    id: \"58\",\n                    name: \"Moradabad\",\n                },\n                {\n                    id: \"59\",\n                    name: \"Muzaffarnagar\",\n                },\n                {\n                    id: \"60\",\n                    name: \"Pilibhit\",\n                },\n                {\n                    id: \"61\",\n                    name: \"Pratapgarh\",\n                },\n                {\n                    id: \"62\",\n                    name: \"RaeBareli\",\n                },\n                {\n                    id: \"63\",\n                    name: \"Rampur\",\n                },\n                {\n                    id: \"64\",\n                    name: \"Saharanpur\",\n                },\n                {\n                    id: \"65\",\n                    name: \"Sambhal (Bhim Nagar)\",\n                },\n                {\n                    id: \"66\",\n                    name: \"Sant Kabir Nagar\",\n                },\n                {\n                    id: \"67\",\n                    name: \"Shahjahanpur\",\n                },\n                {\n                    id: \"68\",\n                    name: \"Shamali (Prabuddh Nagar)\",\n                },\n                {\n                    id: \"69\",\n                    name: \"Shravasti\",\n                },\n                {\n                    id: \"70\",\n                    name: \"Siddharth Nagar\",\n                },\n                {\n                    id: \"71\",\n                    name: \"Sitapur\",\n                },\n                {\n                    id: \"72\",\n                    name: \"Sonbhadra\",\n                },\n                {\n                    id: \"73\",\n                    name: \"Sultanpur\",\n                },\n                {\n                    id: \"74\",\n                    name: \"Unnao\",\n                },\n                {\n                    id: \"75\",\n                    name: \"Varanasi\",\n                },\n            ],\n        },\n        {\n            id: \"36\",\n            type: \"State\",\n            capital: \"Dehradun\",\n            code: \"UK\",\n            name: \"Uttarakhand\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Almora\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Bageshwar\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Chamoli\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Champawat\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Dehradun\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Haridwar\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Nainital\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Pauri Garhwal\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Pithoragarh\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Rudraprayag\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Tehri Garhwal\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Udham Singh Nagar\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Uttarkashi\",\n                },\n            ],\n        },\n        {\n            id: \"37\",\n            type: \"State\",\n            capital: \"Kolkata\",\n            code: \"WB\",\n            name: \"West Bengal\",\n            districts: [\n                {\n                    id: \"1\",\n                    name: \"Alipurduar\",\n                },\n                {\n                    id: \"2\",\n                    name: \"Bankura\",\n                },\n                {\n                    id: \"3\",\n                    name: \"Birbhum\",\n                },\n                {\n                    id: \"4\",\n                    name: \"Burdwan (Bardhaman)\",\n                },\n                {\n                    id: \"5\",\n                    name: \"Cooch Behar\",\n                },\n                {\n                    id: \"6\",\n                    name: \"Dakshin Dinajpur (South Dinajpur)\",\n                },\n                {\n                    id: \"7\",\n                    name: \"Darjeeling\",\n                },\n                {\n                    id: \"8\",\n                    name: \"Hooghly\",\n                },\n                {\n                    id: \"9\",\n                    name: \"Howrah\",\n                },\n                {\n                    id: \"10\",\n                    name: \"Jalpaiguri\",\n                },\n                {\n                    id: \"11\",\n                    name: \"Kalimpong\",\n                },\n                {\n                    id: \"12\",\n                    name: \"Kolkata\",\n                },\n                {\n                    id: \"13\",\n                    name: \"Malda\",\n                },\n                {\n                    id: \"14\",\n                    name: \"Murshidabad\",\n                },\n                {\n                    id: \"15\",\n                    name: \"Nadia\",\n                },\n                {\n                    id: \"16\",\n                    name: \"North 24 Parganas\",\n                },\n                {\n                    id: \"17\",\n                    name: \"Paschim Medinipur (West Medinipur)\",\n                },\n                {\n                    id: \"18\",\n                    name: \"Purba Medinipur (East Medinipur)\",\n                },\n                {\n                    id: \"19\",\n                    name: \"Purulia\",\n                },\n                {\n                    id: \"20\",\n                    name: \"South 24 Parganas\",\n                },\n                {\n                    id: \"21\",\n                    name: \"Uttar Dinajpur (North Dinajpur)\",\n                },\n            ],\n        },\n    ],\n};\n\nexport const currencyList = [\n    { cc: \"INR\", symbol: \"\\u20B9\", name: \"Indian rupee\" },\n    { cc: \"AED\", symbol: \"\\u062f.\\u0625;\", name: \"UAE dirham\" },\n    { cc: \"AFN\", symbol: \"Afs\", name: \"Afghan afghani\" },\n    { cc: \"ALL\", symbol: \"L\", name: \"Albanian lek\" },\n    { cc: \"AMD\", symbol: \"AMD\", name: \"Armenian dram\" },\n    { cc: \"ANG\", symbol: \"NA\\u0192\", name: \"Netherlands Antillean gulden\" },\n    { cc: \"AOA\", symbol: \"Kz\", name: \"Angolan kwanza\" },\n    { cc: \"ARS\", symbol: \"$\", name: \"Argentine peso\" },\n    { cc: \"AUD\", symbol: \"$\", name: \"Australian dollar\" },\n    { cc: \"AWG\", symbol: \"\\u0192\", name: \"Aruban florin\" },\n    { cc: \"AZN\", symbol: \"AZN\", name: \"Azerbaijani manat\" },\n    {\n        cc: \"BAM\",\n        symbol: \"KM\",\n        name: \"Bosnia and Herzegovina konvertibilna marka\",\n    },\n    { cc: \"BBD\", symbol: \"Bds$\", name: \"Barbadian dollar\" },\n    { cc: \"BDT\", symbol: \"\\u09f3\", name: \"Bangladeshi taka\" },\n    { cc: \"BGN\", symbol: \"BGN\", name: \"Bulgarian lev\" },\n    { cc: \"BHD\", symbol: \".\\u062f.\\u0628\", name: \"Bahraini dinar\" },\n    { cc: \"BIF\", symbol: \"FBu\", name: \"Burundi franc\" },\n    { cc: \"BMD\", symbol: \"BD$\", name: \"Bermudian dollar\" },\n    { cc: \"BND\", symbol: \"B$\", name: \"Brunei dollar\" },\n    { cc: \"BOB\", symbol: \"Bs.\", name: \"Bolivian boliviano\" },\n    { cc: \"BRL\", symbol: \"R$\", name: \"Brazilian real\" },\n    { cc: \"BSD\", symbol: \"B$\", name: \"Bahamian dollar\" },\n    { cc: \"BTN\", symbol: \"Nu.\", name: \"Bhutanese ngultrum\" },\n    { cc: \"BWP\", symbol: \"P\", name: \"Botswana pula\" },\n    { cc: \"BYR\", symbol: \"Br\", name: \"Belarusian ruble\" },\n    { cc: \"BZD\", symbol: \"BZ$\", name: \"Belize dollar\" },\n    { cc: \"CAD\", symbol: \"$\", name: \"Canadian dollar\" },\n    { cc: \"CDF\", symbol: \"F\", name: \"Congolese franc\" },\n    { cc: \"CHF\", symbol: \"Fr.\", name: \"Swiss franc\" },\n    { cc: \"CLP\", symbol: \"$\", name: \"Chilean peso\" },\n    { cc: \"CNY\", symbol: \"\\u00a5\", name: \"Chinese/Yuan renminbi\" },\n    { cc: \"COP\", symbol: \"Col$\", name: \"Colombian peso\" },\n    { cc: \"CRC\", symbol: \"\\u20a1\", name: \"Costa Rican colon\" },\n    { cc: \"CUC\", symbol: \"$\", name: \"Cuban peso\" },\n    { cc: \"CVE\", symbol: \"Esc\", name: \"Cape Verdean escudo\" },\n    { cc: \"CZK\", symbol: \"K\\u010d\", name: \"Czech koruna\" },\n    { cc: \"DJF\", symbol: \"Fdj\", name: \"Djiboutian franc\" },\n    { cc: \"DKK\", symbol: \"Kr\", name: \"Danish krone\" },\n    { cc: \"DOP\", symbol: \"RD$\", name: \"Dominican peso\" },\n    { cc: \"DZD\", symbol: \"\\u062f.\\u062c\", name: \"Algerian dinar\" },\n    { cc: \"EEK\", symbol: \"KR\", name: \"Estonian kroon\" },\n    { cc: \"EGP\", symbol: \"\\u00a3\", name: \"Egyptian pound\" },\n    { cc: \"ERN\", symbol: \"Nfa\", name: \"Eritrean nakfa\" },\n    { cc: \"ETB\", symbol: \"Br\", name: \"Ethiopian birr\" },\n    { cc: \"EUR\", symbol: \"\\u20ac\", name: \"European Euro\" },\n    { cc: \"FJD\", symbol: \"FJ$\", name: \"Fijian dollar\" },\n    { cc: \"FKP\", symbol: \"\\u00a3\", name: \"Falkland Islands pound\" },\n    { cc: \"GBP\", symbol: \"\\u00a3\", name: \"British pound\" },\n    { cc: \"GEL\", symbol: \"GEL\", name: \"Georgian lari\" },\n    { cc: \"GHS\", symbol: \"GH\\u20b5\", name: \"Ghanaian cedi\" },\n    { cc: \"GIP\", symbol: \"\\u00a3\", name: \"Gibraltar pound\" },\n    { cc: \"GMD\", symbol: \"D\", name: \"Gambian dalasi\" },\n    { cc: \"GNF\", symbol: \"FG\", name: \"Guinean franc\" },\n    { cc: \"GQE\", symbol: \"CFA\", name: \"Central African CFA franc\" },\n    { cc: \"GTQ\", symbol: \"Q\", name: \"Guatemalan quetzal\" },\n    { cc: \"GYD\", symbol: \"GY$\", name: \"Guyanese dollar\" },\n    { cc: \"HKD\", symbol: \"HK$\", name: \"Hong Kong dollar\" },\n    { cc: \"HNL\", symbol: \"L\", name: \"Honduran lempira\" },\n    { cc: \"HRK\", symbol: \"kn\", name: \"Croatian kuna\" },\n    { cc: \"HTG\", symbol: \"G\", name: \"Haitian gourde\" },\n    { cc: \"HUF\", symbol: \"Ft\", name: \"Hungarian forint\" },\n    { cc: \"IDR\", symbol: \"Rp\", name: \"Indonesian rupiah\" },\n    { cc: \"ILS\", symbol: \"\\u20aa\", name: \"Israeli new sheqel\" },\n\n    { cc: \"IQD\", symbol: \"\\u062f.\\u0639\", name: \"Iraqi dinar\" },\n    { cc: \"IRR\", symbol: \"IRR\", name: \"Iranian rial\" },\n    { cc: \"ISK\", symbol: \"kr\", name: \"Icelandic kr\\u00f3na\" },\n    { cc: \"JMD\", symbol: \"J$\", name: \"Jamaican dollar\" },\n    { cc: \"JOD\", symbol: \"JOD\", name: \"Jordanian dinar\" },\n    { cc: \"JPY\", symbol: \"\\u00a5\", name: \"Japanese yen\" },\n    { cc: \"KES\", symbol: \"KSh\", name: \"Kenyan shilling\" },\n    { cc: \"KGS\", symbol: \"\\u0441\\u043e\\u043c\", name: \"Kyrgyzstani som\" },\n    { cc: \"KHR\", symbol: \"\\u17db\", name: \"Cambodian riel\" },\n    { cc: \"KMF\", symbol: \"KMF\", name: \"Comorian franc\" },\n    { cc: \"KPW\", symbol: \"W\", name: \"North Korean won\" },\n    { cc: \"KRW\", symbol: \"W\", name: \"South Korean won\" },\n    { cc: \"KWD\", symbol: \"KWD\", name: \"Kuwaiti dinar\" },\n    { cc: \"KYD\", symbol: \"KY$\", name: \"Cayman Islands dollar\" },\n    { cc: \"KZT\", symbol: \"T\", name: \"Kazakhstani tenge\" },\n    { cc: \"LAK\", symbol: \"KN\", name: \"Lao kip\" },\n    { cc: \"LBP\", symbol: \"\\u00a3\", name: \"Lebanese lira\" },\n    { cc: \"LKR\", symbol: \"Rs\", name: \"Sri Lankan rupee\" },\n    { cc: \"LRD\", symbol: \"L$\", name: \"Liberian dollar\" },\n    { cc: \"LSL\", symbol: \"M\", name: \"Lesotho loti\" },\n    { cc: \"LTL\", symbol: \"Lt\", name: \"Lithuanian litas\" },\n    { cc: \"LVL\", symbol: \"Ls\", name: \"Latvian lats\" },\n    { cc: \"LYD\", symbol: \"LD\", name: \"Libyan dinar\" },\n    { cc: \"MAD\", symbol: \"MAD\", name: \"Moroccan dirham\" },\n    { cc: \"MDL\", symbol: \"MDL\", name: \"Moldovan leu\" },\n    { cc: \"MGA\", symbol: \"FMG\", name: \"Malagasy ariary\" },\n    { cc: \"MKD\", symbol: \"MKD\", name: \"Macedonian denar\" },\n    { cc: \"MMK\", symbol: \"K\", name: \"Myanma kyat\" },\n    { cc: \"MNT\", symbol: \"\\u20ae\", name: \"Mongolian tugrik\" },\n    { cc: \"MOP\", symbol: \"P\", name: \"Macanese pataca\" },\n    { cc: \"MRO\", symbol: \"UM\", name: \"Mauritanian ouguiya\" },\n    { cc: \"MUR\", symbol: \"Rs\", name: \"Mauritian rupee\" },\n    { cc: \"MVR\", symbol: \"Rf\", name: \"Maldivian rufiyaa\" },\n    { cc: \"MWK\", symbol: \"MK\", name: \"Malawian kwacha\" },\n    { cc: \"MXN\", symbol: \"$\", name: \"Mexican peso\" },\n    { cc: \"MYR\", symbol: \"RM\", name: \"Malaysian ringgit\" },\n    { cc: \"MZM\", symbol: \"MTn\", name: \"Mozambican metical\" },\n    { cc: \"NAD\", symbol: \"N$\", name: \"Namibian dollar\" },\n    { cc: \"NGN\", symbol: \"\\u20a6\", name: \"Nigerian naira\" },\n    { cc: \"NIO\", symbol: \"C$\", name: \"Nicaraguan c\\u00f3rdoba\" },\n    { cc: \"NOK\", symbol: \"kr\", name: \"Norwegian krone\" },\n    { cc: \"NPR\", symbol: \"NRs\", name: \"Nepalese rupee\" },\n    { cc: \"NZD\", symbol: \"NZ$\", name: \"New Zealand dollar\" },\n    { cc: \"OMR\", symbol: \"OMR\", name: \"Omani rial\" },\n    { cc: \"PAB\", symbol: \"B./\", name: \"Panamanian balboa\" },\n    { cc: \"PEN\", symbol: \"S/.\", name: \"Peruvian nuevo sol\" },\n    { cc: \"PGK\", symbol: \"K\", name: \"Papua New Guinean kina\" },\n    { cc: \"PHP\", symbol: \"\\u20b1\", name: \"Philippine peso\" },\n    { cc: \"PKR\", symbol: \"Rs.\", name: \"Pakistani rupee\" },\n    { cc: \"PLN\", symbol: \"z\\u0142\", name: \"Polish zloty\" },\n    { cc: \"PYG\", symbol: \"\\u20b2\", name: \"Paraguayan guarani\" },\n    { cc: \"QAR\", symbol: \"QR\", name: \"Qatari riyal\" },\n    { cc: \"RON\", symbol: \"L\", name: \"Romanian leu\" },\n    { cc: \"RSD\", symbol: \"din.\", name: \"Serbian dinar\" },\n    { cc: \"RUB\", symbol: \"R\", name: \"Russian ruble\" },\n    { cc: \"SAR\", symbol: \"SR\", name: \"Saudi riyal\" },\n    { cc: \"SBD\", symbol: \"SI$\", name: \"Solomon Islands dollar\" },\n    { cc: \"SCR\", symbol: \"SR\", name: \"Seychellois rupee\" },\n    { cc: \"SDG\", symbol: \"SDG\", name: \"Sudanese pound\" },\n    { cc: \"SEK\", symbol: \"kr\", name: \"Swedish krona\" },\n    { cc: \"SGD\", symbol: \"S$\", name: \"Singapore dollar\" },\n    { cc: \"SHP\", symbol: \"\\u00a3\", name: \"Saint Helena pound\" },\n    { cc: \"SLL\", symbol: \"Le\", name: \"Sierra Leonean leone\" },\n    { cc: \"SOS\", symbol: \"Sh.\", name: \"Somali shilling\" },\n    { cc: \"SRD\", symbol: \"$\", name: \"Surinamese dollar\" },\n    { cc: \"SYP\", symbol: \"LS\", name: \"Syrian pound\" },\n    { cc: \"SZL\", symbol: \"E\", name: \"Swazi lilangeni\" },\n    { cc: \"THB\", symbol: \"\\u0e3f\", name: \"Thai baht\" },\n    { cc: \"TJS\", symbol: \"TJS\", name: \"Tajikistani somoni\" },\n    { cc: \"TMT\", symbol: \"m\", name: \"Turkmen manat\" },\n    { cc: \"TND\", symbol: \"DT\", name: \"Tunisian dinar\" },\n    { cc: \"TRY\", symbol: \"TRY\", name: \"Turkish new lira\" },\n    { cc: \"TTD\", symbol: \"TT$\", name: \"Trinidad and Tobago dollar\" },\n    { cc: \"TWD\", symbol: \"NT$\", name: \"New Taiwan dollar\" },\n    { cc: \"TZS\", symbol: \"TZS\", name: \"Tanzanian shilling\" },\n    { cc: \"UAH\", symbol: \"UAH\", name: \"Ukrainian hryvnia\" },\n    { cc: \"UGX\", symbol: \"USh\", name: \"Ugandan shilling\" },\n    { cc: \"USD\", symbol: \"US$\", name: \"United States dollar\" },\n    { cc: \"UYU\", symbol: \"$U\", name: \"Uruguayan peso\" },\n    { cc: \"UZS\", symbol: \"UZS\", name: \"Uzbekistani som\" },\n    { cc: \"VEB\", symbol: \"Bs\", name: \"Venezuelan bolivar\" },\n    { cc: \"VND\", symbol: \"\\u20ab\", name: \"Vietnamese dong\" },\n    { cc: \"VUV\", symbol: \"VT\", name: \"Vanuatu vatu\" },\n    { cc: \"WST\", symbol: \"WS$\", name: \"Samoan tala\" },\n    { cc: \"XAF\", symbol: \"CFA\", name: \"Central African CFA franc\" },\n    { cc: \"XCD\", symbol: \"EC$\", name: \"East Caribbean dollar\" },\n    { cc: \"XDR\", symbol: \"SDR\", name: \"Special Drawing Rights\" },\n    { cc: \"XOF\", symbol: \"CFA\", name: \"West African CFA franc\" },\n    { cc: \"XPF\", symbol: \"F\", name: \"CFP franc\" },\n    { cc: \"YER\", symbol: \"YER\", name: \"Yemeni rial\" },\n    { cc: \"ZAR\", symbol: \"R\", name: \"South African rand\" },\n    { cc: \"ZMK\", symbol: \"ZK\", name: \"Zambian kwacha\" },\n    { cc: \"ZWR\", symbol: \"Z$\", name: \"Zimbabwean dollar\" },\n];\n\nexport const caste = [\"Madhwa\", \"Smartha\", \"Shri Vaishnava\"];\nexport const subCasteArrSmartha = [\n    \"BabboorKamme\",\n    \"GowdaSaraswat\",\n    \"HoysalaKarnataka\",\n    \"Kota Brahmin\",\n    \"Moogooru Karnataka\",\n    \"Mulukanadu\",\n    \"Sankethi\",\n    \"Shivalli Smarta Brahmins\",\n    \"Shukla Yajurvedi Smartha Brahmins\",\n    \"Sthanika Brahmins\",\n    \"Ulucha Kamme\",\n];\nexport const subCasteArrMadhwa = [\n    \"Shri Palimaru Matha\",\n    \"Shri Adamaru Matha\",\n    \"Shri Krushnapura Matha\",\n    \"Shri Puttige Matha\",\n    \"Shri Shiruru Matha\",\n    \"Shri Sode Matha\",\n    \"Shri Kaniyuru Matha\",\n    \"Shri Pejavara Matha\",\n    \"Shri Bandarakeri Matha\",\n    \"Shri Subrahmanya Matha\",\n    \"Shri Sosale Vyasarajara Matha\",\n    \"Shri Raghavendra Swami Matha\",\n    \"Shri Uttaradi Matha\",\n    \"Shri Sagarakatte Vyasarajara Matha\",\n    \"Shri Kundapura Vyasarajara Matha\",\n    \"Shri Mulabagilu Shripadarajara Matha\",\n    \"Shri Bhimanakatte Munivrunda Matha\",\n    \"Shri Baligaru Arya Akshobhya Teertha Matha\",\n    \"Shri Kudli Arya Akshobhya Teertha Matha\",\n    \"Shri Thambehalli Madhava Teertha Matha\",\n    \"Shri Kanva Matha\",\n    \"Shri Kashi Matha\",\n    \"Shri Partagali Jeevottama Matha\",\n    \"Shri Chitrapura Matha\",\n];\nexport const subCasteArrVaishnava = [\"Other\"];\nexport const Raashi = [\n    \"Mesha\",\n    \"Vrishabha\",\n    \"Mithun\",\n    \"Karka\",\n    \"Simha\",\n    \"Kanya\",\n    \"Tula\",\n    \"Vruschika\",\n    \"Dhanu\",\n    \"Makar\",\n    \"Kumbha\",\n    \"Meena\",\n];\nexport const birthStar = [\n    \"Ashwini\",\n    \"Bharani\",\n    \"Krittika\",\n    \"Rohini\",\n    \"Mrighasira\",\n    \"Ardra\",\n    \"Punarvasu\",\n    \"Pushya\",\n    \"Ashlesha\",\n    \"Magha\",\n    \"Purva Phalguni\",\n    \"Uttara Phalguni\",\n    \"Hasta\",\n    \"Chitra\",\n    \"Swati\",\n    \"Vishaka\",\n    \"Anuradha\",\n    \"Jyestha\",\n    \"Moola\",\n    \"Purvashada\",\n    \"Uttarashada\",\n    \"Sharavana\",\n    \"Dhanishta\",\n    \"Shatabisha\",\n    \"Purvabhadra\",\n    \"Uttarabhadra\",\n    \"Revati\",\n];\n\nexport const Gothra = [\n    \"Atreya / Attri\",\n    \"Angirasa\",\n    \"Alamban / Alambayin / Alambain\",\n    \"Bali\",\n    \"Bakshi\",\n    \"Bhalki\",\n    \"Bharadvaja\",\n    \"Bhargava\",\n    \"Chandrayana\",\n    \"Charora\",\n    \"Chyavana\",\n    \"Dalabhya\",\n    \"Dhananjaya\",\n    \"Garga\",\n    \"Gautama Maharishi\",\n    \"Harita\",\n    \"Jamadagni\",\n    \"Kankar\",\n    \"Kapil\",\n    \"Kashyapa\",\n    \"Kaundinya\",\n    \"Katyayana\",\n    \"Kaushik\",\n    \"Kutsa\",\n    \"Maitreya / Mitra\",\n    \"Mandavya\",\n    \"Mudgal\",\n    \"Parashar\",\n    \"Pourugutsa\",\n    \"Sankrithi\",\n    \"Savarni\",\n    \"Shandilya\",\n    \"Sharma\",\n    \"Shunak\",\n    \"Soral\",\n    \"Srivatsa\",\n    \"Suryadhwaja\",\n    \"Upadhyay\",\n    \"Valmiki\",\n    \"Vashistha\",\n    \"Vasudev\",\n    \"Vatsa\",\n    \"Vishnu\",\n    \"Vishvamitra\",\n    \"Vishnuvridha/Vishnuvardhasa\",\n    \"Viswamitra\",\n    \"Yaska\",\n    \"Chalondiya\",\n    \"Willyesh\",\n];\nexport const heightListValuePair = [\n    \"4ft/122cm\",\n    \"4ft 1in/124cm\",\n    \"4ft 2in/127cm\",\n    \"4ft 3in/130cm\",\n    \"4ft 4in/132cm\",\n    \"4ft 5in/135cm\",\n    \"4ft 6in/137cm\",\n    \"4ft 7in/140cm\",\n    \"4ft 8in/142cm\",\n    \"4ft 9in/145cm\",\n    \"4ft 10in/147cm\",\n    \"4ft 11in/150cm\",\n    \"5ft/152cm\",\n    \"5ft 1in/155cm\",\n    \"5ft 2in/157cm\",\n    \"5ft 3in/160cm\",\n    \"5ft 4in/163cm\",\n    \"5ft 5in/165cm\",\n    \"5ft 6in/168cm\",\n    \"5ft 7in/170cm\",\n    \"5ft 8in/173cm\",\n    \"5ft 9in/175cm\",\n    \"5ft 10in/178cm\",\n    \"5ft 11in/180cm\",\n    \"6ft/183cm\",\n    \"6ft 1in/185cm\",\n    \"6ft 2in/188cm\",\n    \"6ft 3in/191cm\",\n    \"6ft 4in/193cm\",\n    \"6ft 5in/196cm\",\n    \"6ft 6in/198cm\",\n    \"6ft 7in/201cm\",\n    \"6ft 8in/203cm\",\n    \"6ft 9in/206cm\",\n    \"6ft 10in/208cm\",\n    \"6ft 11in/211cm\",\n    \"7ft/213cm\",\n    \"7ft 1in/216cm\",\n    \"7ft 2in/218cm\",\n];\nexport const heightList = [\n    \"4ft/122cm\",\n    \"4ft 1in/124cm\",\n    \"4ft 2in/127cm\",\n    \"4ft 3in/130cm\",\n    \"4ft 4in/132cm\",\n    \"4ft 5in/135cm\",\n    \"4ft 6in/137cm\",\n    \"4ft 7in/140cm\",\n    \"4ft 8in/142cm\",\n    \"4ft 9in/145cm\",\n    \"4ft 10in/147cm\",\n    \"4ft 11in/150cm\",\n    \"5ft/152cm\",\n    \"5ft 1in/155cm\",\n    \"5ft 2in/157cm\",\n    \"5ft 3in/160cm\",\n    \"5ft 4in/163cm\",\n    \"5ft 5in/165cm\",\n    \"5ft 6in/168cm\",\n    \"5ft 7in/170cm\",\n    \"5ft 8in/173cm\",\n    \"5ft 9in/175cm\",\n    \"5ft 10in/178cm\",\n    \"5ft 11in/180cm\",\n    \"6ft/183cm\",\n    \"6ft 1in/185cm\",\n    \"6ft 2in/188cm\",\n    \"6ft 3in/191cm\",\n    \"6ft 4in/193cm\",\n    \"6ft 5in/196cm\",\n    \"6ft 6in/198cm\",\n    \"6ft 7in/201cm\",\n    \"6ft 8in/203cm\",\n    \"6ft 9in/206cm\",\n    \"6ft 10in/208cm\",\n    \"6ft 11in/211cm\",\n    \"7ft/213cm\",\n    \"7ft 1in/216cm\",\n    \"7ft 2in/218cm\",\n];\nexport const age = [\"18\", \"19\", \"20\"];\nexport const languages = [\n    \"Kannada\",\n    \"Telugu\",\n    \"Tamil\",\n    \"Marathi\",\n    \"Tulu\",\n    \"Hindi\",\n    \"Sanskrit\",\n];\n\nexport const employedin = [\n    \"Any\",\n    \"Government\",\n    \"IT Sector\",\n    \"Private\",\n    \"Business\",\n];\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { fetchCount } from \"./counterAPI\";\n\nconst initialState = {\n    value: 0,\n    status: \"idle\",\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n    \"counter/fetchCount\",\n    async (amount) => {\n        const response = await fetchCount(amount);\n        // The value we return becomes the `fulfilled` action payload\n        return response.data;\n    }\n);\n\nexport const counterSlice = createSlice({\n    name: \"counter\",\n    initialState,\n    // The `reducers` field lets us define reducers and generate associated actions\n    reducers: {\n        increment: (state) => {\n            console.log(state);\n            // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n            // doesn't actually mutate the state because it uses the Immer library,\n            // which detects changes to a \"draft state\" and produces a brand new\n            // immutable state based off those changes\n            state.value += 1;\n        },\n        decrement: (state) => {\n            state.value -= 1;\n        },\n        // Use the PayloadAction type to declare the contents of `action.payload`\n        incrementByAmount: (state, action) => {\n            console.log(\"test\");\n            state.value += action.payload;\n        },\n    },\n    // The `extraReducers` field lets the slice handle actions defined elsewhere,\n    // including actions generated by createAsyncThunk or in other slices.\n    extraReducers: (builder) => {\n        builder\n            .addCase(incrementAsync.pending, (state) => {\n                state.status = \"loading\";\n            })\n            .addCase(incrementAsync.fulfilled, (state, action) => {\n                state.status = \"idle\";\n                state.value += action.payload;\n            });\n    },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n    const currentValue = selectCount(getState());\n    if (currentValue % 2 === 1) {\n        dispatch(incrementByAmount(amount));\n    }\n};\n\nexport default counterSlice.reducer;\n","import React, { useState } from \"react\";\nimport {\n    Grid,\n    TextField,\n    Button,\n    Paper,\n    FormControl,\n    FormLabel,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    Select,\n    MenuItem,\n    FormHelperText,\n} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { selectSignupData, storeSignupData } from \"../features/signupSlice\";\nimport { createMuiTheme, makeStyles } from \"@material-ui/core/styles\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n    DegreeList,\n    countryList,\n    statesList,\n    currencyList,\n    subCasteArrMadhwa,\n    subCasteArrSmartha,\n    subCasteArrVaishnava,\n    heightList,\n    Gothra,\n    birthStar,\n    Raashi,\n    caste,\n} from \"./Dataforsignup\";\n// import statesList from \"./states\";\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport \"./Signup.scss\";\nimport moment from \"moment\";\n\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Typography } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { signupData } from \"../features/signupSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport { increment, incrementByAmount } from \"../features/counter/counterSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n    },\n    selected: {\n        \"&&\": {\n            backgroundColor: theme.palette.primary.main,\n            color: \"#fff\",\n            // color: theme.palette.primary.light,\n            \"&:hover\": {\n                // background: theme.palette.primary.dark,\n                background: \"#003b32\",\n            },\n        },\n    },\n    defaultbutton: {\n        borderWidth: \" 2px \",\n        borderStyle: \"solid\",\n        color: \"#fff\",\n        borderColor: theme.palette.primary.main,\n        // background: \"#e0f2f1\",\n        borderLeftWidth: \"2.5px !Important\",\n        borderLeftColor: theme.palette.primary.main + \"!important\",\n        color: theme.palette.action.active,\n        \"&:hover\": {\n            background: theme.palette.primary.dark,\n            color: \"#fff\",\n        },\n    },\n}));\nconst styles = (theme) => ({\n    toggleButton: {\n        // height: 56,\n        // padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`,\n        // display: \"flex\",\n        // alignItems: \"center\",\n        // justifyContent: \"flex-start\",\n        // margin: `${theme.spacing.unit}px 0`,\n        // background: theme.palette.background.default,\n        borderColor: `${theme.palette.border}`,\n    },\n});\n\nfunction Signup() {\n    const classes = useStyles();\n\n    // const {createdBy,email} = useRef();\n    const {\n        register,\n        control,\n        handleSubmit,\n        formState: { errors },\n        setValue,\n    } = useForm({\n        // mode: \"all\",\n    });\n    const dispatch = useDispatch();\n    const history = useHistory();\n    // const userData = useSelector(selectSignupData);\n    // const { register, handleSubmit, watch, errors } = useForm();\n    const onSubmit = (formData) => {\n        console.log(formData);\n        dispatch(incrementByAmount(formData));\n        dispatch(storeSignupData(formData));\n        // console.log(userData);\n        // history.push(\"./test\");\n    };\n\n    const [subCasteArr, setsubCasteArr] = useState(\"\");\n    const [subCaste, setsubCaste] = useState(\"\");\n    const [subcasteValue, setsubcasteValue] = useState();\n    const [casteValue, setcasteValue] = useState();\n    const handleCasteChange = (e) => {\n        console.log(e);\n        // setsubcasteValue(\"\");\n        if (e === \"Madhwa\") {\n            setsubCasteArr(subCasteArrMadhwa);\n            setsubCaste(\"Madhwa\");\n        } else if (e === \"Smartha\") {\n            setsubCasteArr(subCasteArrSmartha);\n            setsubCaste(\"Smartha\");\n        } else {\n            setsubCasteArr(subCasteArrVaishnava);\n        }\n        // console.log(subcasteValue);\n    };\n\n    const [country, setCountry] = useState(\"\");\n\n    const [state, setState] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n\n    const handleCountryChange = (e) => {\n        console.log(e.target.value);\n        if (e.target.value === \"India\") {\n            setState(statesList);\n            setCountry(\"India\");\n        } else {\n            setCountry(\"\");\n            setState(\"\");\n            setCity(\"\");\n        }\n\n        console.log(state);\n    };\n\n    const handleStateChange = (e) => {\n        console.log(e.target.value);\n        let selectedState = e.target.value;\n        let states = statesList.states;\n        states.map((state) => {\n            if (state.code === selectedState) {\n                console.log(state.districts);\n                setCity(state.districts);\n            } else {\n            }\n        });\n    };\n\n    const [residingcountry, setResidingCountry] = useState(\"\");\n\n    const [residingstate, setResidingState] = useState(\"\");\n    const [residingcity, setResidingCity] = useState(\"\");\n\n    const handleCountryChangeCurrent = (e) => {\n        console.log(e.target.value);\n        if (e.target.value === \"India\") {\n            setResidingState(statesList);\n            setResidingCountry(\"India\");\n        } else {\n            setResidingCountry(\"\");\n            setState(\"\");\n            setCity(\"\");\n        }\n\n        console.log(state);\n    };\n\n    const handleStateChangeCurrent = (e) => {\n        console.log(e.target.value);\n        let selectedState = e.target.value;\n        let states = statesList.states;\n        states.map((state) => {\n            if (state.code === selectedState) {\n                console.log(state.districts);\n                setResidingCity(state.districts);\n            } else {\n            }\n        });\n    };\n\n    const [employment, setEmployment] = useState(\"\");\n\n    const handleEmployment = (data) => {\n        setEmployment(data);\n    };\n\n    const [familyType, setFamilyType] = useState(\"\");\n    console.log(errors);\n\n    return (\n        <div className={classes.root}>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <Grid container>\n                    <Grid item xs={12} md={6} className=\"mat__signupgrid-left\">\n                        <Paper className=\"mat__signupgrid\">\n                            <Typography variant=\"h4\">Basic Details </Typography>\n\n                            <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                            >\n                                <FormLabel component=\"legend\">\n                                    Profile Created By\n                                </FormLabel>\n                                <Controller\n                                    name=\"createdby\"\n                                    control={control}\n                                    defaultValue=\"\"\n                                    value=\"\"\n                                    render={({\n                                        field,\n                                        fieldState: { error },\n                                    }) => (\n                                        <ToggleButtonGroup\n                                            color=\"primary\"\n                                            value=\"\"\n                                            exclusive\n                                            // onChange={handleAlignment}\n                                            aria-label=\"text alignment\"\n                                            {...field}\n                                            onChange={(_, data) =>\n                                                field.onChange(data)\n                                            }\n                                            error={!!error}\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                            className=\"mat__custombutgrp\"\n                                        >\n                                            <ToggleButton\n                                                value=\"Parents\"\n                                                aria-label=\"Parents\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Parent\n                                            </ToggleButton>\n                                            <ToggleButton\n                                                value=\"Relative\"\n                                                aria-label=\"Relative\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Relative\n                                            </ToggleButton>\n                                            <ToggleButton\n                                                value=\"Self\"\n                                                aria-label=\"Self\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Self\n                                            </ToggleButton>\n                                            <ToggleButton\n                                                value=\"Friend\"\n                                                aria-label=\"Friend\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Friend\n                                            </ToggleButton>\n                                        </ToggleButtonGroup>\n                                    )}\n                                    rules={{\n                                        required: \"Family Status is required\",\n                                    }}\n                                />\n                                {/* {errors.createdby && (\n                                    <p className=\"sendMail__error\">\n                                        Created By is required\n                                    </p>\n                                )} */}\n                                <FormHelperText className=\"Mui-error\">\n                                    {errors.createdby?.message}\n                                </FormHelperText>\n                            </FormControl>\n                            {/* <Controller\n                                name=\"createdby\"\n                                control={control}\n                                defaultValue=\"\"\n                                render={({\n                                    field: { onChange, value },\n                                    fieldState: { error },\n                                }) => (\n                                    <TextField\n                                        label=\"Profile Created By\"\n                                        variant=\"outlined\"\n                                        value={value}\n                                        fullWidth\n                                        onChange={onChange}\n                                        error={!!error}\n                                        className=\"mat__textbox\"\n                                        helperText={\n                                            error ? error.message : null\n                                        }\n                                    />\n                                )}\n                                // rules={{\n                                //     required: \"Profile Created By is required\",\n                                // }}\n                            /> */}\n                            <Controller\n                                name=\"name\"\n                                control={control}\n                                defaultValue=\"\"\n                                render={({\n                                    field: { onChange, value },\n                                    fieldState: { error },\n                                }) => (\n                                    <TextField\n                                        label=\"Name\"\n                                        variant=\"outlined\"\n                                        value={value}\n                                        fullWidth\n                                        onChange={onChange}\n                                        error={!!error}\n                                        className=\"mat__textbox\"\n                                        helperText={\n                                            error ? error.message : null\n                                        }\n                                    />\n                                )}\n                                rules={{\n                                    required: \"Name is required\",\n                                }}\n                            />\n                            <Controller\n                                name=\"email\"\n                                control={control}\n                                defaultValue=\"\"\n                                render={({\n                                    field: { onChange, value },\n                                    fieldState: { error },\n                                }) => (\n                                    <TextField\n                                        label=\"Email\"\n                                        variant=\"outlined\"\n                                        value={value}\n                                        fullWidth\n                                        onChange={onChange}\n                                        error={!!error}\n                                        className=\"mat__textbox\"\n                                        helperText={\n                                            error ? error.message : null\n                                        }\n                                    />\n                                )}\n                                rules={{\n                                    required: \"Email  is required\",\n                                }}\n                            />\n                            <Controller\n                                name=\"phone\"\n                                control={control}\n                                defaultValue=\"\"\n                                render={({\n                                    field: { onChange, value },\n                                    fieldState: { error },\n                                }) => (\n                                    <TextField\n                                        label=\"Phone \"\n                                        variant=\"outlined\"\n                                        value={value}\n                                        fullWidth\n                                        onChange={onChange}\n                                        error={!!error}\n                                        className=\"mat__textbox\"\n                                        helperText={\n                                            error ? error.message : null\n                                        }\n                                    />\n                                )}\n                                rules={{\n                                    required: \"Phone  is required\",\n                                }}\n                            />\n                            <Controller\n                                name=\"password\"\n                                control={control}\n                                defaultValue=\"\"\n                                render={({\n                                    field: { onChange, value },\n                                    fieldState: { error },\n                                }) => (\n                                    <TextField\n                                        label=\"Password\"\n                                        variant=\"outlined\"\n                                        value={value}\n                                        fullWidth\n                                        type=\"password\"\n                                        onChange={onChange}\n                                        error={!!error}\n                                        className=\"mat__textbox\"\n                                        helperText={\n                                            error ? error.message : null\n                                        }\n                                    />\n                                )}\n                                rules={{\n                                    required: \"Password is required\",\n                                }}\n                            />\n                            <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                                // className={classes.inputField}\n                                // error={Boolean(errors.gender)}\n                            >\n                                <FormLabel>Gender</FormLabel>\n\n                                <Controller\n                                    name=\"gender\"\n                                    control={control}\n                                    value=\"\"\n                                    render={({\n                                        field: { onChange, value },\n                                        fieldState: { error },\n                                    }) => (\n                                        <RadioGroup\n                                            row\n                                            aria-label=\"position\"\n                                            name=\"gender\"\n                                            defaultValue=\"top\"\n                                            className=\"mat__textbox\"\n                                            onChange={(e) => {\n                                                onChange(e);\n                                                console.log(e.target.value);\n                                            }}\n                                            // error={Boolean(errors.gender)}\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                        >\n                                            <FormControlLabel\n                                                value=\"male\"\n                                                control={\n                                                    <Radio\n                                                        color=\"primary\"\n                                                        {...register(\"gender\", {\n                                                            required:\n                                                                \"Choose your gender\",\n                                                        })}\n                                                    />\n                                                }\n                                                label=\"Male\"\n                                                labelPlacement=\"start\"\n                                            />\n                                            <FormControlLabel\n                                                value=\"female\"\n                                                control={\n                                                    <Radio\n                                                        color=\"primary\"\n                                                        {...register(\"gender\", {\n                                                            required:\n                                                                \"Choose your gender\",\n                                                        })}\n                                                    />\n                                                }\n                                                label=\"Female\"\n                                                labelPlacement=\"start\"\n                                            />\n                                        </RadioGroup>\n                                    )}\n                                    rules={{\n                                        required: \"Gender is required\",\n                                    }}\n                                />\n                                <FormHelperText className=\"Mui-error\">\n                                    {errors.gender?.message}\n                                </FormHelperText>\n                            </FormControl>\n                            {/* <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                            >\n                                <FormLabel component=\"legend\">\n                                    Marital Status\n                                </FormLabel>\n                                <Controller\n                                    render={({\n                                        field: { onChange, value },\n                                        fieldState: { error },\n                                    }) => (\n                                        <Select\n                                            defaultValue=\"\"\n                                            // onChange={(e) => {\n                                            //     onChange(e);\n                                            //     handleCasteChange(e);\n                                            // }}\n                                            error={!!error}\n                                            className=\"mat__textbox\"\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                        >\n                                            <MenuItem value=\"\">Select</MenuItem>\n                                            <MenuItem value=\"Unmarried\">\n                                                Unmarried\n                                            </MenuItem>\n                                            <MenuItem value=\"Widow/WIdower\">\n                                                Widow/WIdower\n                                            </MenuItem>\n                                            <MenuItem value=\"Divorced\">\n                                                Divorced\n                                            </MenuItem>\n                                        </Select>\n                                    )}\n                                    name=\"maritalstatus\"\n                                    control={control}\n                                    // rules={{\n                                    //     required: \"Marital Status  is required\",\n                                    // }}\n                                />\n                            </FormControl> */}\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={6} className=\"mat__signupgrid-right\">\n                        <Paper className=\"mat__signupgrid\">\n                            <Typography variant=\"h4\">\n                                Religion & Horoscope Details{\" \"}\n                            </Typography>\n                            <Grid container>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={6}\n                                    className=\"mat__caste\"\n                                >\n                                    <Controller\n                                        render={({\n                                            field,\n                                            fieldState: { error },\n                                        }) => (\n                                            <Autocomplete\n                                                {...field}\n                                                options={caste ? caste : \"\"}\n                                                getOptionLabel={(option) =>\n                                                    option\n                                                }\n                                                renderInput={(params) => (\n                                                    <TextField\n                                                        {...params}\n                                                        label=\"Caste\"\n                                                        variant=\"outlined\"\n                                                        error={!!error}\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                        className=\"mat__textbox\"\n                                                    />\n                                                )}\n                                                onChange={(_, data) => (\n                                                    field.onChange(data),\n                                                    handleCasteChange(data)\n                                                )}\n                                            />\n                                        )}\n                                        name=\"caste\"\n                                        control={control}\n                                        rules={{\n                                            required: \"Caste is required\",\n                                        }}\n                                    />\n                                </Grid>\n\n                                {/* {subCaste === \"Madhwa\" ||\n                                subCaste === \"Smartha\" ? ( */}\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={6}\n                                    className=\"mat__subcaste\"\n                                >\n                                    <Controller\n                                        render={({\n                                            field,\n                                            fieldState: { error },\n                                        }) => (\n                                            <Autocomplete\n                                                {...field}\n                                                value={subcasteValue}\n                                                options={subCasteArr}\n                                                getOptionLabel={(option) =>\n                                                    option\n                                                }\n                                                renderInput={(params) => (\n                                                    <TextField\n                                                        {...params}\n                                                        label=\"Sub Caste\"\n                                                        variant=\"outlined\"\n                                                        error={!!error}\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                        className=\"mat__textbox\"\n                                                    />\n                                                )}\n                                                onChange={(_, data) =>\n                                                    field.onChange(data)\n                                                }\n                                            />\n                                        )}\n                                        name=\"subcaste\"\n                                        control={control}\n                                        rules={{\n                                            required: \"SubCaste is required\",\n                                        }}\n                                    />\n                                </Grid>\n                                {/* ) : (\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__subcaste\"\n                                    >\n                                        <Controller\n                                            name=\"subcaste\"\n                                            control={control}\n                                            defaultValue=\"\"\n                                            render={({\n                                                field: { onChange, value },\n                                                fieldState: { error },\n                                            }) => (\n                                                <TextField\n                                                    label=\"Sub Caste\"\n                                                    variant=\"outlined\"\n                                                    value={value}\n                                                    fullWidth\n                                                    onChange={onChange}\n                                                    error={!!error}\n                                                    className=\"mat__textbox\"\n                                                    helperText={\n                                                        error\n                                                            ? error.message\n                                                            : null\n                                                    }\n                                                />\n                                            )}\n                                            rules={{\n                                                required:\n                                                    \"SubCaste is required\",\n                                            }}\n                                        />\n                                    </Grid>\n                                )} */}\n                            </Grid>\n                            <Grid container>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={6}\n                                    className=\"mat__caste\"\n                                >\n                                    <Controller\n                                        render={({\n                                            field,\n                                            fieldState: { error },\n                                        }) => (\n                                            <Autocomplete\n                                                {...field}\n                                                options={birthStar}\n                                                getOptionLabel={(option) =>\n                                                    option\n                                                }\n                                                renderInput={(params) => (\n                                                    <TextField\n                                                        {...params}\n                                                        label=\"Birth Star/Nakshatraa\"\n                                                        variant=\"outlined\"\n                                                        error={!!error}\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                        className=\"mat__textbox\"\n                                                    />\n                                                )}\n                                                onChange={(_, data) =>\n                                                    field.onChange(data)\n                                                }\n                                            />\n                                        )}\n                                        name=\"birthstar\"\n                                        control={control}\n                                        rules={{\n                                            required: \"Birth Star is required\",\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={6}\n                                    className=\"mat__subcaste\"\n                                >\n                                    <Controller\n                                        render={({\n                                            field,\n                                            fieldState: { error },\n                                        }) => (\n                                            <Autocomplete\n                                                {...field}\n                                                options={Raashi}\n                                                getOptionLabel={(option) =>\n                                                    option\n                                                }\n                                                renderInput={(params) => (\n                                                    <TextField\n                                                        {...params}\n                                                        label=\"Raashi\"\n                                                        variant=\"outlined\"\n                                                        error={!!error}\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                        className=\"mat__textbox\"\n                                                    />\n                                                )}\n                                                onChange={(_, data) =>\n                                                    field.onChange(data)\n                                                }\n                                            />\n                                        )}\n                                        name=\"raashi\"\n                                        control={control}\n                                        rules={{\n                                            required: \"Birth Star is required\",\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Controller\n                                render={({ field, fieldState: { error } }) => (\n                                    <Autocomplete\n                                        {...field}\n                                        options={Gothra}\n                                        getOptionLabel={(option) => option}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                {...params}\n                                                label=\"Gothra\"\n                                                variant=\"outlined\"\n                                                error={!!error}\n                                                helperText={\n                                                    error ? error.message : null\n                                                }\n                                                className=\"mat__textbox\"\n                                            />\n                                        )}\n                                        onChange={(_, data) =>\n                                            field.onChange(data)\n                                        }\n                                    />\n                                )}\n                                name=\"gothra\"\n                                control={control}\n                                rules={{\n                                    required: \"Gothra is required\",\n                                }}\n                            />\n\n                            <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                            >\n                                <FormLabel component=\"legend\">\n                                    Country of Birth\n                                </FormLabel>\n                                <Controller\n                                    render={({\n                                        field: { onChange, value },\n                                        fieldState: { error },\n                                    }) => (\n                                        <Select\n                                            defaultValue=\"\"\n                                            onChange={(e) => {\n                                                onChange(e);\n                                                handleCountryChange(e);\n                                            }}\n                                            error={!!error}\n                                            className=\"mat__textbox\"\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                        >\n                                            <MenuItem value=\"\">Select</MenuItem>\n                                            {countryList.map(\n                                                (anObjectMapped, index) => {\n                                                    return (\n                                                        <MenuItem\n                                                            key={`${anObjectMapped}_{anObjectMapped.value}`}\n                                                            value={\n                                                                anObjectMapped\n                                                            }\n                                                        >\n                                                            {anObjectMapped}\n                                                        </MenuItem>\n                                                    );\n                                                }\n                                            )}\n                                        </Select>\n                                    )}\n                                    name=\"birthcountry\"\n                                    control={control}\n                                    rules={{\n                                        required:\n                                            \"Birth of Country  is required\",\n                                    }}\n                                />\n                                <FormHelperText className=\"Mui-error\">\n                                    {errors.birthcountry?.message}\n                                </FormHelperText>\n                            </FormControl>\n                            {country === \"India\" ? (\n                                <Grid container>\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__caste\"\n                                    >\n                                        <FormControl\n                                            component=\"fieldset\"\n                                            className=\"mat__textbox\"\n                                        >\n                                            <FormLabel component=\"legend\">\n                                                State of Birth\n                                            </FormLabel>\n                                            <Controller\n                                                render={({\n                                                    field: { onChange, value },\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <Select\n                                                        defaultValue=\"\"\n                                                        onChange={(e) => {\n                                                            onChange(e);\n                                                            handleStateChange(\n                                                                e\n                                                            );\n                                                        }}\n                                                        error={!!error}\n                                                        className=\"mat__textbox\"\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                    >\n                                                        <MenuItem value=\"\">\n                                                            Select\n                                                        </MenuItem>\n                                                        {statesList.states\n                                                            ? statesList.states.map(\n                                                                  (\n                                                                      anObjectMapped,\n                                                                      index\n                                                                  ) => {\n                                                                      return (\n                                                                          <MenuItem\n                                                                              key={\n                                                                                  index\n                                                                              }\n                                                                              value={\n                                                                                  anObjectMapped.code\n                                                                              }\n                                                                          >\n                                                                              {\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          </MenuItem>\n                                                                      );\n                                                                  }\n                                                              )\n                                                            : \"\"}\n                                                    </Select>\n                                                )}\n                                                name=\"birthstate\"\n                                                control={control}\n                                                rules={{\n                                                    required:\n                                                        \"Birth State  is required\",\n                                                }}\n                                            />\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__caste\"\n                                    >\n                                        <FormControl\n                                            component=\"fieldset\"\n                                            className=\"mat__textbox\"\n                                        >\n                                            <FormLabel component=\"legend\">\n                                                City of Birth\n                                            </FormLabel>\n                                            <Controller\n                                                render={({\n                                                    field: { onChange, value },\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <Select\n                                                        defaultValue=\"\"\n                                                        // onChange={(e) => {\n                                                        //     onChange(e);\n                                                        //     handleStateChange(e);\n                                                        // }}\n                                                        error={!!error}\n                                                        className=\"mat__textbox\"\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                    >\n                                                        <MenuItem value=\"\">\n                                                            Select\n                                                        </MenuItem>\n                                                        {city\n                                                            ? city.map(\n                                                                  (\n                                                                      anObjectMapped,\n                                                                      index\n                                                                  ) => {\n                                                                      return (\n                                                                          <MenuItem\n                                                                              key={\n                                                                                  index\n                                                                              }\n                                                                              value={\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          >\n                                                                              {\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          </MenuItem>\n                                                                      );\n                                                                  }\n                                                              )\n                                                            : \"\"}\n                                                    </Select>\n                                                )}\n                                                name=\"birthcity1\"\n                                                control={control}\n                                                rules={{\n                                                    required:\n                                                        \"City of  is required\",\n                                                }}\n                                            />\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n                            ) : (\n                                <Grid container>\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__caste\"\n                                    >\n                                        <Controller\n                                            name=\"birthstate\"\n                                            control={control}\n                                            defaultValue=\"\"\n                                            render={({\n                                                field: { onChange, value },\n                                                fieldState: { error },\n                                            }) => (\n                                                <TextField\n                                                    label=\"State of Birth\"\n                                                    variant=\"outlined\"\n                                                    value={value}\n                                                    fullWidth\n                                                    onChange={onChange}\n                                                    error={!!error}\n                                                    className=\"mat__textbox\"\n                                                    helperText={\n                                                        error\n                                                            ? error.message\n                                                            : null\n                                                    }\n                                                />\n                                            )}\n                                            rules={{\n                                                required:\n                                                    \"Birth State is required\",\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__subcaste\"\n                                    >\n                                        <Controller\n                                            name=\"birthcity\"\n                                            control={control}\n                                            defaultValue=\"\"\n                                            render={({\n                                                field: { onChange, value },\n                                                fieldState: { error },\n                                            }) => (\n                                                <TextField\n                                                    label=\"City of Birth\"\n                                                    variant=\"outlined\"\n                                                    value={value}\n                                                    fullWidth\n                                                    onChange={onChange}\n                                                    error={!!error}\n                                                    className=\"mat__textbox\"\n                                                    helperText={\n                                                        error\n                                                            ? error.message\n                                                            : null\n                                                    }\n                                                />\n                                            )}\n                                            rules={{\n                                                required:\n                                                    \"Birth City is required\",\n                                            }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            )}\n                            <Grid container>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={6}\n                                    className=\"mat__caste\"\n                                >\n                                    <FormControl\n                                        component=\"fieldset\"\n                                        className=\"mat__textbox\"\n                                    >\n                                        <FormLabel component=\"legend\">\n                                            D.O.B\n                                        </FormLabel>\n                                        <MuiPickersUtilsProvider\n                                            utils={DateFnsUtils}\n                                        >\n                                            <Controller\n                                                name=\"birthdate\"\n                                                control={control}\n                                                defaultValue={null}\n                                                render={({\n                                                    field: { ref, ...rest },\n                                                }) => (\n                                                    <KeyboardDatePicker\n                                                        margin=\"normal\"\n                                                        id=\"date-picker-dialog\"\n                                                        // label=\"Date Of Birth\"\n                                                        format=\"MM/dd/yyyy\"\n                                                        fullWidth\n                                                        value={null}\n                                                        // value={moment().subtract(\n                                                        //     18,\n                                                        //     \"years\"\n                                                        // )}\n                                                        // value={\"MM/dd/yyyy\"}\n                                                        // maxDate={new Date()}\n                                                        minDate={moment().subtract(\n                                                            500,\n                                                            \"years\"\n                                                        )}\n                                                        maxDate={moment().subtract(\n                                                            18,\n                                                            \"years\"\n                                                        )}\n                                                        KeyboardButtonProps={{\n                                                            \"aria-label\":\n                                                                \"change date\",\n                                                        }}\n                                                        error={Boolean(\n                                                            errors.birthdate\n                                                        )}\n                                                        helperText={\n                                                            errors.birthdate\n                                                                ?.message\n                                                        }\n                                                        {...rest}\n                                                    />\n                                                )}\n                                                rules={{\n                                                    required:\n                                                        \"D.O.B is required.\",\n                                                }}\n                                            />\n                                        </MuiPickersUtilsProvider>\n                                    </FormControl>\n                                </Grid>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={6}\n                                    className=\"mat__subcaste\"\n                                >\n                                    <FormControl\n                                        component=\"fieldset\"\n                                        className=\"mat__textbox\"\n                                    >\n                                        <FormLabel component=\"legend\">\n                                            Time Of Birth\n                                        </FormLabel>\n                                        <MuiPickersUtilsProvider\n                                            utils={DateFnsUtils}\n                                        >\n                                            <Controller\n                                                name=\"birthtime\"\n                                                control={control}\n                                                defaultValue={null}\n                                                render={({\n                                                    field: { ref, ...rest },\n                                                }) => (\n                                                    <KeyboardTimePicker\n                                                        margin=\"normal\"\n                                                        id=\"time-picker\"\n                                                        // value={selectedDate}\n                                                        // onChange={\n                                                        //     handleDateChange\n                                                        // }\n                                                        value={null}\n                                                        KeyboardButtonProps={{\n                                                            \"aria-label\":\n                                                                \"change time\",\n                                                        }}\n                                                        error={Boolean(\n                                                            errors.birthdate\n                                                        )}\n                                                        helperText={\n                                                            errors.birthdate\n                                                                ?.message\n                                                        }\n                                                        {...rest}\n                                                    />\n                                                )}\n                                                rules={{\n                                                    required:\n                                                        \"Time of Birth is required.\",\n                                                }}\n                                            />\n                                        </MuiPickersUtilsProvider>\n                                    </FormControl>\n                                </Grid>\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Button\n                    className=\"sendMail__send\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                >\n                    Send\n                </Button>\n\n                <Grid container>\n                    <Grid item xs={12} md={6} className=\"mat__signupgrid-left\">\n                        <Paper className=\"mat__signupgrid\">\n                            <Typography variant=\"h4\">\n                                Personal Details\n                            </Typography>\n                            <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                            >\n                                <FormLabel component=\"legend\">\n                                    Marital Status\n                                </FormLabel>\n                                <Controller\n                                    name=\"maritalstatus\"\n                                    control={control}\n                                    defaultValue=\"\"\n                                    value=\"\"\n                                    render={({ field }) => (\n                                        <ToggleButtonGroup\n                                            value=\"\"\n                                            exclusive\n                                            // onChange={handleAlignment}\n                                            aria-label=\"text alignment\"\n                                            {...field}\n                                            onChange={(_, data) =>\n                                                field.onChange(data)\n                                            }\n                                            className=\"mat__custombutgrp\"\n                                        >\n                                            <ToggleButton\n                                                value=\"Unmarried\"\n                                                aria-label=\"Unmarried\"\n                                                color=\"primary\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Unmarried\n                                            </ToggleButton>\n                                            <ToggleButton\n                                                value=\"Widow/Widower\"\n                                                aria-label=\"Widow/Widower\"\n                                                color=\"primary\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Widow/Widower\n                                            </ToggleButton>\n\n                                            <ToggleButton\n                                                value=\"Divorced\"\n                                                aria-label=\"Divorced\"\n                                                color=\"primary\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Divorced\n                                            </ToggleButton>\n                                        </ToggleButtonGroup>\n                                    )}\n                                    rules={{\n                                        required: \"Marital Status is required\",\n                                    }}\n                                />\n                                <FormHelperText className=\"Mui-error\">\n                                    {errors.maritalstatus?.message}\n                                </FormHelperText>\n                            </FormControl>\n                            <Controller\n                                name=\"mothertongue\"\n                                control={control}\n                                defaultValue=\"\"\n                                render={({\n                                    field: { onChange, value },\n                                    fieldState: { error },\n                                }) => (\n                                    <TextField\n                                        label=\"Mother Tongue\"\n                                        variant=\"outlined\"\n                                        value={value}\n                                        fullWidth\n                                        onChange={onChange}\n                                        error={!!error}\n                                        className=\"mat__textbox\"\n                                        helperText={\n                                            error ? error.message : null\n                                        }\n                                    />\n                                )}\n                                rules={{\n                                    required:\n                                        \"Mother Tongue Created By is required\",\n                                }}\n                            />\n                            <Controller\n                                render={({ field, fieldState: { error } }) => (\n                                    <Autocomplete\n                                        {...field}\n                                        options={heightList}\n                                        getOptionLabel={(option) => option}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                {...params}\n                                                label=\"Height\"\n                                                variant=\"outlined\"\n                                                error={!!error}\n                                                helperText={\n                                                    error ? error.message : null\n                                                }\n                                                className=\"mat__textbox\"\n                                            />\n                                        )}\n                                        onChange={(_, data) =>\n                                            field.onChange(data)\n                                        }\n                                    />\n                                )}\n                                name=\"height\"\n                                control={control}\n                                rules={{\n                                    required: \"Height is required\",\n                                }}\n                            />\n\n                            <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                            >\n                                <FormLabel component=\"legend\">\n                                    Family Status\n                                </FormLabel>\n                                <Controller\n                                    name=\"familystatus\"\n                                    control={control}\n                                    defaultValue=\"\"\n                                    value=\"\"\n                                    render={({\n                                        field,\n                                        fieldState: { error },\n                                    }) => (\n                                        <ToggleButtonGroup\n                                            value=\"\"\n                                            exclusive\n                                            color=\"primary\"\n                                            // onChange={handleAlignment}\n                                            aria-label=\"text alignment\"\n                                            {...field}\n                                            onChange={(_, data) =>\n                                                field.onChange(data)\n                                            }\n                                            error={!!error}\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                            className=\"mat__custombutgrp\"\n                                        >\n                                            <ToggleButton\n                                                value=\" Middle Class\"\n                                                aria-label=\" Middle Class\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Middle Class\n                                            </ToggleButton>\n                                            <ToggleButton\n                                                value=\"Upper Middle Class\"\n                                                aria-label=\"Upper Middle Class\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Upper Middle Class\n                                            </ToggleButton>\n\n                                            <ToggleButton\n                                                value=\"Rich\"\n                                                aria-label=\"Rich\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Rich\n                                            </ToggleButton>\n                                        </ToggleButtonGroup>\n                                    )}\n                                    rules={{\n                                        required: \"Family Status is required\",\n                                    }}\n                                />\n                                <FormHelperText className=\"Mui-error\">\n                                    {errors.familystatus?.message}\n                                </FormHelperText>\n                            </FormControl>\n\n                            <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                            >\n                                <FormLabel component=\"legend\">\n                                    Family Values\n                                </FormLabel>\n                                <Controller\n                                    name=\"familyvalues\"\n                                    control={control}\n                                    defaultValue=\"\"\n                                    value=\"\"\n                                    render={({ field }) => (\n                                        <ToggleButtonGroup\n                                            value=\"\"\n                                            exclusive\n                                            // onChange={handleAlignment}\n                                            aria-label=\"text alignment\"\n                                            {...field}\n                                            onChange={(_, data) =>\n                                                field.onChange(data)\n                                            }\n                                            className=\"mat__custombutgrp\"\n                                        >\n                                            <ToggleButton\n                                                value=\"Orthodox\"\n                                                aria-label=\"Orthodox\"\n                                                color=\"primary\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Orthodox\n                                            </ToggleButton>\n                                            <ToggleButton\n                                                value=\"Modern\"\n                                                aria-label=\"Modern\"\n                                                color=\"primary\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Modern\n                                            </ToggleButton>\n\n                                            <ToggleButton\n                                                value=\"Moderate\"\n                                                aria-label=\"Moderate\"\n                                                color=\"primary\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Moderate\n                                            </ToggleButton>\n                                        </ToggleButtonGroup>\n                                    )}\n                                    rules={{\n                                        required: \"Family Values is required\",\n                                    }}\n                                />\n                                <FormHelperText className=\"Mui-error\">\n                                    {errors.familyvalues?.message}\n                                </FormHelperText>\n                            </FormControl>\n\n                            <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                            >\n                                <FormLabel component=\"legend\">\n                                    Family Type\n                                </FormLabel>\n                                <Controller\n                                    name=\"familytype\"\n                                    control={control}\n                                    defaultValue={familyType}\n                                    value={familyType}\n                                    ref={register}\n                                    render={({\n                                        field,\n                                        fieldState: { error },\n                                    }) => (\n                                        <ToggleButtonGroup\n                                            value={familyType}\n                                            exclusive\n                                            // onChange={handleAlignment}\n                                            aria-label=\"text alignment\"\n                                            {...field}\n                                            onChange={(_, data) =>\n                                                field.onChange(data)\n                                            }\n                                            error={!!error}\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                            className=\"mat__custombutgrp\"\n                                        >\n                                            <ToggleButton\n                                                value=\"Joint\"\n                                                aria-label=\"Joint\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Joint\n                                            </ToggleButton>\n                                            <ToggleButton\n                                                value=\"Nuclear\"\n                                                aria-label=\"Nuclear\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Nuclear\n                                            </ToggleButton>\n                                        </ToggleButtonGroup>\n                                    )}\n                                    rules={{\n                                        required: \"Family Type is required\",\n                                    }}\n                                />\n                                <FormHelperText className=\"Mui-error\">\n                                    {errors.familytype?.message}\n                                </FormHelperText>\n                            </FormControl>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} md={6} className=\"mat__signupgrid-right\">\n                        <Paper className=\"mat__signupgrid\">\n                            <Typography variant=\"h4\">\n                                Professional Details\n                            </Typography>\n                            <Controller\n                                render={({ field, fieldState: { error } }) => (\n                                    <Autocomplete\n                                        {...field}\n                                        options={DegreeList}\n                                        getOptionLabel={(option) => option}\n                                        renderInput={(params) => (\n                                            <TextField\n                                                {...params}\n                                                label=\"Education(Highest Degree)\"\n                                                variant=\"outlined\"\n                                                error={!!error}\n                                                helperText={\n                                                    error ? error.message : null\n                                                }\n                                                className=\"mat__textbox\"\n                                            />\n                                        )}\n                                        onChange={(_, data) =>\n                                            field.onChange(data)\n                                        }\n                                    />\n                                )}\n                                name=\"education\"\n                                control={control}\n                                rules={{\n                                    required: \"Education is required\",\n                                }}\n                            />\n                            <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                            >\n                                <FormLabel component=\"legend\">\n                                    Employed In\n                                </FormLabel>\n                                <Controller\n                                    name=\"employment\"\n                                    control={control}\n                                    defaultValue=\"\"\n                                    value=\"\"\n                                    ref={register}\n                                    render={({\n                                        field,\n                                        fieldState: { error },\n                                    }) => (\n                                        <ToggleButtonGroup\n                                            value={familyType}\n                                            exclusive\n                                            // onChange={handleAlignment}\n                                            aria-label=\"Employment\"\n                                            {...field}\n                                            // onChange={(_, data) =>\n                                            //     field.onChange(data)\n                                            //     handleEmployment(data);\n\n                                            // }\n                                            onChange={(_, data) => {\n                                                field.onChange(data);\n                                                handleEmployment(data);\n                                            }}\n                                            error={!!error}\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                            className=\"mat__custombutgrp\"\n                                        >\n                                            <ToggleButton\n                                                value=\"Government\"\n                                                aria-label=\"Government\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Government\n                                            </ToggleButton>\n                                            <ToggleButton\n                                                value=\"Private\"\n                                                aria-label=\"Private\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Private\n                                            </ToggleButton>\n                                            <ToggleButton\n                                                value=\"IT Sector\"\n                                                aria-label=\"IT Sector\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                IT Sector\n                                            </ToggleButton>\n                                            <ToggleButton\n                                                value=\"Business\"\n                                                aria-label=\"Business\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Business\n                                            </ToggleButton>\n                                            <ToggleButton\n                                                value=\"Not Working\"\n                                                aria-label=\"Not Working\"\n                                                classes={{\n                                                    selected: classes.selected,\n                                                    root: classes.defaultbutton,\n                                                }}\n                                            >\n                                                Not Working\n                                            </ToggleButton>\n                                        </ToggleButtonGroup>\n                                    )}\n                                    rules={{\n                                        required: \"Employment is required\",\n                                    }}\n                                />\n                                <FormHelperText className=\"Mui-error\">\n                                    {errors.employment?.message}\n                                </FormHelperText>\n                            </FormControl>\n\n                            {employment !== \"Not Working\" ? (\n                                <div>\n                                    <FormLabel component=\"legend\">\n                                        Annual Income\n                                    </FormLabel>\n                                    <Grid container>\n                                        {/* <FormControl\n                                            component=\"fieldset\"\n                                            className=\"mat__textbox\"\n                                        > */}\n                                        <Grid\n                                            item\n                                            xs={12}\n                                            md={6}\n                                            className=\"mat__caste\"\n                                        >\n                                            <Controller\n                                                render={({\n                                                    field,\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <Autocomplete\n                                                        {...field}\n                                                        options={currencyList}\n                                                        getOptionLabel={(\n                                                            option\n                                                        ) =>\n                                                            option.cc +\n                                                            \"(\" +\n                                                            option.symbol +\n                                                            \")\" +\n                                                            \" - \" +\n                                                            option.name\n                                                        }\n                                                        renderInput={(\n                                                            params\n                                                        ) => (\n                                                            <TextField\n                                                                {...params}\n                                                                label=\"Currency\"\n                                                                variant=\"outlined\"\n                                                                error={!!error}\n                                                                helperText={\n                                                                    error\n                                                                        ? error.message\n                                                                        : null\n                                                                }\n                                                                className=\"mat__textbox\"\n                                                            />\n                                                        )}\n                                                        onChange={(_, data) =>\n                                                            field.onChange(data)\n                                                        }\n                                                    />\n                                                )}\n                                                name=\"Currency\"\n                                                control={control}\n                                                rules={{\n                                                    required:\n                                                        \"Currency is required\",\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={12}\n                                            md={6}\n                                            className=\"mat__subcaste\"\n                                        >\n                                            <Controller\n                                                name=\"income\"\n                                                control={control}\n                                                defaultValue=\"\"\n                                                render={({\n                                                    field: { onChange, value },\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <TextField\n                                                        label=\"Income\"\n                                                        variant=\"outlined\"\n                                                        value={value}\n                                                        fullWidth\n                                                        onChange={onChange}\n                                                        error={!!error}\n                                                        className=\"mat__textbox\"\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                    />\n                                                )}\n                                                rules={{\n                                                    required:\n                                                        \"Income is required\",\n                                                }}\n                                            />\n                                        </Grid>\n                                        {/* </FormControl> */}\n                                    </Grid>\n                                    <Grid container>\n                                        <Grid\n                                            item\n                                            xs={12}\n                                            md={6}\n                                            className=\"mat__caste\"\n                                        >\n                                            <Controller\n                                                name=\"companyname\"\n                                                control={control}\n                                                defaultValue=\"\"\n                                                render={({\n                                                    field: { onChange, value },\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <TextField\n                                                        label=\"Company Name\"\n                                                        variant=\"outlined\"\n                                                        value={value}\n                                                        fullWidth\n                                                        onChange={onChange}\n                                                        error={!!error}\n                                                        className=\"mat__textbox\"\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                    />\n                                                )}\n                                                rules={{\n                                                    required:\n                                                        \"Company Name is required\",\n                                                }}\n                                            />\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={12}\n                                            md={6}\n                                            className=\"mat__subcaste\"\n                                        >\n                                            <Controller\n                                                name=\"jobnature\"\n                                                control={control}\n                                                defaultValue=\"\"\n                                                render={({\n                                                    field: { onChange, value },\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <TextField\n                                                        label=\"Job Nature\"\n                                                        variant=\"outlined\"\n                                                        value={value}\n                                                        fullWidth\n                                                        onChange={onChange}\n                                                        error={!!error}\n                                                        className=\"mat__textbox\"\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                    />\n                                                )}\n                                                rules={{\n                                                    required:\n                                                        \"Job Nature is required\",\n                                                }}\n                                            />\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            ) : (\n                                \"\"\n                            )}\n                            <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                            >\n                                <FormLabel component=\"legend\">\n                                    Current Location\n                                </FormLabel>\n                                <Controller\n                                    render={({\n                                        field: { onChange, value },\n                                        fieldState: { error },\n                                    }) => (\n                                        <Select\n                                            defaultValue=\"\"\n                                            onChange={(e) => {\n                                                onChange(e);\n                                                handleCountryChangeCurrent(e);\n                                            }}\n                                            error={!!error}\n                                            className=\"mat__textbox\"\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                        >\n                                            <MenuItem value=\"\">Select</MenuItem>\n                                            {countryList.map(\n                                                (anObjectMapped, index) => {\n                                                    return (\n                                                        <MenuItem\n                                                            key={`${anObjectMapped}_{anObjectMapped.value}`}\n                                                            value={\n                                                                anObjectMapped\n                                                            }\n                                                        >\n                                                            {anObjectMapped}\n                                                        </MenuItem>\n                                                    );\n                                                }\n                                            )}\n                                        </Select>\n                                    )}\n                                    name=\"residingcountry\"\n                                    control={control}\n                                    rules={{\n                                        required: \"Country  is required\",\n                                    }}\n                                />\n                            </FormControl>\n                            {residingcountry === \"India\" ? (\n                                <Grid container>\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__caste\"\n                                    >\n                                        <FormControl\n                                            component=\"fieldset\"\n                                            className=\"mat__textbox\"\n                                        >\n                                            <FormLabel component=\"legend\">\n                                                Residing State\n                                            </FormLabel>\n                                            <Controller\n                                                render={({\n                                                    field: { onChange, value },\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <Select\n                                                        defaultValue=\"\"\n                                                        onChange={(e) => {\n                                                            onChange(e);\n                                                            handleStateChangeCurrent(\n                                                                e\n                                                            );\n                                                        }}\n                                                        error={!!error}\n                                                        className=\"mat__textbox\"\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                    >\n                                                        <MenuItem value=\"\">\n                                                            Select\n                                                        </MenuItem>\n                                                        {statesList.states\n                                                            ? statesList.states.map(\n                                                                  (\n                                                                      anObjectMapped,\n                                                                      index\n                                                                  ) => {\n                                                                      return (\n                                                                          <MenuItem\n                                                                              key={\n                                                                                  index\n                                                                              }\n                                                                              value={\n                                                                                  anObjectMapped.code\n                                                                              }\n                                                                          >\n                                                                              {\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          </MenuItem>\n                                                                      );\n                                                                  }\n                                                              )\n                                                            : \"\"}\n                                                    </Select>\n                                                )}\n                                                name=\"residingstate\"\n                                                control={control}\n                                                rules={{\n                                                    required:\n                                                        \"Residing State  is required\",\n                                                }}\n                                            />\n                                        </FormControl>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__caste\"\n                                    >\n                                        <FormControl\n                                            component=\"fieldset\"\n                                            className=\"mat__textbox\"\n                                        >\n                                            <FormLabel component=\"legend\">\n                                                Residing City\n                                            </FormLabel>\n                                            <Controller\n                                                render={({\n                                                    field: { onChange, value },\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <Select\n                                                        defaultValue=\"\"\n                                                        // onChange={(e) => {\n                                                        //     onChange(e);\n                                                        //     handleStateChange(e);\n                                                        // }}\n                                                        error={!!error}\n                                                        className=\"mat__textbox\"\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                    >\n                                                        <MenuItem value=\"\">\n                                                            Select\n                                                        </MenuItem>\n                                                        {residingcity\n                                                            ? residingcity.map(\n                                                                  (\n                                                                      anObjectMapped,\n                                                                      index\n                                                                  ) => {\n                                                                      return (\n                                                                          <MenuItem\n                                                                              key={\n                                                                                  index\n                                                                              }\n                                                                              value={\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          >\n                                                                              {\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          </MenuItem>\n                                                                      );\n                                                                  }\n                                                              )\n                                                            : \"\"}\n                                                    </Select>\n                                                )}\n                                                name=\"residingcity\"\n                                                control={control}\n                                                rules={{\n                                                    required:\n                                                        \"Residing City  is required\",\n                                                }}\n                                            />\n                                        </FormControl>\n                                    </Grid>\n                                </Grid>\n                            ) : (\n                                <Grid container>\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__caste\"\n                                    >\n                                        <Controller\n                                            name=\"residingstate\"\n                                            control={control}\n                                            defaultValue=\"\"\n                                            render={({\n                                                field: { onChange, value },\n                                                fieldState: { error },\n                                            }) => (\n                                                <TextField\n                                                    label=\"Residing State\"\n                                                    variant=\"outlined\"\n                                                    value={value}\n                                                    fullWidth\n                                                    onChange={onChange}\n                                                    error={!!error}\n                                                    className=\"mat__textbox\"\n                                                    helperText={\n                                                        error\n                                                            ? error.message\n                                                            : null\n                                                    }\n                                                />\n                                            )}\n                                            rules={{\n                                                required:\n                                                    \"Residing City  is required\",\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__subcaste\"\n                                    >\n                                        <Controller\n                                            name=\"residingcity\"\n                                            control={control}\n                                            defaultValue=\"\"\n                                            render={({\n                                                field: { onChange, value },\n                                                fieldState: { error },\n                                            }) => (\n                                                <TextField\n                                                    label=\"Residing City\"\n                                                    variant=\"outlined\"\n                                                    value={value}\n                                                    fullWidth\n                                                    onChange={onChange}\n                                                    error={!!error}\n                                                    className=\"mat__textbox\"\n                                                    helperText={\n                                                        error\n                                                            ? error.message\n                                                            : null\n                                                    }\n                                                />\n                                            )}\n                                            rules={{\n                                                required:\n                                                    \"Residing City is required\",\n                                            }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            )}\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    );\n}\nexport default withStyles(styles)(Signup);\n","/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Controller } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { selectSignupData } from \"../../features/signupSlice\";\n\n// ISO 3166-1 alpha-2\n// ⚠️ No support for IE 11\nfunction countryToFlag(isoCode) {\n    return typeof String.fromCodePoint !== \"undefined\"\n        ? isoCode\n              .toUpperCase()\n              .replace(/./g, (char) =>\n                  String.fromCodePoint(char.charCodeAt(0) + 127397)\n              )\n        : isoCode;\n}\n\nconst useStyles = makeStyles({\n    option: {\n        fontSize: 15,\n        \"& > span\": {\n            marginRight: 10,\n            fontSize: 18,\n        },\n    },\n});\n\nexport default function CountrySelect({ onChange, control }) {\n    const classes = useStyles();\n    const userData = useSelector(selectSignupData);\n    console.log(userData);\n    return (\n        <Controller\n            as={\n                <Autocomplete\n                    id=\"country-select-demo\"\n                    style={{ width: 300 }}\n                    options={countries}\n                    classes={{\n                        option: classes.option,\n                    }}\n                    autoHighlight\n                    getOptionLabel={(option) => option.label}\n                    renderOption={(option) => (\n                        <React.Fragment>\n                            <span>{countryToFlag(option.code)}</span>\n                            {option.label} ({option.code}) +{option.phone}\n                        </React.Fragment>\n                    )}\n                    renderInput={(params) => (\n                        <TextField\n                            {...params}\n                            label=\"Choose a country\"\n                            variant=\"outlined\"\n                            fullWidth\n                            inputProps={{\n                                ...params.inputProps,\n                                autoComplete: \"disabled\", // disable autocomplete and autofill\n                            }}\n                        />\n                    )}\n                />\n            }\n            onChange={([event, data]) => {\n                return data;\n            }}\n            name=\"country\"\n            control={control}\n            defaultValue={{ code: \"AF\", label: \"Afghanistan\", phone: \"93\" }}\n        />\n    );\n}\n\n// From https://bitbucket.org/atlassian/atlaskit-mk-2/raw/4ad0e56649c3e6c973e226b7efaeb28cb240ccb0/packages/core/select/src/data/countries.js\nconst countries = [\n    { code: \"AD\", label: \"Andorra\", phone: \"376\" },\n    { code: \"AE\", label: \"United Arab Emirates\", phone: \"971\" },\n    { code: \"AF\", label: \"Afghanistan\", phone: \"93\" },\n    { code: \"AG\", label: \"Antigua and Barbuda\", phone: \"1-268\" },\n    { code: \"AI\", label: \"Anguilla\", phone: \"1-264\" },\n    { code: \"AL\", label: \"Albania\", phone: \"355\" },\n    { code: \"AM\", label: \"Armenia\", phone: \"374\" },\n    { code: \"AO\", label: \"Angola\", phone: \"244\" },\n    { code: \"AQ\", label: \"Antarctica\", phone: \"672\" },\n    { code: \"AR\", label: \"Argentina\", phone: \"54\" },\n    { code: \"AS\", label: \"American Samoa\", phone: \"1-684\" },\n    { code: \"AT\", label: \"Austria\", phone: \"43\" },\n    { code: \"AU\", label: \"Australia\", phone: \"61\", suggested: true },\n    { code: \"AW\", label: \"Aruba\", phone: \"297\" },\n    { code: \"AX\", label: \"Alland Islands\", phone: \"358\" },\n    { code: \"AZ\", label: \"Azerbaijan\", phone: \"994\" },\n    { code: \"BA\", label: \"Bosnia and Herzegovina\", phone: \"387\" },\n    { code: \"BB\", label: \"Barbados\", phone: \"1-246\" },\n    { code: \"BD\", label: \"Bangladesh\", phone: \"880\" },\n    { code: \"BE\", label: \"Belgium\", phone: \"32\" },\n    { code: \"BF\", label: \"Burkina Faso\", phone: \"226\" },\n    { code: \"BG\", label: \"Bulgaria\", phone: \"359\" },\n    { code: \"BH\", label: \"Bahrain\", phone: \"973\" },\n    { code: \"BI\", label: \"Burundi\", phone: \"257\" },\n    { code: \"BJ\", label: \"Benin\", phone: \"229\" },\n    { code: \"BL\", label: \"Saint Barthelemy\", phone: \"590\" },\n    { code: \"BM\", label: \"Bermuda\", phone: \"1-441\" },\n    { code: \"BN\", label: \"Brunei Darussalam\", phone: \"673\" },\n    { code: \"BO\", label: \"Bolivia\", phone: \"591\" },\n    { code: \"BR\", label: \"Brazil\", phone: \"55\" },\n    { code: \"BS\", label: \"Bahamas\", phone: \"1-242\" },\n    { code: \"BT\", label: \"Bhutan\", phone: \"975\" },\n    { code: \"BV\", label: \"Bouvet Island\", phone: \"47\" },\n    { code: \"BW\", label: \"Botswana\", phone: \"267\" },\n    { code: \"BY\", label: \"Belarus\", phone: \"375\" },\n    { code: \"BZ\", label: \"Belize\", phone: \"501\" },\n    { code: \"CA\", label: \"Canada\", phone: \"1\", suggested: true },\n    { code: \"CC\", label: \"Cocos (Keeling) Islands\", phone: \"61\" },\n    { code: \"CD\", label: \"Congo, Republic of the\", phone: \"242\" },\n    { code: \"CF\", label: \"Central African Republic\", phone: \"236\" },\n    { code: \"CG\", label: \"Congo, Democratic Republic of the\", phone: \"243\" },\n    { code: \"CH\", label: \"Switzerland\", phone: \"41\" },\n    { code: \"CI\", label: \"Cote d'Ivoire\", phone: \"225\" },\n    { code: \"CK\", label: \"Cook Islands\", phone: \"682\" },\n    { code: \"CL\", label: \"Chile\", phone: \"56\" },\n    { code: \"CM\", label: \"Cameroon\", phone: \"237\" },\n    { code: \"CN\", label: \"China\", phone: \"86\" },\n    { code: \"CO\", label: \"Colombia\", phone: \"57\" },\n    { code: \"CR\", label: \"Costa Rica\", phone: \"506\" },\n    { code: \"CU\", label: \"Cuba\", phone: \"53\" },\n    { code: \"CV\", label: \"Cape Verde\", phone: \"238\" },\n    { code: \"CW\", label: \"Curacao\", phone: \"599\" },\n    { code: \"CX\", label: \"Christmas Island\", phone: \"61\" },\n    { code: \"CY\", label: \"Cyprus\", phone: \"357\" },\n    { code: \"CZ\", label: \"Czech Republic\", phone: \"420\" },\n    { code: \"DE\", label: \"Germany\", phone: \"49\", suggested: true },\n    { code: \"DJ\", label: \"Djibouti\", phone: \"253\" },\n    { code: \"DK\", label: \"Denmark\", phone: \"45\" },\n    { code: \"DM\", label: \"Dominica\", phone: \"1-767\" },\n    { code: \"DO\", label: \"Dominican Republic\", phone: \"1-809\" },\n    { code: \"DZ\", label: \"Algeria\", phone: \"213\" },\n    { code: \"EC\", label: \"Ecuador\", phone: \"593\" },\n    { code: \"EE\", label: \"Estonia\", phone: \"372\" },\n    { code: \"EG\", label: \"Egypt\", phone: \"20\" },\n    { code: \"EH\", label: \"Western Sahara\", phone: \"212\" },\n    { code: \"ER\", label: \"Eritrea\", phone: \"291\" },\n    { code: \"ES\", label: \"Spain\", phone: \"34\" },\n    { code: \"ET\", label: \"Ethiopia\", phone: \"251\" },\n    { code: \"FI\", label: \"Finland\", phone: \"358\" },\n    { code: \"FJ\", label: \"Fiji\", phone: \"679\" },\n    { code: \"FK\", label: \"Falkland Islands (Malvinas)\", phone: \"500\" },\n    { code: \"FM\", label: \"Micronesia, Federated States of\", phone: \"691\" },\n    { code: \"FO\", label: \"Faroe Islands\", phone: \"298\" },\n    { code: \"FR\", label: \"France\", phone: \"33\", suggested: true },\n    { code: \"GA\", label: \"Gabon\", phone: \"241\" },\n    { code: \"GB\", label: \"United Kingdom\", phone: \"44\" },\n    { code: \"GD\", label: \"Grenada\", phone: \"1-473\" },\n    { code: \"GE\", label: \"Georgia\", phone: \"995\" },\n    { code: \"GF\", label: \"French Guiana\", phone: \"594\" },\n    { code: \"GG\", label: \"Guernsey\", phone: \"44\" },\n    { code: \"GH\", label: \"Ghana\", phone: \"233\" },\n    { code: \"GI\", label: \"Gibraltar\", phone: \"350\" },\n    { code: \"GL\", label: \"Greenland\", phone: \"299\" },\n    { code: \"GM\", label: \"Gambia\", phone: \"220\" },\n    { code: \"GN\", label: \"Guinea\", phone: \"224\" },\n    { code: \"GP\", label: \"Guadeloupe\", phone: \"590\" },\n    { code: \"GQ\", label: \"Equatorial Guinea\", phone: \"240\" },\n    { code: \"GR\", label: \"Greece\", phone: \"30\" },\n    {\n        code: \"GS\",\n        label: \"South Georgia and the South Sandwich Islands\",\n        phone: \"500\",\n    },\n    { code: \"GT\", label: \"Guatemala\", phone: \"502\" },\n    { code: \"GU\", label: \"Guam\", phone: \"1-671\" },\n    { code: \"GW\", label: \"Guinea-Bissau\", phone: \"245\" },\n    { code: \"GY\", label: \"Guyana\", phone: \"592\" },\n    { code: \"HK\", label: \"Hong Kong\", phone: \"852\" },\n    { code: \"HM\", label: \"Heard Island and McDonald Islands\", phone: \"672\" },\n    { code: \"HN\", label: \"Honduras\", phone: \"504\" },\n    { code: \"HR\", label: \"Croatia\", phone: \"385\" },\n    { code: \"HT\", label: \"Haiti\", phone: \"509\" },\n    { code: \"HU\", label: \"Hungary\", phone: \"36\" },\n    { code: \"ID\", label: \"Indonesia\", phone: \"62\" },\n    { code: \"IE\", label: \"Ireland\", phone: \"353\" },\n    { code: \"IL\", label: \"Israel\", phone: \"972\" },\n    { code: \"IM\", label: \"Isle of Man\", phone: \"44\" },\n    { code: \"IN\", label: \"India\", phone: \"91\" },\n    { code: \"IO\", label: \"British Indian Ocean Territory\", phone: \"246\" },\n    { code: \"IQ\", label: \"Iraq\", phone: \"964\" },\n    { code: \"IR\", label: \"Iran, Islamic Republic of\", phone: \"98\" },\n    { code: \"IS\", label: \"Iceland\", phone: \"354\" },\n    { code: \"IT\", label: \"Italy\", phone: \"39\" },\n    { code: \"JE\", label: \"Jersey\", phone: \"44\" },\n    { code: \"JM\", label: \"Jamaica\", phone: \"1-876\" },\n    { code: \"JO\", label: \"Jordan\", phone: \"962\" },\n    { code: \"JP\", label: \"Japan\", phone: \"81\", suggested: true },\n    { code: \"KE\", label: \"Kenya\", phone: \"254\" },\n    { code: \"KG\", label: \"Kyrgyzstan\", phone: \"996\" },\n    { code: \"KH\", label: \"Cambodia\", phone: \"855\" },\n    { code: \"KI\", label: \"Kiribati\", phone: \"686\" },\n    { code: \"KM\", label: \"Comoros\", phone: \"269\" },\n    { code: \"KN\", label: \"Saint Kitts and Nevis\", phone: \"1-869\" },\n    {\n        code: \"KP\",\n        label: \"Korea, Democratic People's Republic of\",\n        phone: \"850\",\n    },\n    { code: \"KR\", label: \"Korea, Republic of\", phone: \"82\" },\n    { code: \"KW\", label: \"Kuwait\", phone: \"965\" },\n    { code: \"KY\", label: \"Cayman Islands\", phone: \"1-345\" },\n    { code: \"KZ\", label: \"Kazakhstan\", phone: \"7\" },\n    { code: \"LA\", label: \"Lao People's Democratic Republic\", phone: \"856\" },\n    { code: \"LB\", label: \"Lebanon\", phone: \"961\" },\n    { code: \"LC\", label: \"Saint Lucia\", phone: \"1-758\" },\n    { code: \"LI\", label: \"Liechtenstein\", phone: \"423\" },\n    { code: \"LK\", label: \"Sri Lanka\", phone: \"94\" },\n    { code: \"LR\", label: \"Liberia\", phone: \"231\" },\n    { code: \"LS\", label: \"Lesotho\", phone: \"266\" },\n    { code: \"LT\", label: \"Lithuania\", phone: \"370\" },\n    { code: \"LU\", label: \"Luxembourg\", phone: \"352\" },\n    { code: \"LV\", label: \"Latvia\", phone: \"371\" },\n    { code: \"LY\", label: \"Libya\", phone: \"218\" },\n    { code: \"MA\", label: \"Morocco\", phone: \"212\" },\n    { code: \"MC\", label: \"Monaco\", phone: \"377\" },\n    { code: \"MD\", label: \"Moldova, Republic of\", phone: \"373\" },\n    { code: \"ME\", label: \"Montenegro\", phone: \"382\" },\n    { code: \"MF\", label: \"Saint Martin (French part)\", phone: \"590\" },\n    { code: \"MG\", label: \"Madagascar\", phone: \"261\" },\n    { code: \"MH\", label: \"Marshall Islands\", phone: \"692\" },\n    {\n        code: \"MK\",\n        label: \"Macedonia, the Former Yugoslav Republic of\",\n        phone: \"389\",\n    },\n    { code: \"ML\", label: \"Mali\", phone: \"223\" },\n    { code: \"MM\", label: \"Myanmar\", phone: \"95\" },\n    { code: \"MN\", label: \"Mongolia\", phone: \"976\" },\n    { code: \"MO\", label: \"Macao\", phone: \"853\" },\n    { code: \"MP\", label: \"Northern Mariana Islands\", phone: \"1-670\" },\n    { code: \"MQ\", label: \"Martinique\", phone: \"596\" },\n    { code: \"MR\", label: \"Mauritania\", phone: \"222\" },\n    { code: \"MS\", label: \"Montserrat\", phone: \"1-664\" },\n    { code: \"MT\", label: \"Malta\", phone: \"356\" },\n    { code: \"MU\", label: \"Mauritius\", phone: \"230\" },\n    { code: \"MV\", label: \"Maldives\", phone: \"960\" },\n    { code: \"MW\", label: \"Malawi\", phone: \"265\" },\n    { code: \"MX\", label: \"Mexico\", phone: \"52\" },\n    { code: \"MY\", label: \"Malaysia\", phone: \"60\" },\n    { code: \"MZ\", label: \"Mozambique\", phone: \"258\" },\n    { code: \"NA\", label: \"Namibia\", phone: \"264\" },\n    { code: \"NC\", label: \"New Caledonia\", phone: \"687\" },\n    { code: \"NE\", label: \"Niger\", phone: \"227\" },\n    { code: \"NF\", label: \"Norfolk Island\", phone: \"672\" },\n    { code: \"NG\", label: \"Nigeria\", phone: \"234\" },\n    { code: \"NI\", label: \"Nicaragua\", phone: \"505\" },\n    { code: \"NL\", label: \"Netherlands\", phone: \"31\" },\n    { code: \"NO\", label: \"Norway\", phone: \"47\" },\n    { code: \"NP\", label: \"Nepal\", phone: \"977\" },\n    { code: \"NR\", label: \"Nauru\", phone: \"674\" },\n    { code: \"NU\", label: \"Niue\", phone: \"683\" },\n    { code: \"NZ\", label: \"New Zealand\", phone: \"64\" },\n    { code: \"OM\", label: \"Oman\", phone: \"968\" },\n    { code: \"PA\", label: \"Panama\", phone: \"507\" },\n    { code: \"PE\", label: \"Peru\", phone: \"51\" },\n    { code: \"PF\", label: \"French Polynesia\", phone: \"689\" },\n    { code: \"PG\", label: \"Papua New Guinea\", phone: \"675\" },\n    { code: \"PH\", label: \"Philippines\", phone: \"63\" },\n    { code: \"PK\", label: \"Pakistan\", phone: \"92\" },\n    { code: \"PL\", label: \"Poland\", phone: \"48\" },\n    { code: \"PM\", label: \"Saint Pierre and Miquelon\", phone: \"508\" },\n    { code: \"PN\", label: \"Pitcairn\", phone: \"870\" },\n    { code: \"PR\", label: \"Puerto Rico\", phone: \"1\" },\n    { code: \"PS\", label: \"Palestine, State of\", phone: \"970\" },\n    { code: \"PT\", label: \"Portugal\", phone: \"351\" },\n    { code: \"PW\", label: \"Palau\", phone: \"680\" },\n    { code: \"PY\", label: \"Paraguay\", phone: \"595\" },\n    { code: \"QA\", label: \"Qatar\", phone: \"974\" },\n    { code: \"RE\", label: \"Reunion\", phone: \"262\" },\n    { code: \"RO\", label: \"Romania\", phone: \"40\" },\n    { code: \"RS\", label: \"Serbia\", phone: \"381\" },\n    { code: \"RU\", label: \"Russian Federation\", phone: \"7\" },\n    { code: \"RW\", label: \"Rwanda\", phone: \"250\" },\n    { code: \"SA\", label: \"Saudi Arabia\", phone: \"966\" },\n    { code: \"SB\", label: \"Solomon Islands\", phone: \"677\" },\n    { code: \"SC\", label: \"Seychelles\", phone: \"248\" },\n    { code: \"SD\", label: \"Sudan\", phone: \"249\" },\n    { code: \"SE\", label: \"Sweden\", phone: \"46\" },\n    { code: \"SG\", label: \"Singapore\", phone: \"65\" },\n    { code: \"SH\", label: \"Saint Helena\", phone: \"290\" },\n    { code: \"SI\", label: \"Slovenia\", phone: \"386\" },\n    { code: \"SJ\", label: \"Svalbard and Jan Mayen\", phone: \"47\" },\n    { code: \"SK\", label: \"Slovakia\", phone: \"421\" },\n    { code: \"SL\", label: \"Sierra Leone\", phone: \"232\" },\n    { code: \"SM\", label: \"San Marino\", phone: \"378\" },\n    { code: \"SN\", label: \"Senegal\", phone: \"221\" },\n    { code: \"SO\", label: \"Somalia\", phone: \"252\" },\n    { code: \"SR\", label: \"Suriname\", phone: \"597\" },\n    { code: \"SS\", label: \"South Sudan\", phone: \"211\" },\n    { code: \"ST\", label: \"Sao Tome and Principe\", phone: \"239\" },\n    { code: \"SV\", label: \"El Salvador\", phone: \"503\" },\n    { code: \"SX\", label: \"Sint Maarten (Dutch part)\", phone: \"1-721\" },\n    { code: \"SY\", label: \"Syrian Arab Republic\", phone: \"963\" },\n    { code: \"SZ\", label: \"Swaziland\", phone: \"268\" },\n    { code: \"TC\", label: \"Turks and Caicos Islands\", phone: \"1-649\" },\n    { code: \"TD\", label: \"Chad\", phone: \"235\" },\n    { code: \"TF\", label: \"French Southern Territories\", phone: \"262\" },\n    { code: \"TG\", label: \"Togo\", phone: \"228\" },\n    { code: \"TH\", label: \"Thailand\", phone: \"66\" },\n    { code: \"TJ\", label: \"Tajikistan\", phone: \"992\" },\n    { code: \"TK\", label: \"Tokelau\", phone: \"690\" },\n    { code: \"TL\", label: \"Timor-Leste\", phone: \"670\" },\n    { code: \"TM\", label: \"Turkmenistan\", phone: \"993\" },\n    { code: \"TN\", label: \"Tunisia\", phone: \"216\" },\n    { code: \"TO\", label: \"Tonga\", phone: \"676\" },\n    { code: \"TR\", label: \"Turkey\", phone: \"90\" },\n    { code: \"TT\", label: \"Trinidad and Tobago\", phone: \"1-868\" },\n    { code: \"TV\", label: \"Tuvalu\", phone: \"688\" },\n    { code: \"TW\", label: \"Taiwan, Province of China\", phone: \"886\" },\n    { code: \"TZ\", label: \"United Republic of Tanzania\", phone: \"255\" },\n    { code: \"UA\", label: \"Ukraine\", phone: \"380\" },\n    { code: \"UG\", label: \"Uganda\", phone: \"256\" },\n    { code: \"US\", label: \"United States\", phone: \"1\", suggested: true },\n    { code: \"UY\", label: \"Uruguay\", phone: \"598\" },\n    { code: \"UZ\", label: \"Uzbekistan\", phone: \"998\" },\n    { code: \"VA\", label: \"Holy See (Vatican City State)\", phone: \"379\" },\n    { code: \"VC\", label: \"Saint Vincent and the Grenadines\", phone: \"1-784\" },\n    { code: \"VE\", label: \"Venezuela\", phone: \"58\" },\n    { code: \"VG\", label: \"British Virgin Islands\", phone: \"1-284\" },\n    { code: \"VI\", label: \"US Virgin Islands\", phone: \"1-340\" },\n    { code: \"VN\", label: \"Vietnam\", phone: \"84\" },\n    { code: \"VU\", label: \"Vanuatu\", phone: \"678\" },\n    { code: \"WF\", label: \"Wallis and Futuna\", phone: \"681\" },\n    { code: \"WS\", label: \"Samoa\", phone: \"685\" },\n    { code: \"XK\", label: \"Kosovo\", phone: \"383\" },\n    { code: \"YE\", label: \"Yemen\", phone: \"967\" },\n    { code: \"YT\", label: \"Mayotte\", phone: \"262\" },\n    { code: \"ZA\", label: \"South Africa\", phone: \"27\" },\n    { code: \"ZM\", label: \"Zambia\", phone: \"260\" },\n    { code: \"ZW\", label: \"Zimbabwe\", phone: \"263\" },\n];\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst globalUseStyles = makeStyles((theme) => ({\n  redButton: {\n    color: \"red\",\n    background: \"#fff\",\n    border: \"1px solid red\",\n    \"&:hover\": {\n      background: \"red\",\n      color: \"#fff\"\n    }\n  },\n  greentButton: {\n    color: \"green\",\n    background: \"#fff\",\n    border: \"1px solid green\",\n    \"&:hover\": {\n      background: \"green\",\n      color: \"#fff\"\n    }\n  },\n  viewLink: {\n    color: theme.palette.primary.main\n  },\n  selected: {\n    \"&&\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n      // color: theme.palette.primary.light,\n      \"&:hover\": {\n        // background: theme.palette.primary.dark,\n        background: \"#003b32\"\n      }\n    }\n  },\n  defaultbutton: {\n    borderWidth: \" 2px \",\n    borderStyle: \"solid\",\n    color: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    // background: \"#e0f2f1\",\n    borderLeftWidth: \"2.5px !Important\",\n    borderLeftColor: theme.palette.primary.main + \"!important\",\n    color: theme.palette.action.active,\n    \"&:hover\": {\n      background: theme.palette.primary.dark,\n      color: \"#fff\"\n    }\n  }\n}));\n\nexport default globalUseStyles;\n","import {\n  Grid,\n  IconButton,\n  makeStyles,\n  Paper,\n  Typography\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { db, storage } from \"../app/firebase\";\nimport { selectUser } from \"../features/userSlice\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport firebase from \"firebase\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport { useDispatch } from \"react-redux\";\nimport { updateData } from \"../features/userSlice\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport globalUseStyles from \"./globalstyles\";\nimport {\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormControlLabel,\n  Radio\n} from \"@material-ui/core\";\nconst useStyles = makeStyles((theme) => ({\n  mat__profilepics: { display: \"flex\" },\n  mat__profilepicdiv: {\n    height: \"150px\",\n    width: \"150px\",\n    background: \"#000\",\n    margin: \"0 7.5px\",\n    cursor: \"pointer\",\n    position: \"relative\",\n    \"&:hover > img\": {\n      opacity: \"0.6\"\n    },\n\n    \"&:hover \": {\n      \"& $mat__profilepic_editdelicons\": {\n        display: \"block\"\n      }\n    }\n  },\n  // mat__profilepic_editdelicons: {},\n  mat__profilepic_editdelicons: {\n    display: \"none\",\n    position: \"absolute\",\n    top: \"20px\",\n    right: \"20px\"\n  },\n  mat__profilepicupload: {\n    width: \"150px\",\n    height: \"150px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderColor: theme.palette.primary.main,\n    borderWidth: \"1px\",\n    borderStyle: \"solid\",\n    margin: \"0 7.5px\"\n  },\n  mat__profilepic: {\n    width: \"150px\",\n    height: \"150px\",\n    objectFit: \"cover\",\n    \"&:hover\": {}\n  },\n  mat__uploadphoto_radio: {\n    alignItems: \"center\"\n  }\n}));\nfunction UploadPhotos() {\n  const classes = useStyles();\n  const globalClasses = globalUseStyles();\n  const userDetails = useSelector(selectUser);\n  console.log(userDetails);\n  const [user, setUser] = useState(userDetails);\n  // console.log(user.email);\n  // console.log(db.collection(\"users\").doc(user.id));\n  const [loggedUsersData, setloggedUsersData] = useState();\n  const filepickerRef = useRef(null);\n  const filepickerRef1 = useRef(null);\n  const filepickerRef2 = useRef(null);\n  // var docRef = db.collection(\"users\").doc(user.email);\n  // docRef.get().then((doc) => {\n  //     if (doc.exists) {\n  //         console.log(doc.data());\n  //     }\n  // });\n  const [pic1, setpic1] = useState(\"\");\n  const [pic2, setpic2] = useState(\"\");\n  const [loadprofilepic, setloadprofilepic] = useState(false);\n  const [loadpic1, setloadpic1] = useState(false);\n  const [loadpic2, setloadpic2] = useState(false);\n  const [profilePic, setprofilePic] = useState(\n    user.profileUrl ? user.profileUrl : \"\"\n  );\n\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(user.email)\n      .onSnapshot((doc) => {\n        setloggedUsersData(doc.data());\n        setpic1(doc.data()?.pic1 ? doc.data()?.pic1 : \"\");\n        setpic2(doc.data()?.pic2 ? doc.data()?.pic2 : \"\");\n        setprofilePic(doc.data()?.profilepic);\n      });\n\n    // }\n    console.log(\"gg\");\n  }, [pic1, pic2, profilePic, user.email]);\n  console.log(loggedUsersData);\n\n  // console.log(profilePic);\n  // console.log(pic1);\n  // console.log(pic2);\n  // console.log(user.email);\n  // const removeImage1 = () => {\n  //     setimage1(null);\n  // };\n\n  const addImage = (e, imageType) => {\n    const reader = new FileReader();\n    if (e.target.files[0]) {\n      reader.readAsDataURL(e.target.files[0]);\n    }\n    reader.onload = (readerEvent) => {\n      // console.log(readerEvent.target.result);\n      if (readerEvent.target.result) {\n        const uploadTaskPic = storage\n          .ref(`profiepics/${user.userData.email + imageType}`)\n          .putString(readerEvent.target.result, \"data_url\");\n        // removeImage1();\n        uploadTaskPic.on(\n          \"state_change\",\n          null,\n          (error) => console.log(error),\n\n          () => {\n            // var progress =\n            //     (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            // console.log(\"Upload is \" + progress + \"% done\");\n            storage\n              .ref(\"profiepics\")\n              .child(user.userData.email + imageType)\n              .getDownloadURL()\n              .then((url) => {\n                if (imageType === \"profilePic\") {\n                  firebase.auth().currentUser.updateProfile({\n                    photoURL: url\n                  });\n                  setprofilePic(url);\n                  console.log(\"profilepic\");\n                  db.collection(\"users\").doc(user.userData.email).set(\n                    {\n                      profilepic: url\n                    },\n                    { merge: true }\n                  );\n                } else {\n                  if (imageType === \"pic1\") {\n                    db.collection(\"users\").doc(user.userData.email).set(\n                      {\n                        pic1: url\n                      },\n                      { merge: true }\n                    );\n                    setpic1(url);\n                  } else {\n                    setloadpic2(true);\n                    db.collection(\"users\").doc(user.userData.email).set(\n                      {\n                        pic2: url\n                      },\n                      { merge: true }\n                    );\n                    setpic2(url);\n                    setloadpic2(false);\n                  }\n                }\n              });\n          }\n        );\n      }\n    };\n  };\n\n  const deletePic = (pictype, imgurl) => {\n    // const storage = getStorage();\n\n    // Create a reference to the file to delete\n    let desertRef = storage.refFromURL(imgurl);\n\n    // var desertRef = firebase.storage().child(\"profiepics/\" + imgurl);\n\n    // Delete the file\n    desertRef\n      .delete()\n      .then(function () {\n        // File deleted successfully\n        db.collection(\"users\")\n          .doc(userDetails.email)\n          .set(\n            {\n              [pictype]: \"\"\n            },\n            { merge: true }\n          );\n        console.log(\"deleted\");\n        if (pictype === \"profilepic\")\n          firebase.auth().currentUser.updateProfile({\n            photoURL: \"\"\n          });\n        pictype === \"profilepic\"\n          ? setprofilePic(\"\")\n          : pictype === \"pic1\"\n          ? setpic1(\"\")\n          : setpic2(\"\");\n      })\n      .catch(function (error) {\n        // Uh-oh, an error occurred!\n        console.log(\"some error\");\n      });\n  };\n  const dispatch = useDispatch();\n\n  const [value, setValue] = React.useState(user?.userData?.privacy?.photos);\n  useEffect(() => {\n    setValue(user?.userData?.privacy?.photos);\n  }, [user]);\n  const handleChange = (event) => {\n    setValue(event.target.value);\n\n    db.collection(\"users\")\n      .doc(user.userData.email)\n      .set(\n        {\n          privacy: {\n            photos: event.target.value\n          }\n        },\n        { merge: true }\n      )\n      .then(() => {\n        dispatch(\n          updateData({\n            privacy: {\n              photos: event.target.value\n            }\n          })\n        );\n      })\n      .catch((error) => alert(error.message));\n  };\n  return (\n    <div className={classes}>\n      <Grid container justify=\"center\">\n        <Grid item xs={12} md={12}>\n          <Paper className=\"mat__signupgrid\">\n            <Typography variant=\"h4\">Manage Photos</Typography>\n\n            <p>First Picture will be your Display Picture</p>\n            <div className={classes.mat__profilepics}>\n              {profilePic ? (\n                <div className={classes.mat__profilepicdiv}>\n                  <img\n                    src={profilePic}\n                    alt=\"profilepic\"\n                    className={classes.mat__profilepic}\n                  ></img>\n                  <div className={classes.mat__profilepic_editdelicons}>\n                    {/* <EditIcon\n                                            className={\n                                                classes.mat__profilepic_editicon\n                                            }\n                                        /> */}\n                    <DeleteIcon\n                      className={classes.mat__profilepic_editicon}\n                      onClick={() => deletePic(\"profilepic\", profilePic)}\n                    />\n                  </div>\n                </div>\n              ) : (\n                <div\n                  className={classes.mat__profilepicupload}\n                  onClick={() => filepickerRef.current.click()}\n                >\n                  <IconButton color=\"primary\" title=\"Toggle Light/Dark theme\">\n                    <input\n                      type=\"file\"\n                      hidden\n                      onChange={(e) => addImage(e, \"profilePic\")}\n                      ref={filepickerRef}\n                    />\n                    <PhotoCamera />\n                    Upload\n                  </IconButton>\n                </div>\n              )}\n\n              {pic1 ? (\n                <div className={classes.mat__profilepicdiv}>\n                  <img\n                    src={pic1}\n                    alt=\"profilepic\"\n                    className={classes.mat__profilepic}\n                  ></img>\n                  <div className={classes.mat__profilepic_editdelicons}>\n                    {/* <EditIcon\n                                            className={\n                                                classes.mat__profilepic_editicon\n                                            }\n                                        /> */}\n                    <DeleteIcon\n                      className={classes.mat__profilepic_editicon}\n                      onClick={() => deletePic(\"pic1\", pic1)}\n                    />\n                  </div>\n                </div>\n              ) : (\n                <div\n                  className={classes.mat__profilepicupload}\n                  onClick={() => filepickerRef1.current.click()}\n                >\n                  <IconButton color=\"primary\" title=\"Toggle Light/Dark theme\">\n                    <input\n                      type=\"file\"\n                      hidden\n                      onChange={(e) => addImage(e, \"pic1\")}\n                      ref={filepickerRef1}\n                    />\n                    <PhotoCamera />\n                    Upload\n                  </IconButton>\n                </div>\n              )}\n\n              {pic2 ? (\n                <div className={classes.mat__profilepicdiv}>\n                  <img\n                    src={pic2}\n                    alt=\"profilepic\"\n                    className={classes.mat__profilepic}\n                  ></img>\n                  <div className={classes.mat__profilepic_editdelicons}>\n                    {/* <EditIcon\n                                            className={\n                                                classes.mat__profilepic_editicon\n                                            }\n                                        /> */}\n                    <DeleteIcon\n                      className={classes.mat__profilepic_editicon}\n                      onClick={() => deletePic(\"pic2\", pic2)}\n                    />\n                  </div>\n                </div>\n              ) : loadpic2 ? (\n                <Skeleton variant=\"rect\" width={210} height={118} />\n              ) : (\n                <div\n                  className={classes.mat__profilepicupload}\n                  onClick={() => filepickerRef2.current.click()}\n                >\n                  <IconButton color=\"primary\" title=\"Toggle Light/Dark theme\">\n                    <input\n                      type=\"file\"\n                      hidden\n                      onChange={(e) => addImage(e, \"pic2\")}\n                      ref={filepickerRef2}\n                    />\n                    <PhotoCamera />\n                    Upload\n                  </IconButton>\n                </div>\n              )}\n            </div>\n            <div>\n              <FormControl>\n                <FormLabel id=\"demo-row-radio-buttons-group-label\">\n                  <h2>Who can see my photo?</h2>\n                </FormLabel>\n                <RadioGroup\n                  row\n                  aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                  alignItems=\"center\"\n                  className={classes.mat__uploadphoto_radio}\n                  name=\"row-radio-buttons-group\"\n                  value={value}\n                  onChange={handleChange}\n                >\n                  <FormControlLabel\n                    value=\"Everyone\"\n                    control={<Radio />}\n                    label=\"Everyone\"\n                  />\n                  <FormControlLabel\n                    value=\"withrequest\"\n                    control={<Radio />}\n                    label=\"ONLY people with request\"\n                  />\n\n                  <Tooltip\n                    title=\"If you select this, then even you will not be able to see anybody's photo\"\n                    placement=\"top-center\"\n                    className={classes.tooltiptitle}\n                  >\n                    <InfoIcon />\n                  </Tooltip>\n                </RadioGroup>\n              </FormControl>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default UploadPhotos;\n","import React, { useState } from \"react\";\nimport {\n  Typography,\n  TextField,\n  Button,\n  Stepper,\n  Step,\n  StepLabel,\n  Grid,\n  FormHelperText,\n  FormControlLabel,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  Paper\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  useForm,\n  Controller,\n  FormProvider,\n  useFormContext\n} from \"react-hook-form\";\nimport { Radio } from \"@material-ui/core\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport {\n  KeyboardDatePicker,\n  KeyboardTimePicker,\n  MuiPickersUtilsProvider\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  countryList,\n  statesList,\n  subCasteArrMadhwa,\n  subCasteArrSmartha,\n  subCasteArrVaishnava,\n  Gothra,\n  birthStar,\n  Raashi,\n  caste,\n  heightList,\n  DegreeList,\n  currencyList\n} from \"./Dataforsignup\";\nimport moment from \"moment\";\nimport { auth, db } from \"../app/firebase\";\nimport firebase from \"firebase\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../features/userSlice\";\nimport { useHistory } from \"react-router-dom\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  input: {\n    \"&:-webkit-autofill\": {\n      WebkitBoxShadow: \"0 0 0 1000px white inset\"\n    }\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  selected: {\n    \"&&\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n      // color: theme.palette.primary.light,\n      \"&:hover\": {\n        // background: theme.palette.primary.dark,\n        background: \"#003b32\"\n      }\n    }\n  },\n  defaultbutton: {\n    borderWidth: \" 2px \",\n    borderStyle: \"solid\",\n    color: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    // background: \"#e0f2f1\",\n    borderLeftWidth: \"2.5px !Important\",\n    borderLeftColor: theme.palette.primary.main + \"!important\",\n    color: theme.palette.action.active,\n    \"&:hover\": {\n      background: theme.palette.primary.dark,\n      color: \"#fff\"\n    }\n  }\n}));\n\nfunction getSteps() {\n  return [\n    \"Profile Info\",\n    \"Religion Info\",\n    \"Personal Info\",\n    \"Professional Info\"\n  ];\n}\n// const prevStep = () => {\n//     history.push(\"./step1\");\n// };\n\nconst ProfileForm = () => {\n  const classes = useStyles();\n\n  const {\n    control,\n    register,\n    formState: { errors }\n  } = useFormContext();\n  console.log(errors);\n  return (\n    <Grid container justify=\"center\" className={classes.root}>\n      <Grid item xs={12} md={12}>\n        {/* <Paper className=\"mat__signupgrid\"> */}\n        <Typography variant=\"h4\">Basic Details for Profile Creation</Typography>\n\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\">Profile Created By</FormLabel>\n          <Controller\n            name=\"createdby\"\n            control={control}\n            defaultValue=\"\"\n            value=\"\"\n            render={({ field, fieldState: { error } }) => (\n              <ToggleButtonGroup\n                color=\"primary\"\n                value=\"\"\n                exclusive\n                // onChange={handleAlignment}\n                aria-label=\"text alignment\"\n                {...field}\n                onChange={(_, data) => field.onChange(data)}\n                error={!!error}\n                helperText={error ? error.message : null}\n                className=\"mat__custombutgrp\"\n              >\n                <ToggleButton\n                  value=\"Parents\"\n                  aria-label=\"Parents\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Parent\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Relative\"\n                  aria-label=\"Relative\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Relative\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Self\"\n                  aria-label=\"Self\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Self\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Friend\"\n                  aria-label=\"Friend\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Friend\n                </ToggleButton>\n              </ToggleButtonGroup>\n            )}\n            rules={{\n              required: \"Profile Created by is required\"\n            }}\n          />\n\n          <FormHelperText className=\"Mui-error\">\n            {errors.createdby?.message}\n          </FormHelperText>\n        </FormControl>\n\n        <Controller\n          name=\"name\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field: { onChange, value }, fieldState: { error } }) => (\n            <TextField\n              label=\"Name\"\n              variant=\"outlined\"\n              value={value}\n              fullWidth\n              onChange={onChange}\n              error={!!error}\n              className=\"mat__textbox\"\n              helperText={error ? error.message : null}\n            />\n          )}\n          rules={{\n            required: \"Name is required\"\n          }}\n        />\n        <Controller\n          name=\"email\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field: { onChange, value }, fieldState: { error } }) => (\n            <TextField\n              label=\"Email\"\n              variant=\"outlined\"\n              value={value}\n              fullWidth\n              onChange={onChange}\n              error={!!error}\n              className=\"mat__textbox\"\n              helperText={error ? error.message : null}\n            />\n          )}\n          rules={{\n            required: \"Email  is required\"\n          }}\n        />\n        <Controller\n          name=\"password\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field: { onChange, value }, fieldState: { error } }) => (\n            <TextField\n              label=\"Password\"\n              variant=\"outlined\"\n              value={value}\n              fullWidth\n              type=\"password\"\n              onChange={onChange}\n              error={!!error}\n              className=\"mat__textbox\"\n              helperText={error ? error.message : null}\n            />\n          )}\n          rules={{\n            required: \"Password is required\"\n          }}\n        />\n        <Controller\n          name=\"phone\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field: { onChange, value }, fieldState: { error } }) => (\n            <TextField\n              label=\"Phone \"\n              variant=\"outlined\"\n              value={value}\n              fullWidth\n              onChange={onChange}\n              error={!!error}\n              className=\"mat__textbox\"\n              helperText={error ? error.message : null}\n              inputProps={{\n                className: classes.input\n              }}\n            />\n          )}\n          rules={{\n            required: \"Phone  is required\"\n          }}\n        />\n\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel>Gender</FormLabel>\n\n          <Controller\n            name=\"gender\"\n            control={control}\n            value=\"\"\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\n              <RadioGroup\n                row\n                aria-label=\"position\"\n                name=\"gender\"\n                defaultValue=\"top\"\n                className=\"mat__textbox\"\n                onChange={(e) => {\n                  onChange(e);\n                  console.log(e.target.value);\n                }}\n                // error={Boolean(errors.gender)}\n                helperText={error ? error.message : null}\n              >\n                <FormControlLabel\n                  value=\"male\"\n                  control={\n                    <Radio\n                      color=\"primary\"\n                      {...register(\"gender\", {\n                        required: \"Choose your gender\"\n                      })}\n                    />\n                  }\n                  label=\"Male\"\n                  labelPlacement=\"start\"\n                />\n                <FormControlLabel\n                  value=\"female\"\n                  control={\n                    <Radio\n                      color=\"primary\"\n                      {...register(\"gender\", {\n                        required: \"Choose your gender\"\n                      })}\n                    />\n                  }\n                  label=\"Female\"\n                  labelPlacement=\"start\"\n                />\n              </RadioGroup>\n            )}\n            rules={{\n              required: \"Gender is required\"\n            }}\n          />\n          <FormHelperText className=\"Mui-error\">\n            {errors.gender?.message}\n          </FormHelperText>\n        </FormControl>\n        {/* <Grid container justify=\"center\">\n                    <Button\n                        color=\"primary\"\n                        justify=\"center\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                    >\n                        Register\n                    </Button>\n                </Grid> */}\n        {/* </Paper> */}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst HorosocopeForm = () => {\n  const {\n    control,\n    formState: { errors }\n  } = useFormContext();\n  console.log(errors);\n  const [subCasteArr, setsubCasteArr] = useState([\"\"]);\n  const [subCaste, setsubCaste] = useState(\"\");\n  const [subcasteValue, setsubcasteValue] = useState();\n  const [casteValue, setcasteValue] = useState();\n  const handleCasteChange = (e) => {\n    console.log(e);\n    // setsubcasteValue(\"\");\n    if (e === \"Madhwa\") {\n      setsubCasteArr(subCasteArrMadhwa);\n      setsubCaste(\"Madhwa\");\n    } else if (e === \"Smartha\") {\n      setsubCasteArr(subCasteArrSmartha);\n      setsubCaste(\"Smartha\");\n    } else {\n      setsubCasteArr(subCasteArrVaishnava);\n    }\n    // console.log(subcasteValue);\n  };\n\n  const [country, setCountry] = useState(\"\");\n\n  const [state, setState] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n\n  const handleCountryChange = (e) => {\n    console.log(e);\n    let statesC = [];\n    if (e === \"India\") {\n      statesList.states.map((state) => {\n        statesC.push(state.name);\n        console.log(state.name);\n      });\n      setState(statesC);\n      console.log(statesC);\n      setCountry(\"India\");\n    } else {\n      setCountry(\"\");\n      setState(\"\");\n      setCity(\"\");\n    }\n\n    console.log(state);\n  };\n\n  const handleStateChange = (e) => {\n    console.log(e);\n    let selectedState = e;\n    console.log(selectedState);\n    let states = statesList.states;\n    let districts = [];\n    states.map((state) => {\n      // console.log(state.name);\n      if (state.name === selectedState) {\n        console.log(state.districts);\n        // setCity(state.districts.name);\n        // console.log(state.districts);\n        state.districts.map((district) => {\n          districts.push(district.name);\n        });\n        console.log(districts);\n        setCity(districts);\n      } else {\n        console.log(\"else\");\n      }\n    });\n  };\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} md={12}>\n        {/* <Paper className=\"mat__signupgrid\"> */}\n        <Typography variant=\"h4\">Religion & Horoscope Details </Typography>\n        <Grid container>\n          <Grid item xs={12} md={6} className=\"mat__caste\">\n            <Controller\n              render={({ field, fieldState: { error } }) => (\n                <Autocomplete\n                  {...field}\n                  options={caste ? caste : \"\"}\n                  getOptionLabel={(option) => option}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Caste\"\n                      variant=\"outlined\"\n                      error={!!error}\n                      helperText={error ? error.message : null}\n                      className=\"mat__textbox\"\n                    />\n                  )}\n                  onChange={(_, data) => (\n                    field.onChange(data), handleCasteChange(data)\n                  )}\n                />\n              )}\n              name=\"caste\"\n              control={control}\n              rules={{\n                required: \"Caste is required\"\n              }}\n            />\n          </Grid>\n\n          {/* {subCaste === \"Madhwa\" ||\n                                subCaste === \"Smartha\" ? ( */}\n          <Grid item xs={12} md={6} className=\"mat__subcaste\">\n            <Controller\n              render={({ field, fieldState: { error } }) => (\n                <Autocomplete\n                  {...field}\n                  value={subcasteValue}\n                  options={subCasteArr}\n                  getOptionLabel={(option) => option}\n                  disabled={!subCaste}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Sub Caste\"\n                      variant=\"outlined\"\n                      error={!!error}\n                      helperText={error ? error.message : null}\n                      className=\"mat__textbox\"\n                    />\n                  )}\n                  onChange={(_, data) => field.onChange(data)}\n                />\n              )}\n              name=\"subcaste\"\n              control={control}\n              rules={{\n                required: \"SubCaste is required\"\n              }}\n            />\n          </Grid>\n          {/* ) : (\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__subcaste\"\n                                    >\n                                        <Controller\n                                            name=\"subcaste\"\n                                            control={control}\n                                            defaultValue=\"\"\n                                            render={({\n                                                field: { onChange, value },\n                                                fieldState: { error },\n                                            }) => (\n                                                <TextField\n                                                    label=\"Sub Caste\"\n                                                    variant=\"outlined\"\n                                                    value={value}\n                                                    fullWidth\n                                                    onChange={onChange}\n                                                    error={!!error}\n                                                    className=\"mat__textbox\"\n                                                    helperText={\n                                                        error\n                                                            ? error.message\n                                                            : null\n                                                    }\n                                                />\n                                            )}\n                                            rules={{\n                                                required:\n                                                    \"SubCaste is required\",\n                                            }}\n                                        />\n                                    </Grid>\n                                )} */}\n        </Grid>\n        <Grid container>\n          <Grid item xs={12} md={6} className=\"mat__caste\">\n            <Controller\n              render={({ field, fieldState: { error } }) => (\n                <Autocomplete\n                  {...field}\n                  options={birthStar}\n                  getOptionLabel={(option) => option}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Birth Star/Nakshatraa\"\n                      variant=\"outlined\"\n                      error={!!error}\n                      helperText={error ? error.message : null}\n                      className=\"mat__textbox\"\n                    />\n                  )}\n                  onChange={(_, data) => field.onChange(data)}\n                />\n              )}\n              name=\"birthstar\"\n              control={control}\n              rules={{\n                required: \"Birth Star is required\"\n              }}\n            />\n          </Grid>\n          <Grid item xs={12} md={6} className=\"mat__subcaste\">\n            <Controller\n              render={({ field, fieldState: { error } }) => (\n                <Autocomplete\n                  {...field}\n                  options={Raashi}\n                  getOptionLabel={(option) => option}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      label=\"Raashi\"\n                      variant=\"outlined\"\n                      error={!!error}\n                      helperText={error ? error.message : null}\n                      className=\"mat__textbox\"\n                    />\n                  )}\n                  onChange={(_, data) => field.onChange(data)}\n                />\n              )}\n              name=\"raashi\"\n              control={control}\n              rules={{\n                required: \"Birth Star is required\"\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Controller\n          render={({ field, fieldState: { error } }) => (\n            <Autocomplete\n              {...field}\n              options={Gothra}\n              getOptionLabel={(option) => option}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Gothra\"\n                  variant=\"outlined\"\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                  className=\"mat__textbox\"\n                />\n              )}\n              onChange={(_, data) => field.onChange(data)}\n            />\n          )}\n          name=\"gothra\"\n          control={control}\n          rules={{\n            required: \"Gothra is required\"\n          }}\n        />\n\n        {/* <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                            >\n                                <FormLabel component=\"legend\">\n                                    Country of Birth\n                                </FormLabel>\n                                <Controller\n                                    render={({\n                                        field: { onChange, value },\n                                        fieldState: { error },\n                                    }) => (\n                                        <Select\n                                            defaultValue=\"\"\n                                            onChange={(e) => {\n                                                onChange(e);\n                                                handleCountryChange(e);\n                                            }}\n                                            error={!!error}\n                                            className=\"mat__textbox\"\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                        >\n                                            <MenuItem value=\"\">Select</MenuItem>\n                                            {countryList.map(\n                                                (anObjectMapped, index) => {\n                                                    return (\n                                                        <MenuItem\n                                                            key={`${anObjectMapped}_{anObjectMapped.value}`}\n                                                            value={\n                                                                anObjectMapped\n                                                            }\n                                                        >\n                                                            {anObjectMapped}\n                                                        </MenuItem>\n                                                    );\n                                                }\n                                            )}\n                                        </Select>\n                                    )}\n                                    name=\"birthcountry\"\n                                    control={control}\n                                    rules={{\n                                        required:\n                                            \"Birth of Country  is required\",\n                                    }}\n                                />\n                                <FormHelperText className=\"Mui-error\">\n                                    {errors.birthcountry?.message}\n                                </FormHelperText>\n                            </FormControl> */}\n        <Controller\n          render={({ field, fieldState: { error } }) => (\n            <Autocomplete\n              {...field}\n              options={countryList ? countryList : \"\"}\n              getOptionLabel={(option) => option}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\" Country of Birth\"\n                  variant=\"outlined\"\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                  className=\"mat__textbox\"\n                />\n              )}\n              onChange={(_, data) => (\n                field.onChange(data), handleCountryChange(data)\n              )}\n            />\n          )}\n          name=\"birthcountry\"\n          control={control}\n          rules={{\n            required: \"Birth of Country  is required\"\n          }}\n        />\n        {country === \"India\" ? (\n          <Grid container>\n            <Grid item xs={12} md={6} className=\"mat__caste\">\n              {/* <FormControl\n                                            component=\"fieldset\"\n                                            className=\"mat__textbox\"\n                                        >\n                                            <FormLabel component=\"legend\">\n                                                State of Birth\n                                            </FormLabel>\n                                            <Controller\n                                                render={({\n                                                    field: { onChange, value },\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <Select\n                                                        defaultValue=\"\"\n                                                        onChange={(e) => {\n                                                            onChange(e);\n                                                            handleStateChange(\n                                                                e\n                                                            );\n                                                        }}\n                                                        error={!!error}\n                                                        className=\"mat__textbox\"\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                    >\n                                                        <MenuItem value=\"\">\n                                                            Select\n                                                        </MenuItem>\n                                                        {statesList.states\n                                                            ? statesList.states.map(\n                                                                  (\n                                                                      anObjectMapped,\n                                                                      index\n                                                                  ) => {\n                                                                      return (\n                                                                          <MenuItem\n                                                                              key={\n                                                                                  index\n                                                                              }\n                                                                              value={\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          >\n                                                                              {\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          </MenuItem>\n                                                                      );\n                                                                  }\n                                                              )\n                                                            : \"\"}\n                                                    </Select>\n                                                )}\n                                                name=\"birthstate\"\n                                                control={control}\n                                                rules={{\n                                                    required:\n                                                        \"Birth State  is required\",\n                                                }}\n                                            />\n                                        </FormControl> */}\n              <Controller\n                render={({ field, fieldState: { error } }) => (\n                  <Autocomplete\n                    {...field}\n                    options={state ? state : \"\"}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"State of Birth\"\n                        variant=\"outlined\"\n                        error={!!error}\n                        helperText={error ? error.message : null}\n                        className=\"mat__textbox\"\n                      />\n                    )}\n                    onChange={(_, data) => (\n                      field.onChange(data), handleStateChange(data)\n                    )}\n                  />\n                )}\n                name=\"birthstate\"\n                control={control}\n                rules={{\n                  required: \"Birth of State  is required\"\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6} className=\"mat__subcaste\">\n              {/* <FormControl\n                                            component=\"fieldset\"\n                                            className=\"mat__textbox\"\n                                        >\n                                            <FormLabel component=\"legend\">\n                                                City of Birth\n                                            </FormLabel>\n                                            <Controller\n                                                render={({\n                                                    field: { onChange, value },\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <Select\n                                                        defaultValue=\"\"\n                                                        // onChange={(e) => {\n                                                        //     onChange(e);\n                                                        //     handleStateChange(e);\n                                                        // }}\n                                                        error={!!error}\n                                                        className=\"mat__textbox\"\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                    >\n                                                        <MenuItem value=\"\">\n                                                            Select\n                                                        </MenuItem>\n                                                        {city\n                                                            ? city.map(\n                                                                  (\n                                                                      anObjectMapped,\n                                                                      index\n                                                                  ) => {\n                                                                      return (\n                                                                          <MenuItem\n                                                                              key={\n                                                                                  index\n                                                                              }\n                                                                              value={\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          >\n                                                                              {\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          </MenuItem>\n                                                                      );\n                                                                  }\n                                                              )\n                                                            : \"\"}\n                                                    </Select>\n                                                )}\n                                                name=\"cityofbirth\"\n                                                control={control}\n                                                rules={{\n                                                    required:\n                                                        \"City of Birth is required\",\n                                                }}\n                                            />\n                                        </FormControl> */}\n              <Controller\n                render={({ field, fieldState: { error } }) => (\n                  <Autocomplete\n                    {...field}\n                    options={city ? city : \"\"}\n                    getOptionLabel={(option) => option}\n                    disabled={!city}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Birth City\"\n                        variant=\"outlined\"\n                        error={!!error}\n                        helperText={error ? error.message : null}\n                        className=\"mat__textbox\"\n                      />\n                    )}\n                    onChange={(_, data) => (\n                      field.onChange(data), handleStateChange(data)\n                    )}\n                  />\n                )}\n                name=\"birthcity\"\n                control={control}\n                rules={{\n                  required: \"Birth City  is required\"\n                }}\n              />\n            </Grid>\n          </Grid>\n        ) : (\n          <Grid container>\n            <Grid item xs={12} md={6} className=\"mat__caste\">\n              <Controller\n                name=\"birthstate\"\n                control={control}\n                defaultValue=\"\"\n                render={({\n                  field: { onChange, value },\n                  fieldState: { error }\n                }) => (\n                  <TextField\n                    label=\"State of Birth\"\n                    variant=\"outlined\"\n                    value={value}\n                    fullWidth\n                    onChange={onChange}\n                    error={!!error}\n                    className=\"mat__textbox\"\n                    helperText={error ? error.message : null}\n                  />\n                )}\n                rules={{\n                  required: \"Birth State is required\"\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6} className=\"mat__subcaste\">\n              <Controller\n                name=\"birthcity\"\n                control={control}\n                defaultValue=\"\"\n                render={({\n                  field: { onChange, value },\n                  fieldState: { error }\n                }) => (\n                  <TextField\n                    label=\"City of Birth\"\n                    variant=\"outlined\"\n                    value={value}\n                    fullWidth\n                    onChange={onChange}\n                    error={!!error}\n                    className=\"mat__textbox\"\n                    helperText={error ? error.message : null}\n                  />\n                )}\n                rules={{\n                  required: \"Birth City is required\"\n                }}\n              />\n            </Grid>\n          </Grid>\n        )}\n        <Grid container>\n          <Grid item xs={12} md={6} className=\"mat__caste\">\n            <FormControl component=\"fieldset\" className=\"mat__textbox\">\n              <FormLabel component=\"legend\">D.O.B</FormLabel>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Controller\n                  name=\"birthdate\"\n                  control={control}\n                  defaultValue={null}\n                  render={({ field: { ref, ...rest } }) => (\n                    <KeyboardDatePicker\n                      margin=\"normal\"\n                      id=\"date-picker-dialog\"\n                      // label=\"Date Of Birth\"\n                      format=\"MM/dd/yyyy\"\n                      fullWidth\n                      value={null}\n                      // value={moment().subtract(\n                      //     18,\n                      //     \"years\"\n                      // )}\n                      // value={\"MM/dd/yyyy\"}\n                      // maxDate={new Date()}\n                      minDate={moment().subtract(500, \"years\")}\n                      maxDate={moment().subtract(18, \"years\")}\n                      KeyboardButtonProps={{\n                        \"aria-label\": \"change date\"\n                      }}\n                      error={Boolean(errors.birthdate)}\n                      helperText={errors.birthdate?.message}\n                      {...rest}\n                    />\n                  )}\n                  rules={{\n                    required: \"D.O.B is required.\"\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} md={6} className=\"mat__subcaste\">\n            <FormControl component=\"fieldset\" className=\"mat__textbox\">\n              <FormLabel component=\"legend\">Time Of Birth</FormLabel>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Controller\n                  name=\"birthtime\"\n                  control={control}\n                  defaultValue={null}\n                  render={({ field: { ref, ...rest } }) => (\n                    <KeyboardTimePicker\n                      margin=\"normal\"\n                      id=\"time-picker\"\n                      // value={selectedDate}\n                      // onChange={\n                      //     handleDateChange\n                      // }\n                      value={null}\n                      KeyboardButtonProps={{\n                        \"aria-label\": \"change time\"\n                      }}\n                      error={Boolean(errors.birthdate)}\n                      helperText={errors.birthdate?.message}\n                      {...rest}\n                    />\n                  )}\n                  rules={{\n                    required: \"Time of Birth is required.\"\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            </FormControl>\n          </Grid>\n          {/* <Grid\n                            container\n                            justify=\"center\"\n                            class=\"signup__buttons\"\n                        >\n                            <Button\n                                color=\"secondary\"\n                                justify=\"center\"\n                                variant=\"contained\"\n                                type=\"button\"\n                                onClick={prevStep}\n                            >\n                                Previous\n                            </Button>\n                            <Button\n                                color=\"primary\"\n                                justify=\"center\"\n                                variant=\"contained\"\n                                type=\"submit\"\n                            >\n                                Continue\n                            </Button> \n                        </Grid>*/}\n        </Grid>\n        {/* </Paper> */}\n      </Grid>\n    </Grid>\n  );\n};\n\nconst PersonalForm = () => {\n  const {\n    control,\n    register,\n    formState: { errors }\n  } = useFormContext();\n  console.log(errors);\n  const classes = useStyles();\n  return (\n    <Grid container justify=\"center\" className={classes.root}>\n      <Grid item xs={12} md={12}>\n        {/* <Paper className=\"mat__signupgrid\"> */}\n        <Typography variant=\"h4\">Personal Details</Typography>\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\">Marital Status</FormLabel>\n          <Controller\n            name=\"maritalstatus\"\n            control={control}\n            defaultValue=\"\"\n            value=\"\"\n            render={({ field }) => (\n              <ToggleButtonGroup\n                value=\"\"\n                exclusive\n                // onChange={handleAlignment}\n                aria-label=\"text alignment\"\n                {...field}\n                onChange={(_, data) => field.onChange(data)}\n                className=\"mat__custombutgrp\"\n              >\n                <ToggleButton\n                  value=\"Unmarried\"\n                  aria-label=\"Unmarried\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Unmarried\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Widow/Widower\"\n                  aria-label=\"Widow/Widower\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Widow/Widower\n                </ToggleButton>\n\n                <ToggleButton\n                  value=\"Divorced\"\n                  aria-label=\"Divorced\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Divorced\n                </ToggleButton>\n              </ToggleButtonGroup>\n            )}\n            rules={{\n              required: \"Marital Status is required\"\n            }}\n          />\n          <FormHelperText className=\"Mui-error\">\n            {errors.maritalstatus?.message}\n          </FormHelperText>\n        </FormControl>\n        <Controller\n          name=\"mothertongue\"\n          control={control}\n          defaultValue=\"\"\n          render={({ field: { onChange, value }, fieldState: { error } }) => (\n            <TextField\n              label=\"Mother Tongue\"\n              variant=\"outlined\"\n              value={value}\n              fullWidth\n              onChange={onChange}\n              error={!!error}\n              className=\"mat__textbox\"\n              helperText={error ? error.message : null}\n            />\n          )}\n          rules={{\n            required: \"Mother Tongue Created By is required\"\n          }}\n        />\n        <Controller\n          render={({ field, fieldState: { error } }) => (\n            <Autocomplete\n              {...field}\n              options={heightList}\n              getOptionLabel={(option) => option}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Height\"\n                  variant=\"outlined\"\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                  className=\"mat__textbox\"\n                />\n              )}\n              onChange={(_, data) => field.onChange(data)}\n            />\n          )}\n          name=\"height\"\n          control={control}\n          rules={{\n            required: \"Height is required\"\n          }}\n        />\n\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\">Family Status</FormLabel>\n          <Controller\n            name=\"familystatus\"\n            control={control}\n            defaultValue=\"\"\n            value=\"\"\n            render={({ field, fieldState: { error } }) => (\n              <ToggleButtonGroup\n                value=\"\"\n                exclusive\n                color=\"primary\"\n                // onChange={handleAlignment}\n                aria-label=\"text alignment\"\n                {...field}\n                onChange={(_, data) => field.onChange(data)}\n                error={!!error}\n                helperText={error ? error.message : null}\n                className=\"mat__custombutgrp\"\n              >\n                <ToggleButton\n                  value=\" Middle Class\"\n                  aria-label=\" Middle Class\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Middle Class\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Upper Middle Class\"\n                  aria-label=\"Upper Middle Class\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Upper Middle Class\n                </ToggleButton>\n\n                <ToggleButton\n                  value=\"Rich\"\n                  aria-label=\"Rich\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Rich\n                </ToggleButton>\n              </ToggleButtonGroup>\n            )}\n            rules={{\n              required: \"Family Status is required\"\n            }}\n          />\n          <FormHelperText className=\"Mui-error\">\n            {errors.familystatus?.message}\n          </FormHelperText>\n        </FormControl>\n\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\">Family Values</FormLabel>\n          <Controller\n            name=\"familyvalues\"\n            control={control}\n            defaultValue=\"\"\n            value=\"\"\n            render={({ field }) => (\n              <ToggleButtonGroup\n                value=\"\"\n                exclusive\n                // onChange={handleAlignment}\n                aria-label=\"text alignment\"\n                {...field}\n                onChange={(_, data) => field.onChange(data)}\n                className=\"mat__custombutgrp\"\n              >\n                <ToggleButton\n                  value=\"Orthodox\"\n                  aria-label=\"Orthodox\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Orthodox\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Modern\"\n                  aria-label=\"Modern\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Modern\n                </ToggleButton>\n\n                <ToggleButton\n                  value=\"Moderate\"\n                  aria-label=\"Moderate\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Moderate\n                </ToggleButton>\n              </ToggleButtonGroup>\n            )}\n            rules={{\n              required: \"Family Values is required\"\n            }}\n          />\n          <FormHelperText className=\"Mui-error\">\n            {errors.familyvalues?.message}\n          </FormHelperText>\n        </FormControl>\n\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\">Family Type</FormLabel>\n          <Controller\n            name=\"familytype\"\n            control={control}\n            defaultValue=\"\"\n            value=\"\"\n            ref={register}\n            render={({ field, fieldState: { error } }) => (\n              <ToggleButtonGroup\n                value=\"\"\n                exclusive\n                // onChange={handleAlignment}\n                aria-label=\"text alignment\"\n                {...field}\n                onChange={(_, data) => field.onChange(data)}\n                error={!!error}\n                helperText={error ? error.message : null}\n                className=\"mat__custombutgrp\"\n              >\n                <ToggleButton\n                  value=\"Joint\"\n                  aria-label=\"Joint\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Joint\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Nuclear\"\n                  aria-label=\"Nuclear\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Nuclear\n                </ToggleButton>\n              </ToggleButtonGroup>\n            )}\n            rules={{\n              required: \"Family Type is required\"\n            }}\n          />\n          <FormHelperText className=\"Mui-error\">\n            {errors.familytype?.message}\n          </FormHelperText>\n        </FormControl>\n        {/* <Grid container justify=\"center\">\n                        <Button\n                            color=\"primary\"\n                            justify=\"center\"\n                            variant=\"contained\"\n                            type=\"submit\"\n                        >\n                            Continue\n                        </Button>\n                    </Grid> */}\n        {/* </Paper> */}\n      </Grid>\n    </Grid>\n  );\n};\nconst ProfessionalForm = () => {\n  const classes = useStyles();\n  const {\n    control,\n    register,\n    formState: { errors }\n  } = useFormContext();\n  console.log(errors);\n  const [residingcountry, setResidingCountry] = useState(\"\");\n\n  const [residingstate, setResidingState] = useState(\"\");\n  const [residingcity, setResidingCity] = useState(\"\");\n\n  const handleCountryChangeCurrent = (e) => {\n    console.log(e);\n    let statesC = [];\n    if (e === \"India\") {\n      statesList.states.map((state) => {\n        statesC.push(state.name);\n        console.log(state.name);\n      });\n      setResidingState(statesC);\n      setResidingCountry(\"India\");\n    } else {\n      setResidingCountry(\"\");\n    }\n  };\n\n  const handleStateChangeCurrent = (e) => {\n    console.log(e);\n    let selectedState = e;\n    let states = statesList.states;\n    let districts = [];\n    states.map((state) => {\n      if (state.name === selectedState) {\n        state.districts.map((district) => {\n          districts.push(district.name);\n        });\n        console.log(state.districts);\n        setResidingCity(districts);\n      } else {\n      }\n    });\n  };\n\n  const [employment, setEmployment] = useState(\"\");\n\n  const handleEmployment = (data) => {\n    setEmployment(data);\n  };\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={12} md={12}>\n        {/* <Paper className=\"mat__signupgrid\"> */}\n        <Typography variant=\"h4\">Proffessional Details</Typography>\n        <Controller\n          render={({ field, fieldState: { error } }) => (\n            <Autocomplete\n              {...field}\n              options={DegreeList}\n              getOptionLabel={(option) => option}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Education(Highest Degree)\"\n                  variant=\"outlined\"\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                  className=\"mat__textbox\"\n                />\n              )}\n              onChange={(_, data) => field.onChange(data)}\n            />\n          )}\n          name=\"education\"\n          control={control}\n          rules={{\n            required: \"Education is required\"\n          }}\n        />\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\">Employed In</FormLabel>\n          <Controller\n            name=\"employment\"\n            control={control}\n            defaultValue=\"\"\n            value=\"\"\n            ref={register}\n            render={({ field, fieldState: { error } }) => (\n              <ToggleButtonGroup\n                value=\"\"\n                exclusive\n                // onChange={handleAlignment}\n                aria-label=\"Employment\"\n                {...field}\n                // onChange={(_, data) =>\n                //     field.onChange(data)\n                //     handleEmployment(data);\n\n                // }\n                onChange={(_, data) => {\n                  field.onChange(data);\n                  handleEmployment(data);\n                }}\n                error={!!error}\n                helperText={error ? error.message : null}\n                className=\"mat__custombutgrp\"\n              >\n                <ToggleButton\n                  value=\"Government\"\n                  aria-label=\"Government\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Government\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Private\"\n                  aria-label=\"Private\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Private\n                </ToggleButton>\n                <ToggleButton\n                  value=\"IT Sector\"\n                  aria-label=\"IT Sector\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  IT Sector\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Business\"\n                  aria-label=\"Business\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Business\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Not Working\"\n                  aria-label=\"Not Working\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Not Working\n                </ToggleButton>\n              </ToggleButtonGroup>\n            )}\n            rules={{\n              required: \"Employment is required\"\n            }}\n          />\n          <FormHelperText className=\"Mui-error\">\n            {errors.employment?.message}\n          </FormHelperText>\n        </FormControl>\n\n        {employment !== \"Not Working\" ? (\n          <div>\n            <FormLabel component=\"legend\">Annual Income</FormLabel>\n            <Grid container>\n              {/* <FormControl\n                                            component=\"fieldset\"\n                                            className=\"mat__textbox\"\n                                        > */}\n              <Grid item xs={12} md={6} className=\"mat__caste\">\n                <Controller\n                  render={({ field, fieldState: { error } }) => (\n                    <Autocomplete\n                      {...field}\n                      options={currencyList}\n                      getOptionLabel={(option) =>\n                        option.cc +\n                        \"(\" +\n                        option.symbol +\n                        \")\" +\n                        \" - \" +\n                        option.name\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          label=\"Currency\"\n                          variant=\"outlined\"\n                          error={!!error}\n                          helperText={error ? error.message : null}\n                          className=\"mat__textbox\"\n                        />\n                      )}\n                      onChange={(_, data) => field.onChange(data)}\n                    />\n                  )}\n                  name=\"Currency\"\n                  control={control}\n                  rules={{\n                    required: \"Currency is required\"\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} md={6} className=\"mat__subcaste\">\n                <Controller\n                  name=\"income\"\n                  control={control}\n                  defaultValue=\"\"\n                  render={({\n                    field: { onChange, value },\n                    fieldState: { error }\n                  }) => (\n                    <TextField\n                      label=\"Income\"\n                      variant=\"outlined\"\n                      value={value}\n                      fullWidth\n                      onChange={onChange}\n                      error={!!error}\n                      className=\"mat__textbox\"\n                      helperText={error ? error.message : null}\n                    />\n                  )}\n                  rules={{\n                    required: \"Income is required\"\n                  }}\n                />\n              </Grid>\n              {/* </FormControl> */}\n            </Grid>\n            <Grid container>\n              <Grid item xs={12} md={6} className=\"mat__caste\">\n                <Controller\n                  name=\"companyname\"\n                  control={control}\n                  defaultValue=\"\"\n                  render={({\n                    field: { onChange, value },\n                    fieldState: { error }\n                  }) => (\n                    <TextField\n                      label=\"Company Name\"\n                      variant=\"outlined\"\n                      value={value}\n                      fullWidth\n                      onChange={onChange}\n                      error={!!error}\n                      className=\"mat__textbox\"\n                      helperText={error ? error.message : null}\n                    />\n                  )}\n                  rules={{\n                    required: \"Company Name is required\"\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12} md={6} className=\"mat__subcaste\">\n                <Controller\n                  name=\"jobnature\"\n                  control={control}\n                  defaultValue=\"\"\n                  render={({\n                    field: { onChange, value },\n                    fieldState: { error }\n                  }) => (\n                    <TextField\n                      label=\"Job Nature\"\n                      variant=\"outlined\"\n                      value={value}\n                      fullWidth\n                      onChange={onChange}\n                      error={!!error}\n                      className=\"mat__textbox\"\n                      helperText={error ? error.message : null}\n                    />\n                  )}\n                  rules={{\n                    required: \"Job Nature is required\"\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </div>\n        ) : (\n          \"\"\n        )}\n        {/* <FormControl\n                                component=\"fieldset\"\n                                className=\"mat__textbox\"\n                            >\n                                <FormLabel component=\"legend\">\n                                    Current Location\n                                </FormLabel>\n                                <Controller\n                                    render={({\n                                        field: { onChange, value },\n                                        fieldState: { error },\n                                    }) => (\n                                        <Select\n                                            defaultValue=\"\"\n                                            onChange={(e) => {\n                                                onChange(e);\n                                                handleCountryChangeCurrent(e);\n                                            }}\n                                            error={!!error}\n                                            className=\"mat__textbox\"\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                        >\n                                            <MenuItem value=\"\">Select</MenuItem>\n                                            {countryList.map(\n                                                (anObjectMapped, index) => {\n                                                    return (\n                                                        <MenuItem\n                                                            key={`${anObjectMapped}_{anObjectMapped.value}`}\n                                                            value={\n                                                                anObjectMapped\n                                                            }\n                                                        >\n                                                            {anObjectMapped}\n                                                        </MenuItem>\n                                                    );\n                                                }\n                                            )}\n                                        </Select>\n                                    )}\n                                    name=\"residingcountry\"\n                                    control={control}\n                                    rules={{\n                                        required: \"Country  is required\",\n                                    }}\n                                />\n                            </FormControl> */}\n        <Controller\n          render={({ field, fieldState: { error } }) => (\n            <Autocomplete\n              {...field}\n              options={countryList ? countryList : \"\"}\n              getOptionLabel={(option) => option}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\" Current Location\"\n                  variant=\"outlined\"\n                  error={!!error}\n                  helperText={error ? error.message : null}\n                  className=\"mat__textbox\"\n                />\n              )}\n              onChange={(_, data) => (\n                field.onChange(data), handleCountryChangeCurrent(data)\n              )}\n            />\n          )}\n          name=\"residingcountry\"\n          control={control}\n          rules={{\n            required: \"Country  is required\"\n          }}\n        />\n        {residingcountry === \"India\" ? (\n          <Grid container>\n            <Grid item xs={12} md={6} className=\"mat__caste\">\n              {/* <FormControl\n                                            component=\"fieldset\"\n                                            className=\"mat__textbox\"\n                                        >\n                                            <FormLabel component=\"legend\">\n                                                Residing State\n                                            </FormLabel>\n                                            <Controller\n                                                render={({\n                                                    field: { onChange, value },\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <Select\n                                                        defaultValue=\"\"\n                                                        onChange={(e) => {\n                                                            onChange(e);\n                                                            handleStateChangeCurrent(\n                                                                e\n                                                            );\n                                                        }}\n                                                        error={!!error}\n                                                        className=\"mat__textbox\"\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                    >\n                                                        <MenuItem value=\"\">\n                                                            Select\n                                                        </MenuItem>\n                                                        {statesList.states\n                                                            ? statesList.states.map(\n                                                                  (\n                                                                      anObjectMapped,\n                                                                      index\n                                                                  ) => {\n                                                                      return (\n                                                                          <MenuItem\n                                                                              key={\n                                                                                  index\n                                                                              }\n                                                                              value={\n                                                                                  anObjectMapped.code\n                                                                              }\n                                                                          >\n                                                                              {\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          </MenuItem>\n                                                                      );\n                                                                  }\n                                                              )\n                                                            : \"\"}\n                                                    </Select>\n                                                )}\n                                                name=\"residingstate\"\n                                                control={control}\n                                                rules={{\n                                                    required:\n                                                        \"Residing State  is required\",\n                                                }}\n                                            />\n                                        </FormControl>\n                                         </FormControl> */}\n              <Controller\n                render={({ field, fieldState: { error } }) => (\n                  <Autocomplete\n                    {...field}\n                    options={residingstate ? residingstate : \"\"}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Residing State\"\n                        variant=\"outlined\"\n                        error={!!error}\n                        helperText={error ? error.message : null}\n                        className=\"mat__textbox\"\n                      />\n                    )}\n                    onChange={(_, data) => (\n                      field.onChange(data), handleStateChangeCurrent(data)\n                    )}\n                  />\n                )}\n                name=\"residingstate\"\n                control={control}\n                rules={{\n                  required: \"Residing State  is required\"\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6} className=\"mat__subcaste\">\n              {/* <FormControl\n                                            component=\"fieldset\"\n                                            className=\"mat__textbox\"\n                                        >\n                                            <FormLabel component=\"legend\">\n                                                Residing City\n                                            </FormLabel>\n                                            <Controller\n                                                render={({\n                                                    field: { onChange, value },\n                                                    fieldState: { error },\n                                                }) => (\n                                                    <Select\n                                                        defaultValue=\"\"\n                                                        // onChange={(e) => {\n                                                        //     onChange(e);\n                                                        //     handleStateChange(e);\n                                                        // }}\n                                                        error={!!error}\n                                                        className=\"mat__textbox\"\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                    >\n                                                        <MenuItem value=\"\">\n                                                            Select\n                                                        </MenuItem>\n                                                        {residingcity\n                                                            ? residingcity.map(\n                                                                  (\n                                                                      anObjectMapped,\n                                                                      index\n                                                                  ) => {\n                                                                      return (\n                                                                          <MenuItem\n                                                                              key={\n                                                                                  index\n                                                                              }\n                                                                              value={\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          >\n                                                                              {\n                                                                                  anObjectMapped.name\n                                                                              }\n                                                                          </MenuItem>\n                                                                      );\n                                                                  }\n                                                              )\n                                                            : \"\"}\n                                                    </Select>\n                                                )}\n                                                name=\"residingcity\"\n                                                control={control}\n                                                rules={{\n                                                    required:\n                                                        \"Residing City  is required\",\n                                                }}\n                                            />\n                                        </FormControl> */}\n              <Controller\n                render={({ field, fieldState: { error } }) => (\n                  <Autocomplete\n                    {...field}\n                    options={residingcity ? residingcity : \"\"}\n                    disabled={!residingcity}\n                    getOptionLabel={(option) => option}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Residing City\"\n                        variant=\"outlined\"\n                        error={!!error}\n                        helperText={error ? error.message : null}\n                        className=\"mat__textbox\"\n                      />\n                    )}\n                    onChange={(_, data) => field.onChange(data)}\n                  />\n                )}\n                name=\"residingcity\"\n                control={control}\n                rules={{\n                  required: \"Residing City  is required\"\n                }}\n              />\n            </Grid>\n          </Grid>\n        ) : (\n          <Grid container>\n            <Grid item xs={12} md={6} className=\"mat__caste\">\n              <Controller\n                name=\"residingstate\"\n                control={control}\n                defaultValue=\"\"\n                render={({\n                  field: { onChange, value },\n                  fieldState: { error }\n                }) => (\n                  <TextField\n                    label=\"Residing State\"\n                    variant=\"outlined\"\n                    value={value}\n                    fullWidth\n                    onChange={onChange}\n                    error={!!error}\n                    className=\"mat__textbox\"\n                    helperText={error ? error.message : null}\n                  />\n                )}\n                rules={{\n                  required: \"Residing City  is required\"\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} md={6} className=\"mat__subcaste\">\n              <Controller\n                name=\"residingcity\"\n                control={control}\n                defaultValue=\"\"\n                render={({\n                  field: { onChange, value },\n                  fieldState: { error }\n                }) => (\n                  <TextField\n                    label=\"Residing City\"\n                    variant=\"outlined\"\n                    value={value}\n                    fullWidth\n                    onChange={onChange}\n                    error={!!error}\n                    className=\"mat__textbox\"\n                    helperText={error ? error.message : null}\n                  />\n                )}\n                rules={{\n                  required: \"Residing City is required\"\n                }}\n              />\n            </Grid>\n          </Grid>\n        )}\n        {/* <Grid container justify=\"center\">\n                        <Button\n                            color=\"primary\"\n                            justify=\"center\"\n                            variant=\"contained\"\n                            type=\"submit\"\n                        >\n                            Continue\n                        </Button>\n                    </Grid> */}\n        {/* </Paper> */}\n      </Grid>\n    </Grid>\n  );\n};\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <ProfileForm />;\n\n    case 1:\n      return <HorosocopeForm />;\n    case 2:\n      return <PersonalForm />;\n    case 3:\n      return <ProfessionalForm />;\n    default:\n      return \"unknown step\";\n  }\n}\n\nfunction Signupnew() {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [activeStep, setActiveStep] = useState(0);\n  const [skippedSteps, setSkippedSteps] = useState([]);\n  const steps = getSteps();\n  const isStepOptional = (step) => {\n    // return step === 1 || step === 2;\n  };\n  const isStepFalied = () => {\n    return Boolean(Object.keys(methods.formState.errors).length);\n  };\n  const isStepSkipped = (step) => {\n    return skippedSteps.includes(step);\n  };\n  const [datastate, setdatastate] = useState([]);\n  const handleNext = (data) => {\n    console.log(data);\n    console.log(activeStep);\n    // if (activeStep == \"0\") {\n    //     alert(data.email);\n\n    //     auth()\n    //         .getUserByEmail(data.email)\n    //         .then((user) => {\n    //             // User already exists\n    //         })\n    //         .catch((err) => {\n    //             if (err.code === \"auth/user-not-found\") {\n    //                 // User doesn't exist yet, create it...\n    //                 alert(\"user exists2\");\n    //             }\n    //         });\n    // }\n    if (activeStep == steps.length - 1) {\n      // if (activeStep == 0) {\n      console.log(\"i came here\");\n      // fetch(\"https://jsonplaceholder.typicode.com/comments\")\n      //     .then((data) => data.json())\n      //     .then((res) => {\n      //         console.log(res);\n      //         setActiveStep(activeStep + 1);\n      //     });\n      // let dataemail = data.email.charAt(0).tolowerCase() + data.email.slice(1);\n      auth\n        .createUserWithEmailAndPassword(data.email.toLowerCase(), data.password)\n        .then((userAuth) => {\n          userAuth.user\n            .updateProfile({\n              displayName: data.name\n            })\n\n            .then(() => {\n              console.log(\"inside FIRST THEN\");\n              db.collection(\"users\")\n                .doc(data.email.toLowerCase())\n                .set({\n                  uid: userAuth.user.uid,\n                  createdby: data.createdby,\n                  name: data.name,\n                  email: data.email,\n                  phone: data.phone,\n                  gender: data.gender,\n                  caste: data.caste,\n                  subcaste: data.subcaste,\n                  birthstar: data.birthstar,\n                  raashi: data.raashi,\n                  privacy: {\n                    photos: \"Everyone\"\n                  },\n                  gothra: data.gothra,\n                  birthcountry: data.birthcountry,\n                  birthstate: data.birthstate,\n                  birthcity: data.birthcity,\n                  birthdate: data.birthdate,\n                  birthtime: data.birthtime,\n                  maritalstatus: data.maritalstatus,\n                  mothertongue: data.mothertongue,\n                  height: data.height,\n                  familystatus: data.familystatus,\n                  familyvalues: data.familyvalues,\n                  familytype: data.familytype,\n                  education: data.education,\n                  employment: data.employment ? data.employment : \"\",\n                  Currency: data.Currency ? data.Currency : \"\",\n                  income: data.income ? data.income : \"\",\n                  companyname: data.companyname ? data.companyname : \"\",\n                  jobnature: data.jobnature ? data.jobnature : \"\",\n                  residingcountry: data.residingcountry,\n                  residingstate: data.residingstate,\n                  residingcity: data.residingcity,\n                  firsttimelogin: true,\n                  partnerpreferencesflag: false,\n                  timestamp: firebase.firestore.FieldValue.serverTimestamp()\n                });\n            })\n            .then(() => {\n              console.log(\"inside SECOND THEN\" + userAuth.user.email);\n              var docRef = db.collection(\"users\").doc(userAuth.user.email);\n              let userData;\n              docRef\n                .get()\n                .then((doc) => {\n                  if (doc.exists) {\n                    userData = doc.data();\n                    console.log(userData);\n\n                    dispatch(\n                      login({\n                        // uid: userAuth.user.uid,\n                        // createdby: data.createdby,\n                        // name: data.name,\n                        // email: data.email,\n                        // phone: data.phone,\n                        // gender: data.gender,\n                        // caste: data.caste,\n                        // subcaste: data.subcaste,\n                        // birthstar: data.birthstar,\n                        // raashi: data.raashi,\n                        // gothra: data.gothra,\n                        // birthcountry: data.birthcountry,\n                        // birthstate: data.birthstate,\n                        // birthcity: data.birthcity,\n                        // birthdate: data.birthdate,\n                        // birthtime: data.birthtime,\n                        // maritalstatus: data.maritalstatus,\n                        // mothertongue: data.mothertongue,\n                        // height: data.height,\n                        // familystatus: data.familystatus,\n                        // familyvalues: data.familystatus,\n                        // familytype: data.familytype,\n                        // education: data.education,\n                        // employment: data.employment\n                        //     ? data.employment\n                        //     : \"\",\n                        // Currency: data.Currency\n                        //     ? data.Currency\n                        //     : \"\",\n                        // income: data.income ? data.income : \"\",\n                        // companyname: data.companyname\n                        //     ? data.companyname\n                        //     : \"\",\n                        // jobnature: data.jobnature\n                        //     ? data.jobnature\n                        //     : \"\",\n                        // residingcountry: data.residingcountry,\n                        // residingstate: data.residingstate,\n                        // residingcity: data.residingcity,\n                        // firsttimelogin: true,\n                        email: data.email,\n                        uid: userAuth.user.uid,\n                        displayName: userAuth.user.displayName,\n                        profileUrl: userAuth.user.photoURL,\n                        userData: userData\n                      })\n                    );\n                  } else {\n                    console.log(\"else\");\n                  }\n                })\n                .then(() => {\n                  console.log(\"inside THIRD THEN\");\n                  // history.push(\"/ProfileN\", { params: { uid } });\n\n                  history.push(\"./Updateprofile\");\n                });\n            });\n        })\n\n        .catch((error) => {\n          setActiveStep(0);\n          alert(error.message);\n        });\n\n      // db.collection(\"users\").add({\n      //     timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      // });\n      setActiveStep(activeStep + 1);\n      setdatastate(JSON.stringify(data));\n    } else {\n      setActiveStep(activeStep + 1);\n      setSkippedSteps(\n        skippedSteps.filter((skipItem) => skipItem !== activeStep)\n      );\n    }\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepSkipped(activeStep)) {\n      setSkippedSteps([...skippedSteps, activeStep]);\n    }\n    setActiveStep(activeStep + 1);\n  };\n  const methods = useForm({\n    defaultValues: {\n      createdby: \"\",\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      password: \"\",\n      gender: \"\",\n      caste: \"\",\n      subcaste: \"\",\n      birthstar: \"\",\n      raashi: \"\",\n      gothra: \"\",\n      birthcountry: \"\",\n      birthstate: \"\",\n      birthcity: \"\",\n      birthdate: \"\",\n      birthtime: \"\",\n      maritalstatus: \"\",\n      mothertongue: \"\",\n      height: \"\",\n      familystatus: \"\",\n      familyvalues: \"\",\n      familytype: \"\",\n      education: \"\",\n      employment: \"\",\n      Currency: \"\",\n      income: \"\",\n      companyname: \"\",\n      jobnature: \"\",\n      residingcountry: \"\",\n      residingstate: \"\",\n      residingcity: \"\"\n    }\n  });\n  return (\n    <div>\n      <Grid container justify=\"center\">\n        <Grid item xs={12} md={6}>\n          <Paper className=\"mat__signupgrid\">\n            <Stepper alternativeLabel activeStep={activeStep}>\n              {steps.map((step, index) => {\n                const labelProps = {};\n                const stepProps = {};\n                if (isStepOptional(index)) {\n                  labelProps.optional = (\n                    <Typography\n                      variant=\"caption\"\n                      align=\"center\"\n                      style={{ display: \"block\" }}\n                    >\n                      optional\n                    </Typography>\n                  );\n                }\n                if (isStepFalied() && activeStep == index) {\n                  labelProps.error = true;\n                }\n                if (isStepSkipped(index)) {\n                  stepProps.completed = false;\n                }\n                return (\n                  <Step {...stepProps} key={index}>\n                    <StepLabel {...labelProps}>{step}</StepLabel>\n                  </Step>\n                );\n              })}\n            </Stepper>\n            {activeStep === steps.length ? (\n              <Typography variant=\"h3\" align=\"center\">\n                Thank You\n                {datastate}\n                {/* <ul>\n                                    {datastate.map((dta) => {\n                                        return <li>dta</li>;\n                                    })}\n                                </ul> */}\n              </Typography>\n            ) : (\n              <>\n                <FormProvider {...methods}>\n                  <form onSubmit={methods.handleSubmit(handleNext)}>\n                    {getStepContent(activeStep)}\n\n                    <Button\n                      className={classes.button}\n                      disabled={activeStep === 0}\n                      onClick={handleBack}\n                    >\n                      back\n                    </Button>\n                    {isStepOptional(activeStep) && (\n                      <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleSkip}\n                      >\n                        skip\n                      </Button>\n                    )}\n                    <Button\n                      className={classes.button}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      // onClick={handleNext}\n                      type=\"submit\"\n                    >\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n                    </Button>\n                  </form>\n                </FormProvider>\n              </>\n            )}\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Signupnew;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { handleDarkMode, logout, selectUser } from \"../features/userSlice\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport firebase from \"firebase\";\n\nimport {\n  Avatar,\n  Button,\n  ClickAwayListener,\n  Grow,\n  Link,\n  MenuList,\n  Paper,\n  Popper\n} from \"@material-ui/core\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    display: \"block\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    }\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    // backgroundColor: alpha(theme.palette.common.white, 0.15),\n    // \"&:hover\": {\n    //     backgroundColor: alpha(theme.palette.common.white, 0.25),\n    // },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\"\n    }\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\"\n    }\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\"\n    }\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  },\n  login: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  moreouter: {\n    display: \"flex\"\n  },\n  more: {\n    marginLeft: \"12px\",\n    paddingRight: \"12px\",\n    color: \"#fff\"\n  },\n  sublinks: {\n    textDecoration: \"none\",\n    color: \"inherit\"\n  },\n  sublinksProfile: {\n    textDecoration: \"none\",\n    color: \"inherit\",\n    display: \"flex\",\n    \"& svg\": {\n      marginRight: \"5px\"\n    }\n  },\n  headericons: {\n    width: \"63px\"\n  }\n}));\n\nexport default function Header() {\n  const classes = useStyles();\n  const userDetails = useSelector(selectUser);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n  const handlelogout = () => {\n    dispatch(logout());\n  };\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const navigateRequest = () => {\n    history.push(\"/Requests\");\n  };\n  const menuId = \"primary-search-account-menu\";\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Brightness4Icon />\n        </IconButton>\n      </MenuItem>\n    </Menu>\n  );\n  const [moreopen, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  function handleListKeyDown(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setOpen(false);\n    }\n  }\n\n  const [profileopen, setprofileopen] = React.useState(false);\n  const anchorRefProfile = React.useRef(null);\n\n  const handleToggleProfile = () => {\n    setprofileopen((prevOpen) => !prevOpen);\n  };\n\n  const handleCloseProfile = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setprofileopen(false);\n  };\n\n  function handleListKeyDownProfile(event) {\n    if (event.key === \"Tab\") {\n      event.preventDefault();\n      setprofileopen(false);\n    }\n  }\n\n  // return focus to the button when we transitioned from !moreopen -> moreopen\n  const prevOpen = React.useRef(moreopen);\n  React.useEffect(() => {\n    if (prevOpen.current === true && moreopen === false) {\n      anchorRef.current.focus();\n    }\n\n    prevOpen.current = moreopen;\n  }, [moreopen]);\n\n  const prevOpenprofile = React.useRef(profileopen);\n  React.useEffect(() => {\n    if (prevOpenprofile.current === true && profileopen === false) {\n      anchorRefProfile.current.focus();\n    }\n\n    prevOpenprofile.current = profileopen;\n  }, [profileopen]);\n\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <Typography className={classes.title} variant=\"h6\" noWrap>\n        Brahmana Vivaha\n      </Typography>\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Brahmana Vivaha\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {userDetails ? (\n              <>\n                <NavLink to=\"/Profiles\">Profiles</NavLink>\n                <NavLink to=\"/Updateprofile\">Updatteprofile</NavLink>\n\n                <div className={classes.moreouter}>\n                  <Button\n                    ref={anchorRef}\n                    aria-controls={moreopen ? \"menu-list-grow\" : undefined}\n                    aria-haspopup=\"true\"\n                    onClick={handleToggle}\n                    className={classes.more}\n                    size=\"medium\"\n                  >\n                    More\n                    <ExpandMoreIcon />\n                  </Button>\n                  <Popper\n                    open={moreopen}\n                    anchorEl={anchorRef.current}\n                    role={undefined}\n                    transition\n                    disablePortal\n                  >\n                    {({ TransitionProps, placement }) => (\n                      <Grow\n                        {...TransitionProps}\n                        style={{\n                          transformOrigin:\n                            placement === \"bottom\"\n                              ? \"center top\"\n                              : \"center bottom\"\n                        }}\n                      >\n                        <Paper>\n                          <ClickAwayListener onClickAway={handleClose}>\n                            <MenuList\n                              autoFocusItem={moreopen}\n                              id=\"menu-list-grow\"\n                              onKeyDown={handleListKeyDown}\n                            >\n                              <MenuItem onClick={handleClose}>\n                                <NavLink\n                                  to=\"/Shortlisted\"\n                                  color=\"inherit\"\n                                  underline=\"none\"\n                                  className={classes.sublinks}\n                                >\n                                  Shortlisted\n                                </NavLink>\n                              </MenuItem>\n                              <MenuItem onClick={handleClose}>\n                                <NavLink\n                                  to=\"/Recentlyviewed\"\n                                  color=\"inherit\"\n                                  underline=\"none\"\n                                  className={classes.sublinks}\n                                >\n                                  Recently Viewed Profiles\n                                </NavLink>\n                              </MenuItem>\n                              <MenuItem onClick={handleClose}>\n                                <NavLink\n                                  to=\"/Shortlistedme\"\n                                  color=\"inherit\"\n                                  underline=\"none\"\n                                  className={classes.sublinks}\n                                >\n                                  Who Shortlisted Me\n                                </NavLink>\n                              </MenuItem>\n\n                              <MenuItem onClick={handleClose}>\n                                <NavLink\n                                  to=\"/Updateprofile\"\n                                  color=\"inherit\"\n                                  underline=\"none\"\n                                  className={classes.sublinks}\n                                >\n                                  Who Viewed My Profile\n                                </NavLink>\n                              </MenuItem>\n\n                              {/* <MenuItem\n                                                                onClick={\n                                                                    handleClose\n                                                                }\n                                                            >\n                                                                My account\n                                                            </MenuItem>\n                                                            <MenuItem\n                                                                onClick={\n                                                                    handleClose\n                                                                }\n                                                            >\n                                                                Logout\n                                                            </MenuItem> */}\n                            </MenuList>\n                          </ClickAwayListener>\n                        </Paper>\n                      </Grow>\n                    )}\n                  </Popper>\n                </div>\n              </>\n            ) : (\n              <></>\n            )}\n\n            <IconButton\n              color=\"inherit\"\n              title=\"Toggle Light/Dark theme\"\n              className={classes.headericons}\n            >\n              <Brightness4Icon onClick={() => dispatch(handleDarkMode())} />\n            </IconButton>\n            {userDetails ? (\n              <>\n                <IconButton\n                  aria-label=\"show 4 new mails\"\n                  color=\"inherit\"\n                  className={classes.headericons}\n                >\n                  <Badge badgeContent={4} color=\"secondary\">\n                    {/* <a href=\"/requests\"> */}\n                    {/* <MailIcon onClick={navigateRequest} /> */}\n                    <GroupAddIcon onClick={navigateRequest} />\n                    {/* </a> */}\n                  </Badge>\n                </IconButton>\n                <IconButton\n                  aria-label=\"show 17 new notifications\"\n                  color=\"inherit\"\n                  className={classes.headericons}\n                >\n                  <Badge badgeContent={17} color=\"secondary\">\n                    <NotificationsIcon />\n                  </Badge>\n                </IconButton>\n                <div className={classes.moreouter12}>\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"account of current user\"\n                    // aria-haspopup=\"true\"\n                    // onClick={handlelogout}\n                    color=\"inherit\"\n                    className={classes.headericons}\n                    disableRipple\n                    disableFocusRipple\n                    style={{\n                      backgroundColor: \"transparent\"\n                    }}\n                    ref={anchorRefProfile}\n                    aria-controls={\n                      profileopen ? \"menu-list-grow-profile\" : undefined\n                    }\n                    aria-haspopup=\"true\"\n                    onClick={handleToggleProfile}\n                  >\n                    {/* <AccountCircle /> */}\n                    <Avatar\n                      // onClick={handlelogout}\n                      src={firebase.auth().currentUser.photoURL}\n                    />\n                    <ArrowDropDownIcon />\n                  </IconButton>\n\n                  <Popper\n                    open={profileopen}\n                    anchorEl={anchorRefProfile.current}\n                    role={undefined}\n                    transition\n                    disablePortal\n                    // anchorOrigin={{\n                    //     vertical: \"bottom\",\n                    //     horizontal: \"center\",\n                    // }}\n                    // transformOrigin={{\n                    //     vertical: \"top\",\n                    //     horizontal: \"right\",\n                    // }}\n                    placement=\"bottom-end\"\n                  >\n                    {({ TransitionProps, placement }) => (\n                      <Grow\n                        {...TransitionProps}\n                        style={{\n                          transformOrigin:\n                            placement === \"bottom\" ? \"right top\" : \"right top\"\n                        }}\n                      >\n                        <Paper>\n                          <ClickAwayListener onClickAway={handleCloseProfile}>\n                            <MenuList\n                              autoFocusItem={profileopen}\n                              id=\"menu-list-grow-profile\"\n                              onKeyDown={handleListKeyDownProfile}\n                            >\n                              <MenuItem onClick={handleCloseProfile}>\n                                <NavLink\n                                  to=\"/EditProfile\"\n                                  color=\"inherit\"\n                                  underline=\"none\"\n                                  className={classes.sublinksProfile}\n                                >\n                                  <EditIcon /> Edit Profile\n                                </NavLink>\n                              </MenuItem>\n                              <MenuItem onClick={handleClose}>\n                                <NavLink\n                                  to={{\n                                    pathname: \"/EditProfile\",\n                                    state: {\n                                      tabids: \"4\"\n                                    }\n                                  }}\n                                  color=\"inherit\"\n                                  underline=\"none\"\n                                  className={classes.sublinksProfile}\n                                >\n                                  <EditIcon /> Edit Patner Preferences\n                                </NavLink>\n                              </MenuItem>\n                              <MenuItem onClick={handleCloseProfile}>\n                                <NavLink\n                                  to=\"/Shortlistedme\"\n                                  color=\"inherit\"\n                                  underline=\"none\"\n                                  className={classes.sublinksProfile}\n                                >\n                                  <SettingsIcon />\n                                  Profile Settings\n                                </NavLink>\n                              </MenuItem>\n\n                              <MenuItem\n                                onClick={handlelogout}\n                                className={classes.sublinksProfile}\n                              >\n                                <ExitToAppIcon />\n                                Logout 1\n                              </MenuItem>\n\n                              {/* <MenuItem\n                                                                onClick={\n                                                                    handleClose\n                                                                }\n                                                            >\n                                                                My account\n                                                            </MenuItem>\n                                                            <MenuItem\n                                                                onClick={\n                                                                    handleClose\n                                                                }\n                                                            >\n                                                                Logout\n                                                            </MenuItem> */}\n                            </MenuList>\n                          </ClickAwayListener>\n                        </Paper>\n                      </Grow>\n                    )}\n                  </Popper>\n                </div>\n              </>\n            ) : (\n              <Link href=\"/login\" color=\"inherit\" className={classes.login}>\n                Login\n              </Link>\n            )}\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { db } from \"../app/firebase\";\n\nexport const fetchAsyncProfiles = createAsyncThunk(\n  \"profiles/fetchAsyncProfiles\",\n  async (genderSearch) => {\n    const promise = db\n      .collection(\"users\")\n      .where(\"gender\", \"==\", genderSearch)\n      .get()\n      .then((snapshot) => {\n        const data = [];\n        snapshot.forEach((doc) => {\n          data.push({\n            id: doc.id,\n            data: doc.data()\n          });\n\n          // assign data\n        });\n        console.log(data);\n        return data;\n      });\n    const data = await promise;\n    return data;\n  }\n);\nexport const fetchAsyncProfileDetail = createAsyncThunk(\n  \"profiles/fetchAsyncProfileDetail\",\n  async (id) => {\n    const promiseDetail = db\n      .collection(\"users\")\n      .doc(id)\n      .get()\n      .then((doc) => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(doc.id, \" => \", doc.data());\n        return doc.data();\n        // setprofilee(doc.data());\n        // setLoadingpartnerPref(false);\n        // console.log(profilee);\n        // if (profilee.length) setProfileeready(true);\n      })\n\n      .catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n    const detailData = await promiseDetail;\n    return detailData;\n  }\n);\nconst initialState = {\n  profiles: [],\n  selectProfile: {}\n};\nconst profilesSlice = createSlice({\n  name: \"profiles\",\n  initialState,\n  reducers: {\n    removeSelectedProfile: (state) => {\n      state.selectProfile = {};\n    }\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false\n    }),\n  extraReducers: {\n    [fetchAsyncProfiles.pending]: () => {\n      console.log(\"pending\");\n    },\n    [fetchAsyncProfiles.fulfilled]: (state, { payload }) => {\n      console.log(\"fetched succesfully\");\n      console.log(payload);\n      return { ...state, profiles: payload };\n    },\n    [fetchAsyncProfileDetail.fulfilled]: (state, { payload }) => {\n      console.log(\"Fetched Successfully detail!\");\n      console.log(payload);\n      return { ...state, selectProfile: payload };\n    }\n  }\n});\n\nexport const getAllProfiles = (state) => state.profiles.profiles;\nexport default profilesSlice.reducer;\nexport const getSelectedProfile = (state) => state.profiles.selectProfile;\nexport const { removeSelectedProfile } = profilesSlice.actions;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\n\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { NavLink } from \"react-router-dom\";\n\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { Button, Grid, Snackbar, SnackbarContent } from \"@material-ui/core\";\nimport { selectUser } from \"../features/userSlice\";\nimport { useSelector } from \"react-redux\";\nimport { db } from \"../app/firebase\";\nimport PermContactCalendarOutlinedIcon from \"@material-ui/icons/PermContactCalendarOutlined\";\nimport HeightOutlinedIcon from \"@material-ui/icons/HeightOutlined\";\nimport StarBorderTwoToneIcon from \"@material-ui/icons/StarBorderTwoTone\";\nimport CastForEducationTwoToneIcon from \"@material-ui/icons/CastForEducationTwoTone\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport \"./Profiles\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchAsyncProfiles } from \"../features/profilesSlice\";\nimport { getAllProfiles } from \"../features/profilesSlice.js\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport globalUseStyles from \"./globalstyles\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"100%\"\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  education: {\n    wordBreak: \"break-word\",\n    display: \"flex\"\n  },\n  infoiconedu: {\n    width: \"18px\",\n    height: \"18px\",\n    cursor: \"pointer\",\n    marginLeft: \"3px\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  viewButton: {\n    marginTop: \"15px\"\n  },\n  cardfooter: {\n    // justifyContent: \"center\",\n    marginTop: \"auto\",\n    paddingTop: \"0\",\n    padding: \"0 16px 8px\",\n    \"& button\": {\n      margin: \"0 5px\"\n    }\n  },\n  mat__dummyprofilepic: {\n    paddingBottom: \"56.2%\",\n    position: \"relative\"\n  },\n  mat__dummyprofilepicholder: {\n    position: \"absolute\",\n    width: \"100%\",\n    height: \"100%\"\n  },\n  mat__dummyprofileimg: {\n    width: \"100%\",\n    height: \"100%\",\n    opacity: \"0.3\"\n  },\n  mat__requestpic: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    fontSize: \"16px\",\n    cursor: \"pointer\",\n    fontWeight: \"bold\",\n    borderBottomWidth: \"2px\",\n    borderBottomStyle: \"solid\",\n    //  theme.palette.primary.main,\n    transform: \"translate(-50%,-50%)\"\n    // color: theme.palette.primary.main\n  }\n}));\n\nexport default function Profiles() {\n  const classes = useStyles();\n  const globalClasses = globalUseStyles();\n\n  const theme = useTheme();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const userDetails = useSelector(selectUser);\n\n  const [user, setUser] = useState(userDetails);\n  const [profiles, setProfiles] = useState([]);\n  useEffect(() => {\n    setUser(userDetails);\n    setloggedinprofile(userDetails);\n  }, [userDetails]);\n  // console.log(user);\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n  const getAge = (dateString) => {\n    // getAge(dateString) {\n    // console.log(dateString + \"datestring\");\n    var today = new Date();\n    // var birthDate = new Date(dateString);\n    var birthDate;\n    dateString.seconds\n      ? (birthDate = new Date(\n          dateString.seconds * 1000 + dateString.nanoseconds / 1000000\n        ))\n      : (birthDate = new Date(dateString));\n    birthDate = new Date(\n      dateString.seconds * 1000 + dateString.nanoseconds / 1000000\n    );\n    // console.log(birthDate.getFullYear() + \"year\");\n    // birthDate = birthDate.toDate();\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  };\n  const genderSearch = user?.userData?.gender === \"male\" ? \"female\" : \"male\";\n  // console.log(genderSearch);\n\n  // const getProfiles = db\n  //   .collection(\"users\")\n  //   .where(\"gender\", \"==\", genderSearch)\n  //   .get();\n  // useEffect(() => {\n  //     getProfiles\n  //         .then((querySnapshot) => {\n  //             querySnapshot.forEach((doc) => {\n  //                 // doc.data() is never undefined for query doc snapshots\n  //                 console.log(doc.id, \" => \", doc.data());\n  //                 setProfiles(doc.data());\n  //             });\n  //         })\n  //         .catch((error) => {\n  //             console.log(\"Error getting documents: \", error);\n  //         });\n  // }, []);\n\n  //new way asyncthunk start\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchAsyncProfiles(genderSearch));\n  }, [dispatch, genderSearch]);\n  //new way asyncthunk end\n  // useEffect(() => {\n  //   db.collection(\"users\")\n  //     .where(\"gender\", \"==\", genderSearch)\n  //     .onSnapshot((snapshot) =>\n  //       setProfiles(\n  //         snapshot.docs.map((doc) => ({\n  //           id: doc.id,\n  //           data: doc.data()\n  //         }))\n  //       )\n  //     );\n  // }, [genderSearch]);\n  // var profilesRef = db.collection(\"users\");\n  // var profiles = profilesRef.where(\"gender\", \"==\", genderSearch);\n  const history = useHistory();\n  const gotoProfile = (uid) => {\n    // console.log(uid);\n    // history.push(\"/Profile\", { params: { uid } });\n    history.push(\"/ProfileN\", { params: { uid } });\n    // history.push(\"./Profile/:uid\");\n  };\n\n  //   console.log(profiles);\n  const userlogged = firebase.auth().currentUser;\n  const loggedinuserEmail = userlogged?.email;\n  //userlogged?.email.charAt(0).toUpperCase() + userlogged?.email.slice(1);\n  //   console.log(loggedinuserEmail);\n  var userRef = db.collection(\"users\").doc(loggedinuserEmail);\n  const [openSnackbar, setopenSnackbar] = useState(false);\n  const [snackbarmsg, setsnackbarmsg] = useState();\n  const [snackbartype, setsnackbartype] = useState();\n  const removeshortlist = (removershortlistmail) => {\n    userRef.set(\n      {\n        shortlisted: firebase.firestore.FieldValue.arrayRemove(\n          removershortlistmail\n        )\n      },\n      { merge: true }\n    );\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"shortlisted\")\n      .doc(removershortlistmail)\n      .delete()\n      .then(() => {\n        // console.log(\"Document successfully deleted!\");\n        setsnackbarmsg(\" Removed from shortlist\");\n        setsnackbartype(\"error\");\n        setopenSnackbar(true);\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n\n    //removing a array in viewingprofile\n    db.collection(\"users\")\n      .doc(removershortlistmail)\n      .set(\n        {\n          shortlistedme: firebase.firestore.FieldValue.arrayRemove(\n            loggedinuserEmail\n          )\n        },\n        { merge: true }\n      );\n    // removing the logged in  user snippet in viewingprofile\n    db.collection(\"users\")\n      .doc(removershortlistmail)\n      .collection(\"shortlistedme\")\n      .doc(loggedinuserEmail)\n      .delete()\n      .then(() => {\n        console.log(\"Document successfully deleted!\");\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setopenSnackbar(false);\n  };\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n  //  const userDetails = useSelector(selectUser);\n  //  const [user, setUser] = useState(userDetails);\n  useEffect(() => {\n    setUser(userDetails);\n  }, [userDetails]);\n\n  useEffect(() => {\n    const usersRef = db\n      .collection(\"users\")\n      .doc(loggedinuserEmail.toLowerCase());\n    usersRef.get().then((docSnapshot) => {\n      if (docSnapshot.exists) {\n        usersRef.onSnapshot((doc) => {\n          //   console.log(\"Current user data:\", doc.data() + loggedinuserEmail);\n          setloggedinprofile(doc.data());\n        });\n      } else {\n        console.log(\"not there\");\n        //   usersRef.set({...}) // create the document\n      }\n    });\n  }, [loggedinuserEmail]);\n\n  const [loggedinprofile, setloggedinprofile] = useState([]);\n  //   console.log(loggedinprofile);\n  //   console.log(loggedinuserEmail);\n\n  // useEffect(() => {\n  //   console.log(performance.now());\n\n  //   db.collection(\"users\")\n  //     .doc(loggedinuserEmail)\n  //     .onSnapshot((doc) => {\n  //       // console.log(\"Current user data:\", doc.data() + loggedinuserEmail);\n  //       setloggedinprofile(doc.data());\n  //     });\n  //   console.log(performance.now());\n  // }, [loggedinuserEmail]);\n\n  const sendInterest = (intersetedProfile) => {\n    console.log(\"interesstttttttt strttttt\");\n    console.log(intersetedProfile);\n    console.log(\"interesstttttttt enddddddd\");\n    //adding a array of in logged in user\n    userRef.set(\n      {\n        interestssent: firebase.firestore.FieldValue.arrayUnion(\n          intersetedProfile.data.email\n        )\n      },\n      { merge: true }\n    );\n\n    // adding the interested user snippet in logged in user(myintersets(loggedin user) snippet)\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"interestssent\")\n      .doc(intersetedProfile?.data.email)\n      .set({\n        email: intersetedProfile?.data?.email,\n        name: intersetedProfile?.data?.name,\n        education: intersetedProfile?.data?.education,\n        star: intersetedProfile?.data?.birthstar,\n        raashi: intersetedProfile?.data?.raashi,\n        gothra: intersetedProfile?.data?.gothra,\n        dob: intersetedProfile?.data?.birthdate,\n        dp: intersetedProfile?.data?.profilepic,\n        accepted: false,\n        read: false\n      });\n\n    //adding a array in viewingprofile (shortlisted me array)\n    db.collection(\"users\")\n      .doc(intersetedProfile?.data?.email)\n      .set(\n        {\n          interestsreceived: firebase.firestore.FieldValue.arrayUnion(\n            loggedinuserEmail\n          )\n        },\n        { merge: true }\n      );\n\n    // adding the logged in  user snippet in viewingprofile(shortlisted me snippet)\n    db.collection(\"users\")\n      .doc(intersetedProfile?.data?.email)\n      .collection(\"interestsreceived\")\n      .doc(loggedinuserEmail)\n      .set({\n        email: loggedinprofile.email,\n        name: loggedinprofile.name,\n        education: loggedinprofile.education,\n        star: loggedinprofile.birthstar,\n        raashi: loggedinprofile.raashi,\n        gothra: loggedinprofile.gothra,\n        dob: loggedinprofile.birthdate,\n        dp: loggedinprofile.profilepic,\n        accepted: false,\n        read: false\n      })\n      .then(() => {\n        // console.log(\"Document successfully deleted!\");\n        setsnackbarmsg(\n          `Successfully sent interest to ${intersetedProfile?.data?.name}`\n        );\n        setsnackbartype(\"success\");\n        setopenSnackbar(true);\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  const [interestSent, setinterestSent] = useState();\n  const [interestReceived, setinterestReceived] = useState();\n\n  // useEffect(() => {\n  //     db.collection(\"users\")\n  //         .doc(loggedinuserEmail)\n  //         .collection(\"interestssent\")\n  //         .doc(userid)\n  //         .onSnapshot((doc) => {\n  //             setinterestSent(doc.data());\n  //         });\n\n  //     // }\n  // }, []);\n\n  // useEffect(() => {\n  //     // });\n  //     db.collection(\"users\")\n  //         .doc(email)\n  //         .collection(\"interestsreceived\")\n  //         .doc(userid)\n  //         .onSnapshot(\n  //             (doc) => {\n  //                 console.log(doc.data());\n  //                 setinterestReceived(doc.data());\n  //             },\n  //             (error) => {\n  //                 console.log(error);\n  //             }\n  //         );\n\n  //     // }\n  //     console.log(email);\n  // }, []);\n  const shortlistrr = ([shortlist], e) => {\n    console.log(shortlist);\n    console.log(loggedinprofile);\n    console.log(\"shortlistttttt\");\n    console.log(\n      user?.userData?.name,\n      user?.userData?.education,\n      user?.userData?.email,\n      user?.userData?.birthstar,\n      user?.userData?.raashi,\n      user?.userData?.gothra,\n      user?.userData?.birthdate,\n      user?.userData?.profilepic\n    );\n    //adding a array in logged in user(myshortlist(loggedin user) array)\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .set(\n        {\n          shortlisted: firebase.firestore.FieldValue.arrayUnion(\n            shortlist.data.email\n          )\n        },\n        { merge: true }\n      )\n      .catch((err) => {\n        console.log(\"eroor is \" + err);\n      });\n\n    // adding the shortlisted user snippet in logged in user(myshortlist(loggedin user) snippet)\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"shortlisted\")\n      .doc(shortlist.data.email)\n      .set({\n        email: shortlist?.data?.email,\n        name: shortlist?.data?.name,\n        education: shortlist?.data?.education,\n        star: shortlist?.data?.birthstar,\n        raashi: shortlist?.data?.raashi,\n        gothra: shortlist?.data?.gothra,\n        dob: shortlist?.data?.birthdate,\n        dp: shortlist?.data?.profilepic\n      })\n      .then(console.log(\"errorrrrrrr\"));\n\n    //adding a array in viewingprofile (shortlisted me array)\n    db.collection(\"users\")\n      .doc(shortlist.data.email)\n      .set(\n        {\n          shortlistedme: firebase.firestore.FieldValue.arrayUnion(\n            loggedinuserEmail\n          )\n        },\n        { merge: true }\n      );\n\n    // adding the logged in  user snippet in viewingprofile(shortlisted me snippet)\n\n    db.collection(\"users\")\n      .doc(shortlist.data.email)\n      .collection(\"shortlistedme\")\n      .doc(loggedinuserEmail)\n      .set({\n        email: loggedinprofile.email,\n        name: loggedinprofile.name,\n        education: loggedinprofile.education,\n        star: loggedinprofile.birthstar,\n        raashi: loggedinprofile.raashi,\n        gothra: loggedinprofile.gothra,\n        dob: loggedinprofile.birthdate,\n        dp: loggedinprofile.profilepic\n      })\n      .then(() => {\n        console.log(\"Document successfully shortlisted!\");\n        setsnackbarmsg(\"Successfully shortlisted\");\n        setsnackbartype(\"success\");\n        setopenSnackbar(true);\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n  const profilesThunk = useSelector(getAllProfiles);\n  console.log(\"start\");\n  console.log(profilesThunk);\n  console.log(\"end\");\n  // console.log(\"kkk\");\n  // console.log(profiles);\n  // console.log(\"kkkk\");\n  const n = 8; // Or something else\n\n  return (\n    <Grid container spacing={3}>\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity={snackbartype}>\n          {snackbarmsg}\n        </Alert>\n      </Snackbar>\n      {profilesThunk.length === 0 ? (\n        [...Array(n)].map((e, i) => (\n          <Grid item xs={12} sm={4} lg={3}>\n            <Card className={classes.card}>\n              <CardHeader\n                avatar={\n                  <Skeleton\n                    animation=\"wave\"\n                    variant=\"circle\"\n                    width={40}\n                    height={40}\n                  />\n                }\n                title={\n                  <Skeleton\n                    animation=\"wave\"\n                    height={10}\n                    width=\"80%\"\n                    style={{ marginBottom: 6 }}\n                  />\n                }\n                subheader={\n                  <Skeleton animation=\"wave\" height={10} width=\"40%\" />\n                }\n              />\n\n              <Skeleton\n                animation=\"wave\"\n                variant=\"rect\"\n                className={classes.media}\n              />\n\n              <CardContent>\n                <React.Fragment>\n                  <Skeleton\n                    animation=\"wave\"\n                    height={10}\n                    style={{ marginBottom: 6 }}\n                  />\n                  <Skeleton animation=\"wave\" height={10} width=\"80%\" />\n                </React.Fragment>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))\n      ) : (\n        <></>\n      )}\n      {profilesThunk?.map(\n        (profile, index) => (\n          console\n            .log\n            // getAge(\n            //     new Intl.DateTimeFormat(\"en-US\", {\n            //         year: \"numeric\",\n            //         month: \"2-digit\",\n            //         day: \"2-digit\",\n            //     }).format(profile.data.birthdate)\n            // )\n            // new Date(\n            //     profile.data.birthdate._seconds * 1000\n            // ).toLocaleDateString(\"en-US\")\n            (),\n          (\n            <Grid item xs={12} sm={4} lg={3}>\n              {/* {console.log(profile.data.birthdate)} */}\n              <Card className={classes.root}>\n                <CardHeader\n                  avatar={\n                    profilesThunk.length === 0 ? (\n                      <Skeleton\n                        animation=\"wave\"\n                        variant=\"circle\"\n                        width={40}\n                        height={40}\n                      />\n                    ) : (\n                      <Avatar\n                        aria-label={profile.data.name}\n                        className={classes.avatar}\n                      >\n                        {profile.data.name.charAt(0)}\n                      </Avatar>\n                    )\n                  }\n                  action={\n                    <IconButton aria-label=\"settings\">\n                      <MoreVertIcon />\n                    </IconButton>\n                  }\n                  title={profile.data.name}\n                  subheader={profile.data.residingcity}\n                />{\" \"}\n                <div>\n                  {loggedinprofile?.userData?.privacy.photos === \"Everyone\" ? (\n                    <CardMedia\n                      className={classes.media}\n                      image={profile.data.profilepic}\n                      title={profile.data.name}\n                    />\n                  ) : (\n                    <div className={classes.mat__dummyprofilepic}>\n                      <div className={classes.mat__dummyprofilepicholder}>\n                        <AccountCircleIcon\n                          className={classes.mat__dummyprofileimg}\n                        />\n                        <div className={classes.mat__requestpic}>\n                          Request Photo\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <CardContent>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <div className=\"mat__profiles-ageheight\">\n                      <div className=\"mat__profiles-age\">\n                        <span> Age:</span>\n\n                        <span>\n                          {getAge(profile.data?.birthdate)}\n                          Years\n                        </span>\n                      </div>\n                      <div className=\"mat__profiles-height\">\n                        <span>Height:</span> <span>{profile.data.height}</span>\n                      </div>\n                    </div>\n                    <div className=\"mat__profiles-nakshatra\">\n                      <span>Nakshatra:</span>\n                      <span>\n                        {profile.data.birthstar} {profile.data.birthstar}\n                      </span>\n                    </div>\n                    <div className=\"mat__profiles-nakshatra\">\n                      <span>Raashi:</span>\n                      <span>{profile.data.raashi}</span>\n                    </div>\n                    <div className={classes.education}>\n                      <span>Education:</span>\n                      <span>\n                        {/\\(([^)]+)\\)/.exec(profile.data.education)[1]}\n                      </span>\n                      <Tooltip\n                        title={profile.data.education.replace(\n                          / *\\([^)]*\\) */g,\n                          \"\"\n                        )}\n                      >\n                        <InfoIcon className={classes.infoiconedu} />\n                      </Tooltip>\n                    </div>\n\n                    {/* {new Date(\n                                    profile.data.birthdate._seconds * 1000\n                                ).toLocaleDateString(\"en-US\")} */}\n                  </Typography>\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    className={classes.viewButton}\n                    // onClick={() => gotoProfile(profile.data.email)}\n                  >\n                    <NavLink\n                      className={globalClasses.viewLink}\n                      to={`/ProfileN/${btoa(profile.data.email)}`}\n                    >\n                      View Profile\n                    </NavLink>\n                    {/* View Profile */}\n                  </Button>\n                </CardContent>\n                {/* <CardActions disableSpacing>\n                                    {user.userData?.favorites?.indexOf(\n                                        profile.data.email\n                                    ) > -1 ? (\n                                        <Tooltip title=\"Shortlisted\">\n                                            <IconButton title=\"Shortlisted\">\n                                                <BookmarkIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    ) : (\n                                        <Tooltip title=\"Shortlist\">\n                                            <IconButton title=\"Shortlist\">\n                                                <BookmarkBorderIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n\n                                    <IconButton aria-label=\"share\">\n                                        <ShareIcon />\n                                    </IconButton>\n                                    <IconButton\n                                        className={clsx(classes.expand, {\n                                            [classes.expandOpen]: expanded,\n                                        })}\n                                        onClick={handleExpandClick}\n                                        aria-expanded={expanded}\n                                        aria-label=\"show more\"\n                                    >\n                                        <ExpandMoreIcon />\n                                    </IconButton>\n                                </CardActions> */}\n                <CardActions disableSpacing className={classes.cardfooter}>\n                  {console.log(loggedinprofile)}\n                  {loggedinprofile?.shortlisted?.indexOf(profile.data.email) >\n                  -1 ? (\n                    <Button\n                      title=\"Shortlisted\"\n                      startIcon={<BookmarkIcon />}\n                      size=\"small\"\n                      className={classes.sendshortbuttons}\n                      variant=\"outlined\"\n                      onClick={(e) => removeshortlist(profile.data.email)}\n                      color=\"primary\"\n                    >\n                      Shortlisted\n                    </Button>\n                  ) : (\n                    <Button\n                      title=\"Shortlisted\"\n                      startIcon={<BookmarkBorderIcon />}\n                      size=\"small\"\n                      className={classes.sendshortbuttons}\n                      variant=\"outlined\"\n                      onClick={(e) => shortlistrr([profile], e)}\n                      color=\"primary\"\n                    >\n                      Shortlist\n                    </Button>\n                  )}\n                  {loggedinprofile?.interestssent?.indexOf(profile.data.email) >\n                  -1 ? (\n                    <Button\n                      title=\"Shortlisted\"\n                      startIcon={<BookmarkIcon />}\n                      size=\"small\"\n                      className={classes.sendshortbuttons}\n                      variant=\"outlined\"\n                    >\n                      INTEREST SENT\n                    </Button>\n                  ) : (\n                    <Button\n                      title=\"Shortlisted\"\n                      startIcon={<BookmarkBorderIcon />}\n                      size=\"small\"\n                      className={classes.sendshortbuttons}\n                      variant=\"outlined\"\n                      onClick={() => sendInterest(profile)}\n                    >\n                      SEND INTEREST\n                    </Button>\n                  )}\n                </CardActions>\n              </Card>\n            </Grid>\n          )\n        )\n      )}\n    </Grid>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport ImageGallery from \"react-image-gallery\";\nimport \"react-image-gallery/styles/scss/image-gallery.scss\";\nimport _ from \"underscore\";\nimport \"photoswipe/dist/photoswipe.css\";\nimport \"photoswipe/dist/default-skin/default-skin.css\";\n\nimport { Gallery, Item } from \"react-photoswipe-gallery\";\nconst images = [\n  {\n    original: \"https://picsum.photos/id/1018/1000/600/\",\n    thumbnail: \"https://picsum.photos/id/1018/250/150/\"\n  },\n  {\n    original: \"https://picsum.photos/id/1015/1000/600/\",\n    thumbnail: \"https://picsum.photos/id/1015/250/150/\"\n  },\n  {\n    original: \"https://picsum.photos/id/1019/1000/600/\",\n    thumbnail: \"https://picsum.photos/id/1019/250/150/\"\n  }\n];\nfunction Profileimagegallery(params) {\n  console.log(\"image galleryyyyyyyyyyyyyyyyyyyyyyyyyyy\");\n  //console.log(params.user);\n  const profileImages = params.images;\n\n  const set = new Set([profileImages]);\n  Array.from(set);\n  //console.log(profileImages);\n  var result = _.filter(\n    _.uniq(params.images, function (item, key, a) {\n      return item.original;\n    }),\n    function (element) {\n      return element.original && element.thumbnail;\n    }\n  );\n  //   console.log(result.length);\n  // const [thumbnail, setthumbnail] = useState(false);\n  // result.length > 1 ? setthumbnail(true) : setthumbnail(false);\n  // const [imagesstate, setimagesstate] = useState();\n  // let images = [\n  // setimagesstate(\n  //     set?.map((image) => ({\n  //         original: image,\n  //         thumbnail: image,\n  //     }))\n  // );\n  // ];\n  // useEffect(() => {\n  // let profileimages = [];\n  // profileimages = [...profileimages, profileimage];\n  // profileimages = [...profileimages, pic1];\n  // profileimages = [...profileimages, pic2];\n  // setprofileimages(\"\");\n  // setprofileimages((state) => [...state, profileimage]);\n  // setprofileimages((state) => [...state, pic1]);\n  // setprofileimages((state) => [...state, pic2]);\n  // setprofileimages([...profileimages, profileimage]);\n  // setprofileimages([...profileimages, pic1]);\n  // setprofileimages([...profileimages, pic2]);\n  //}, []);\n  return (\n    <div>\n      <ImageGallery\n        items={result ? result : \"\"}\n        showNav={false}\n        showPlayButton={false}\n        showThumbnails={result.length > 1}\n        showBullets={result.length > 1}\n        className=\"mat__profileimagegallery\"\n      />\n      {/* {result.map((image, index) => image.original)} */}\n      {/* <Gallery>\n                {result.map((image, index) => {\n                    <Item\n                        original={`${image.original}?image=${index}`}\n                        thumbnail={`${image.original}?image=${index}`}\n                        width=\"1024\"\n                        height=\"768\"\n                    >\n                        {({ ref, open }) => (\n                            <img\n                                ref={ref}\n                                onClick={open}\n                                src={`${image.original}?image=1`}\n                                alt=\"\"\n                            />\n                        )}\n                    </Item>;\n                })}\n            </Gallery> */}\n      {/* <Gallery>\n                <div\n                    style={{\n                        display: \"grid\",\n                        gridTemplateColumns: \"240px 171px 171px\",\n                        gridTemplateRows: \"114px 114px\",\n                        gridGap: 12,\n                    }}\n                >\n                    <Item\n                        original=\"https://placekitten.com/1024/768?image=1\"\n                        thumbnail=\"https://placekitten.com/80/60?image=1\"\n                        width=\"1024\"\n                        height=\"768\"\n                    >\n                        {({ ref, open }) => (\n                            <img\n                                ref={ref}\n                                onClick={open}\n                                src=\"https://placekitten.com/80/60?image=1\"\n                                alt=\"\"\n                            />\n                        )}\n                    </Item>\n                    <Item\n                        original=\"https://placekitten.com/1024/768?image=2\"\n                        thumbnail=\"https://placekitten.com/80/60?image=2\"\n                        width=\"1024\"\n                        height=\"768\"\n                    >\n                        {({ ref, open }) => (\n                            <img\n                                ref={ref}\n                                onClick={open}\n                                src=\"https://placekitten.com/80/60?image=2\"\n                                alt=\"\"\n                            />\n                        )}\n                    </Item>\n                </div>\n            </Gallery> */}\n      {/* <Item\n                    original=\"https://placekitten.com/1024/768?image=2\"\n                    thumbnail=\"https://placekitten.com/80/60?image=2\"\n                    width=\"1024\"\n                    height=\"768\"\n                >\n                    {({ ref, open }) => (\n                        <img\n                            ref={ref}\n                            onClick={open}\n                            src=\"https://placekitten.com/80/60?image=2\"\n                            alt=\"\"\n                        />\n                    )}\n                </Item> */}\n    </div>\n  );\n}\n\nexport default Profileimagegallery;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport {\n  Box,\n  CircularProgress,\n  Divider,\n  Grid,\n  makeStyles,\n  Typography\n} from \"@material-ui/core\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport moment from \"moment\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { FlashOff } from \"@material-ui/icons\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"100%\"\n  },\n  profile__picholder: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  profile__pic: {\n    width: \"100px\",\n    height: \"100px\",\n    borderRadius: \"50%\",\n    objectFit: \"cover\"\n  },\n  profile__percentage: {\n    display: \"flex\",\n    alignItems: \"center\",\n    flexDirection: \"column\"\n  },\n  profile__preferencesul: {\n    paddingLeft: 0\n  },\n  profile__preferencesli: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"10px 5px\",\n    fontSize: \"16px\",\n    alignItems: \"center\"\n    // borderBottomColor: theme.palette.primary.main,\n    // borderBottomWidth: \"1px\",\n    // borderBottomStyle: \"solid\",\n  },\n  profile__preference: {\n    display: \"flex\",\n    width: \"43%\",\n    wordBreak: \"break-word\",\n    flexDirection: \"column\"\n  },\n  profile__choice: {\n    display: \"flex\",\n    width: \"43%\",\n    wordBreak: \"break-word\",\n    flexDirection: \"column\",\n    alignItems: \"flex-end\"\n  },\n  profile__match: {\n    display: \"flex\",\n    alignItems: \"center\",\n    color: theme.palette.text.secondary,\n    fontWeight: \"500\"\n  },\n  profile__matchnomatch: {\n    width: \"6%\"\n  },\n  partnerprefLink: {\n    display: \"flex\"\n  },\n  sublinksProfile: {\n    color: theme.palette.primary.main\n  }\n}));\nfunction Profilepartnerpreference(props) {\n  console.log(\n    \"hererererererereererererererererereerererererererererererereererer\"\n  );\n  const [matchCount, setmatchCount] = useState(0);\n  let count;\n  const classes = useStyles();\n  const getAge = (dateString) => {\n    // getAge(dateString) {\n    var today = new Date();\n    var birthDate = new Date(dateString);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  };\n  const match = useCallback((match) => {\n    if (match) {\n      count = parseInt(count + 1);\n      return (\n        <CheckCircleIcon\n          className={classes.profile__matchnomatch}\n          color=\"primary\"\n        />\n      );\n    } else {\n      return (\n        <CancelIcon\n          className={classes.profile__matchnomatch}\n          color=\"disabled\"\n        />\n      );\n    }\n  });\n\n  const trimHeight = (height) => {\n    if (height) return height.slice(height.indexOf(\"/\") + 1).replace(\"cm\", \"\");\n  };\n  // if (!props && props.profilee.length) {\n  //   // console.log(props);\n  //   return <div>Loading</div>;\n  // }\n  useEffect(() => {\n    if (!props && props.profilee.length) {\n      return <div>Loading</div>;\n    }\n  });\n  const [logggeduserSal, setlogggeduserSal] = useState();\n  const [profileeSal, setprofileeSal] = useState();\n  const [profilematchcount, setprofilematchcount] = useState(0);\n  const testfunc = (bool, detail) => {\n    if (bool) {\n      console.log(\"if \" + detail);\n      setprofilematchcount(\n        (prevProfilematchcount) => prevProfilematchcount + 1\n      );\n    } else {\n      console.log(\"else \" + detail);\n    }\n  };\n\n  //  console.log(props?.loggedUsersData?.partnerpreferences);\n  useEffect(() => {\n    if (props?.loggedUsersData?.partnerpreferencesflag === true) {\n      let loggedsal = (props?.loggedUsersData?.partnerpreferences?.annualincome)\n        .replace(\"Lakh & Above\", \"\")\n        .replace(\"₹\", \"\")\n        .trim();\n      loggedsal = parseInt(loggedsal);\n      let profilsal = props?.profilee?.income?.replace(\"Lakhs\", \"\").trim();\n\n      setlogggeduserSal(loggedsal);\n      setprofileeSal(profilsal);\n      // console.log(loggedsal + \":\" + profilsal);\n    }\n  }, [props]);\n\n  useEffect(() => {\n    if (props.loggedUsersData?.partnerpreferencesflag === true) {\n      //AGE\n      props.loggedUsersData?.partnerpreferences?.age.from !== \"Not Specified\"\n        ? moment(props.profilee.birthdate?.toDate(), \"YYYYMMDD\")\n            .fromNow()\n            .replace(\"Years ago\", \"\") >=\n            props.loggedUsersData?.partnerpreferences?.age.from &&\n          moment(props.profilee.birthdate?.toDate(), \"YYYYMMDD\")\n            .fromNow()\n            .replace(\"ago\", \"\") <=\n            props.loggedUsersData?.partnerpreferences?.age.to\n          ? testfunc(true, \"age\")\n          : // setmatchCount((prevState) => prevState++)\n            testfunc(false, \"age\")\n        : testfunc(true, \"age\");\n\n      //HEIGHT\n      props.loggedUsersData?.partnerpreferences?.height.from !==\n        \"Not Specified\" &&\n      props.loggedUsersData?.partnerpreferences?.height.to !== \"Not Specified\"\n        ? trimHeight(props.profilee.height) >=\n            trimHeight(\n              props.loggedUsersData?.partnerpreferences?.height.from\n            ) &&\n          trimHeight(props.profilee.height) <=\n            trimHeight(props.loggedUsersData?.partnerpreferences?.height.to)\n          ? testfunc(true, \"height\")\n          : //setmatchCount((prevState) => prevState++)\n            testfunc(false, \"height\")\n        : testfunc(true, \"height\");\n\n      //MARITAL STATUS\n      props.loggedUsersData?.partnerpreferences?.maritalstatus !==\n      \"Not Specified\"\n        ? props.loggedUsersData?.partnerpreferences?.maritalstatus ===\n          props.profilee.maritalstatus\n          ? testfunc(true, \"marital\")\n          : testfunc(false, \"marital\")\n        : testfunc(true, \"marital\");\n\n      //MOTHERTONGUE\n      String(props?.loggedUsersData?.partnerpreferences?.mothertongue) !==\n        \"Not Specified\" &&\n      String(props?.loggedUsersData?.partnerpreferences?.mothertongue) !== \"Any\"\n        ? (\n            props?.loggedUsersData?.partnerpreferences?.mothertongue !==\n            undefined\n              ? (props?.loggedUsersData?.partnerpreferences?.mothertongue).includes(\n                  props?.profilee?.mothertongue\n                )\n              : \"\"\n          )\n          ? testfunc(true, \"mothertonge\")\n          : testfunc(false, \"mothertongue\")\n        : testfunc(true, \"mothertonge\");\n\n      //CASTE\n\n      String(props.loggedUsersData?.partnerpreferences?.caste) !==\n        \"Not Specified\" &&\n      String(props.loggedUsersData?.partnerpreferences?.caste) !== \"Any\"\n        ? (\n            props?.loggedUsersData?.partnerpreferences?.caste !== undefined\n              ? (props?.loggedUsersData?.partnerpreferences?.caste).includes(\n                  props?.profilee?.caste\n                )\n              : \"\"\n          )\n          ? testfunc(true, \"caste\")\n          : testfunc(false, \"caste\")\n        : testfunc(true, \"caste\");\n\n      // String(props.loggedUsersData?.partnerpreferences?.caste) !==\n      //     \"Not Specified\" &&\n      // String(props.loggedUsersData?.partnerpreferences?.caste) !== \"Any\"\n      //     ? props?.loggedUsersData?.partnerpreferences?.caste !== undefined\n      //         ? (props?.loggedUsersData?.partnerpreferences?.caste).includes(\n      //               props?.profilee?.caste\n      //           )\n      //         : \"\"\n      //         ? testfunc(true, \"caste\")\n      //         : testfunc(false, \"caste\")\n      //     : testfunc(true, \"caste\");\n\n      //SUBCASTE\n      String(props.loggedUsersData?.partnerpreferences?.subcaste) !==\n        \"Not Specified\" &&\n      String(props.loggedUsersData?.partnerpreferences?.subcaste) !== \"Any\"\n        ? props?.loggedUsersData?.partnerpreferences?.subcaste !== undefined\n          ? (props?.loggedUsersData?.partnerpreferences?.subcaste).includes(\n              props?.profilee?.subcaste\n            )\n          : \"\"\n          ? testfunc(true, \"subcaste\")\n          : testfunc(false, \"subcaste\")\n        : testfunc(true, \"subcaste\");\n\n      //STAR\n      String(props.loggedUsersData?.partnerpreferences?.star) !==\n        \"Not Specified\" &&\n      String(props.loggedUsersData?.partnerpreferences?.star) !== \"Any\"\n        ? props?.loggedUsersData?.partnerpreferences?.star !== undefined\n          ? (props?.loggedUsersData?.partnerpreferences?.subcaste).includes(\n              props?.profilee?.star\n            )\n          : \"\"\n          ? testfunc(true, \"star\")\n          : testfunc(false, \"star\")\n        : testfunc(true, \"star\");\n\n      //EDUCATION\n      props.loggedUsersData?.partnerpreferences?.education\n        ? String(props.loggedUsersData?.partnerpreferences?.education) !==\n            \"Not Specified\" &&\n          String(props.loggedUsersData?.partnerpreferences?.education) !== \"Any\"\n          ? (props?.loggedUsersData?.partnerpreferences?.education).includes(\n              props?.profilee?.education\n            )\n            ? testfunc(true, \"education\")\n            : testfunc(false, \"education\")\n          : testfunc(true, \"education\")\n        : testfunc(true, \"education\");\n\n      //EMPLOYMENT\n      props.loggedUsersData?.partnerpreferences?.employedin\n        ? String(props.loggedUsersData?.partnerpreferences?.employedin) !==\n            \"Not Specified\" &&\n          String(props.loggedUsersData?.partnerpreferences?.employedin) !==\n            \"Any\"\n          ? (props?.loggedUsersData?.partnerpreferences?.employedin).includes(\n              props?.profilee?.employment\n            )\n            ? testfunc(true, \"employment\")\n            : testfunc(false, \"employment\")\n          : testfunc(true, \"employment\")\n        : testfunc(true, \"employment\");\n\n      //INCOME\n      props.loggedUsersData?.partnerpreferences?.annualincome !==\n      \"Not Specified\"\n        ? logggeduserSal < profileeSal\n          ? testfunc(true, \"income\")\n          : testfunc(false, \"income\")\n        : testfunc(true, \"income\");\n\n      props.loggedUsersData?.partnerpreferences?.annualincome !==\n      \"Not Specified\"\n        ? logggeduserSal < profileeSal\n          ? match(true)\n          : match(false)\n        : match(true);\n      //COUNTRY LIVING\n      props.loggedUsersData?.partnerpreferences?.countryliving\n        ? String(props.loggedUsersData?.partnerpreferences?.countryliving) !==\n            \"Not Specified\" &&\n          String(props.loggedUsersData?.partnerpreferences?.countryliving) !==\n            \"Any\"\n          ? (props?.loggedUsersData?.partnerpreferences?.countryliving).includes(\n              props?.profilee?.residingcountry\n            )\n            ? testfunc(true, \"country\")\n            : testfunc(false, \"country\")\n          : testfunc(true, \"country\")\n        : testfunc(true, \"country\");\n\n      //SMOKINGHABITS\n      props.loggedUsersData?.partnerpreferences?.smokinghabits\n        ? props.loggedUsersData?.partnerpreferences?.smokinghabits !==\n          \"Not Specified\"\n          ? (props?.loggedUsersData?.partnerpreferences?.smokinghabits).includes(\n              props?.profilee?.lifestyle?.smokinghabits\n            )\n            ? testfunc(true, \"smoking\")\n            : testfunc(false, \"smoking\")\n          : testfunc(true, \"smoking\")\n        : testfunc(true, \"smoking\");\n\n      //FOODHABITS\n      props.loggedUsersData?.partnerpreferences?.foodhabits\n        ? props.loggedUsersData?.partnerpreferences?.foodhabits !==\n          \"Not Specified\"\n          ? (props?.loggedUsersData?.partnerpreferences?.foodhabits).includes(\n              props?.profilee?.lifestyle?.foodhabits\n            )\n            ? testfunc(true, \"foodhabits\")\n            : testfunc(false, \"foodhabits\")\n          : testfunc(true, \"foodhabits\")\n        : testfunc(true, \"foodhabits\");\n\n      //DRINKINGHABITS\n      props.loggedUsersData?.partnerpreferences?.drinkinghabits\n        ? String(props.loggedUsersData?.partnerpreferences?.drinkinghabits) !==\n          \"Not Specified\"\n          ? String(\n              props?.loggedUsersData?.partnerpreferences?.drinkinghabits\n            ).replace(/\\s+/g, \"\") ===\n            String(props?.profilee?.lifestyle?.drinkinghabits).replace(\n              /\\s+/g,\n              \"\"\n            )\n            ? testfunc(true, \"drinking\")\n            : testfunc(false, \"drinking\")\n          : testfunc(true, \"drinking\")\n        : testfunc(true, \"drinking\");\n      return () => {\n        setprofilematchcount(0);\n      };\n    }\n  }, [\n    props.profilee,\n    profileeSal,\n    logggeduserSal,\n    props.loggedUsersData.partnerpreferences,\n    match,\n    props.loggedUsersData.partnerpreferencesflag\n  ]);\n\n  function CircularProgressWithLabel(props) {\n    return (\n      <Box position=\"relative\" display=\"inline-flex\">\n        <CircularProgress variant=\"determinate\" {...props} />\n        <Box\n          top={0}\n          left={0}\n          bottom={0}\n          right={0}\n          position=\"absolute\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n        >\n          <Typography\n            variant=\"caption\"\n            component=\"div\"\n            color=\"textSecondary\"\n          >{`${Math.round(props.value)}%`}</Typography>\n        </Box>\n      </Box>\n    );\n  }\n\n  CircularProgressWithLabel.propTypes = {\n    /**\n     * The value of the progress indicator for the determinate variant.\n     * Value between 0 and 100.\n     */\n    value: PropTypes.number.isRequired\n  };\n  // const { repos } = props.loggedUsersData;\n  //console.log(props.loggedUsersData.length);\n  // if (!repos) return null;\n  // console.log(Object.keys(props.loggedUsersData).length);\n  if (!Object.keys(props.loggedUsersData).length) return <p>No repos, sorry</p>;\n  return props ? (\n    !props?.loggedUsersData?.partnerpreferencesflag ? (\n      <div className=\"partnerprefLink\">\n        <h2>\n          You have not set partner preferences yet{\" \"}\n          <Link\n            to={{\n              pathname: \"/EditProfile\",\n              state: {\n                tabids: \"4\"\n              }\n            }}\n            color=\"inherit\"\n            underline=\"none\"\n            className={classes.sublinksProfile}\n          >\n            Set Now\n          </Link>\n        </h2>\n      </div>\n    ) : (\n      <div>\n        <div className={classes.profile__picholder}>\n          <div className=\"profile__picholder-current\">\n            <img\n              src={props.loggedUsersData.profilepic}\n              alt=\"\"\n              className={classes.profile__pic}\n            />\n          </div>\n          <div className={classes.profile__percentage}>\n            <CircularProgressWithLabel\n              value={Math.round((profilematchcount / 14) * 100)}\n            />\n            <span>Match</span>\n          </div>\n          {/* <CircularProgressWithLabel value={progress} /> */}\n          <div className=\"profile__picholder-viewing\">\n            <img\n              src={props.profilee.profilepic}\n              alt=\"\"\n              className={classes.profile__pic}\n            />\n          </div>\n        </div>\n        <div className={classes.profile__preferences}>\n          <ul className={classes.profile__preferencesul}>\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>Your Preference</div>\n              <div className={classes.profile__match}>\n                {/* <CheckCircleIcon className={classes.profile__matchnomatch} color=\"primary\" /> */}\n              </div>\n              <div className={classes.profile__choice}>\n                {/* {props.profilee.name}'s Details */}\n                {props.profilee?.name}'s Details\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Age</div> Between{\" \"}\n                {props.loggedUsersData?.partnerpreferences?.age.from} to{\" \"}\n                {props.loggedUsersData?.partnerpreferences?.age.to} Years\n              </div>\n\n              {props.loggedUsersData?.partnerpreferences?.age.from !==\n              \"Not Specified\" ? (\n                moment(props.profilee.birthdate?.toDate(), \"YYYYMMDD\")\n                  .fromNow()\n                  .replace(\"Years ago\", \"\") >=\n                  props.loggedUsersData?.partnerpreferences?.age.from &&\n                moment(props.profilee.birthdate?.toDate(), \"YYYYMMDD\")\n                  .fromNow()\n                  .replace(\"ago\", \"\") <=\n                  props.loggedUsersData?.partnerpreferences?.age.to ? (\n                  match(true)\n                ) : (\n                  // setmatchCount((prevState) => prevState++)\n                  match(false)\n                )\n              ) : (\n                <CheckCircleIcon\n                  className={classes.profile__matchnomatch}\n                  color=\"primary\"\n                />\n              )}\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Age</div>\n                {moment(props.profilee.birthdate?.toDate(), \"YYYYMMDD\")\n                  .fromNow()\n                  .replace(\"ago\", \"\")}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Height</div>{\" \"}\n                {props.loggedUsersData?.partnerpreferences?.height.from}-\n                {props.loggedUsersData?.partnerpreferences?.height.to}\n              </div>\n              {/* <span className=\"profilematchcount\">\n                            {props.loggedUsersData?.partnerpreferences?.height\n                                .to !== \"Not Specified\"\n                                ? \"true\"\n                                : \"false\"}\n                            {props.profilee.height}\n                        </span> */}\n\n              {props.loggedUsersData?.partnerpreferences?.height.from !==\n                \"Not Specified\" &&\n              props.loggedUsersData?.partnerpreferences?.height.to !==\n                \"Not Specified\"\n                ? trimHeight(props.profilee.height) >=\n                    trimHeight(\n                      props.loggedUsersData?.partnerpreferences?.height.from\n                    ) &&\n                  trimHeight(props.profilee.height) <=\n                    trimHeight(\n                      props.loggedUsersData?.partnerpreferences?.height.to\n                    )\n                  ? match(true)\n                  : //setmatchCount((prevState) => prevState++)\n                    match(false)\n                : // setmatchCount((prevState) => prevState++)\n                  match(true)}\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Height</div>{\" \"}\n                {props.profilee.height}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Marital Status</div>{\" \"}\n                {props.loggedUsersData?.partnerpreferences?.maritalstatus}\n              </div>\n              {\n                props.loggedUsersData?.partnerpreferences?.maritalstatus !==\n                \"Not Specified\"\n                  ? props.loggedUsersData?.partnerpreferences?.maritalstatus ===\n                    props.profilee.maritalstatus\n                    ? match(true)\n                    : //setmatchCount((prevState) => prevState++)\n                      match(false)\n                  : match(true)\n                //setmatchCount((prevState) => prevState++)\n              }\n\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Marital Status</div>{\" \"}\n                {props.profilee.maritalstatus}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Mother Tongue </div>{\" \"}\n                {props.loggedUsersData?.partnerpreferences?.mothertongue}\n              </div>\n              {/* {console.log(props)} */}\n              {String(\n                props?.loggedUsersData?.partnerpreferences?.mothertongue\n              ) !== \"Not Specified\" &&\n              String(\n                props?.loggedUsersData?.partnerpreferences?.mothertongue\n              ) !== \"Any\"\n                ? (props?.loggedUsersData?.partnerpreferences?.mothertongue).includes(\n                    props?.profilee?.mothertongue\n                  )\n                  ? match(true)\n                  : //   setmatchCount((prevState) => prevState++)\n                    match(false)\n                : match(true)}\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Mother Tongue </div>\n                {props.profilee.mothertongue}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Caste </div>{\" \"}\n                {props.loggedUsersData?.partnerpreferences?.caste.join(\",\")}\n              </div>\n\n              {String(props.loggedUsersData?.partnerpreferences?.caste) !==\n                \"Not Specified\" &&\n              String(props.loggedUsersData?.partnerpreferences?.caste) !== \"Any\"\n                ? (props?.loggedUsersData?.partnerpreferences?.caste).includes(\n                    props?.profilee?.caste\n                  )\n                  ? match(true)\n                  : //   setmatchCount((prevState) => prevState++)\n                    match(false)\n                : match(true)}\n\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Caste </div>\n                {props.profilee.caste}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Sub Caste </div>{\" \"}\n                {props.loggedUsersData?.partnerpreferences?.subcaste.join(\",\")}\n              </div>\n\n              {String(props.loggedUsersData?.partnerpreferences?.subcaste) !==\n                \"Not Specified\" &&\n              String(props.loggedUsersData?.partnerpreferences?.subcaste) !==\n                \"Any\"\n                ? (props?.loggedUsersData?.partnerpreferences?.subcaste).includes(\n                    props?.profilee?.subcaste\n                  )\n                  ? match(true)\n                  : //   setmatchCount((prevState) => prevState++)\n                    match(false)\n                : match(true)}\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Sub Caste </div>\n                {props.profilee.caste}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Star </div>\n                {props.loggedUsersData?.partnerpreferences?.star}\n              </div>\n\n              {String(props.loggedUsersData?.partnerpreferences?.star) !==\n                \"Not Specified\" &&\n              String(props.loggedUsersData?.partnerpreferences?.star) !== \"Any\"\n                ? (props?.loggedUsersData?.partnerpreferences?.subcaste).includes(\n                    props?.profilee?.star\n                  )\n                  ? match(true)\n                  : //   setmatchCount((prevState) => prevState++)\n                    match(false)\n                : match(true)}\n\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Star </div>\n                {props.profilee.raashi}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Education</div>{\" \"}\n                {props.loggedUsersData?.partnerpreferences?.education.join(\n                  \", \"\n                )}\n              </div>\n\n              {String(props.loggedUsersData?.partnerpreferences?.education) !==\n                \"Not Specified\" &&\n              String(props.loggedUsersData?.partnerpreferences?.education) !==\n                \"Any\"\n                ? (props?.loggedUsersData?.partnerpreferences?.education).includes(\n                    props?.profilee?.education\n                  )\n                  ? match(true)\n                  : //   setmatchCount((prevState) => prevState++)\n                    match(false)\n                : match(true)}\n\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Education</div>\n                {props.profilee.education}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Employment</div>{\" \"}\n                {props.loggedUsersData?.partnerpreferences?.employedin.join(\n                  \",\"\n                )}\n              </div>\n\n              {String(props.loggedUsersData?.partnerpreferences?.employedin) !==\n                \"Not Specified\" &&\n              String(props.loggedUsersData?.partnerpreferences?.employedin) !==\n                \"Any\"\n                ? (props?.loggedUsersData?.partnerpreferences?.employedin).includes(\n                    props?.profilee?.employment\n                  )\n                  ? match(true)\n                  : //   setmatchCount((prevState) => prevState++)\n                    match(false)\n                : match(true)}\n\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Employment</div>\n                {props.profilee.employment}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Income</div>{\" \"}\n                {props.loggedUsersData?.partnerpreferences?.annualincome}\n              </div>\n\n              {props.loggedUsersData?.partnerpreferences?.annualincome !==\n              \"Not Specified\"\n                ? logggeduserSal < profileeSal\n                  ? match(true)\n                  : match(false)\n                : match(true)}\n\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Income</div>\n                {props.profilee.income} Lakhs\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Residing In</div>{\" \"}\n                {props.loggedUsersData?.partnerpreferences?.countryliving}\n              </div>\n\n              {String(\n                props.loggedUsersData?.partnerpreferences?.countryliving\n              ) !== \"Not Specified\" &&\n              String(\n                props.loggedUsersData?.partnerpreferences?.countryliving\n              ) !== \"Any\"\n                ? (props?.loggedUsersData?.partnerpreferences?.countryliving).includes(\n                    props?.profilee?.residingcountry\n                  )\n                  ? match(true)\n                  : //   setmatchCount((prevState) => prevState++)\n                    match(false)\n                : match(true)}\n\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>\n                  Residing In{\" \"}\n                  {props.loggedUsersData?.partnerpreferences?.countryliving ===\n                    \"Any\"}\n                </div>\n                {props.profilee.residingcountry}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Smoking Habits</div>\n                {props.loggedUsersData?.partnerpreferences?.smokinghabits}\n              </div>\n\n              {props.loggedUsersData?.partnerpreferences?.smokinghabits !==\n              \"Not Specified\"\n                ? (props?.loggedUsersData?.partnerpreferences?.smokinghabits).includes(\n                    props?.profilee?.lifestyle?.smokinghabits\n                  )\n                  ? match(true)\n                  : //   setmatchCount((prevState) => prevState++)\n                    match(false)\n                : match(true)}\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Smoking Habits</div>\n                {props.profilee.lifestyle?.smokinghabits\n                  ? props.profilee.lifestyle.smokinghabits\n                  : \"NA\"}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Food Habits</div>\n                {props.loggedUsersData?.partnerpreferences?.foodhabits}\n              </div>\n              {props.loggedUsersData?.partnerpreferences?.foodhabits !==\n              \"Not Specified\"\n                ? (props?.loggedUsersData?.partnerpreferences?.foodhabits).includes(\n                    props?.profilee?.lifestyle?.foodhabits\n                  )\n                  ? match(true)\n                  : //   setmatchCount((prevState) => prevState++)\n                    match(false)\n                : match(true)}\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Food Habits</div>\n                {props.profilee.lifestyle?.foodhabits\n                  ? props.profilee.lifestyle?.foodhabits\n                  : \"NA\"}\n              </div>\n            </li>\n            <Divider />\n            <li className={classes.profile__preferencesli}>\n              <div className={classes.profile__preference}>\n                <div className={classes.profile__match}>Drinking Habits</div>\n                {props?.loggedUsersData?.partnerpreferences?.drinkinghabits}\n              </div>\n\n              {String(\n                props.loggedUsersData?.partnerpreferences?.drinkinghabits\n              ) !== \"Not Specified\"\n                ? String(\n                    props?.loggedUsersData?.partnerpreferences?.drinkinghabits\n                  ).replace(/\\s+/g, \"\") ===\n                  String(props?.profilee?.lifestyle?.drinkinghabits).replace(\n                    /\\s+/g,\n                    \"\"\n                  )\n                  ? match(true)\n                  : match(false)\n                : match(true)}\n\n              <div className={classes.profile__choice}>\n                <div className={classes.profile__match}>Drinking Habits</div>\n                {props.profilee.lifestyle?.drinkinghabits\n                  ? props?.profilee?.lifestyle?.drinkinghabits\n                  : \"NA\"}\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  ) : (\n    \"\"\n  );\n}\n\nexport default Profilepartnerpreference;\n","//withdLoading.js\nimport React from \"react\";\nfunction WithLoading(Component) {\n    return function WihLoadingComponent({ isLoading, ...props }) {\n        if (!isLoading) return <Component {...props} />;\n        return <p>Hold on, fetching data might take some time.</p>;\n    };\n}\nexport default WithLoading;\n","import { db } from \"../app/firebase\";\nimport firebase from \"firebase\";\n\nexport const shortlistNew = async (\n  loggedinuserEmail,\n  tobeshortlistedId,\n  profilee,\n  email,\n  loggedinUser\n) => {\n  //adding a array in logged in user(myshortlist(loggedin user) array)\n  db.collection(\"users\")\n    .doc(loggedinuserEmail)\n    .set(\n      {\n        shortlisted: firebase.firestore.FieldValue.arrayUnion(tobeshortlistedId)\n      },\n      { merge: true }\n    );\n\n  // adding the shortlisted user snippet in logged in user(myshortlist(loggedin user) snippet)\n  db.collection(\"users\")\n    .doc(loggedinuserEmail)\n    .collection(\"shortlisted\")\n    .doc(profilee.email)\n    .set({\n      email: profilee.email,\n      name: profilee.name,\n      education: profilee.education,\n      star: profilee.birthstar,\n      raashi: profilee.raashi,\n      gothra: profilee.gothra,\n      dob: profilee.birthdate,\n      dp: profilee.profilepic\n    });\n\n  //adding a array in viewingprofile (shortlisted me array)\n  db.collection(\"users\")\n    .doc(profilee.email)\n    .set(\n      {\n        shortlistedme: firebase.firestore.FieldValue.arrayUnion(email)\n      },\n      { merge: true }\n    );\n\n  // adding the logged in  user snippet in viewingprofile(shortlisted me snippet)\n  db.collection(\"users\")\n    .doc(profilee.email)\n    .collection(\"shortlistedme\")\n    .doc(email)\n    .set({\n      email: loggedinUser.userData.email,\n      name: loggedinUser.userData.name,\n      education: loggedinUser.userData.education,\n      star: loggedinUser.userData.birthstar,\n      raashi: loggedinUser.userData.raashi,\n      gothra: loggedinUser.userData.gothra,\n      dob: loggedinUser.userData.birthdate,\n      dp: loggedinUser.userData.profilepic\n    })\n    // .then(() => {\n    //   //   // console.log(\"Document successfully deleted!\");\n    //   //setsnackbarmsg(\"Successfully added to shortlist\");\n    //   //   // setsnackbartype(\"success\");\n    //   //   // setopenSnackbar(true);\n    //   alert(\n    //     new Promise((resolve) => {\n    //       JSON.stringify(resolve(\"resolved\"));\n    //     })\n    //   );\n    //   return new Promise((resolve) => {\n    //     resolve(\"resolved\");\n    //   });\n    //   //   // return [\"Successfully added to shortlist\", \"success\", true];\n    // })\n    .catch((error) => {\n      console.error(\"Error adding document: \", error);\n    });\n  return Promise.resolve(\"Success\");\n};\n","import {\n  Box,\n  Button,\n  Paper,\n  Snackbar,\n  SnackbarContent,\n  Typography\n} from \"@material-ui/core\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useParams } from \"react-router\";\n\nimport { db } from \"../app/firebase\";\nimport Profileimagegallery from \"./Profileimagegallery\";\nimport moment from \"moment\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\nimport ContactPhoneIcon from \"@material-ui/icons/ContactPhone\";\nimport PhoneIphoneIcon from \"@material-ui/icons/PhoneIphone\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport \"./Profile.scss\";\nimport { Card } from \"@material-ui/core\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport firebase from \"firebase\";\nimport { batch } from \"react-redux\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport PropTypes from \"prop-types\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Profilepartnerpreference from \"./Profilepartnerpreference\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport WithLoading from \"./Withloading.js\";\nimport {\n  fetchAsyncProfileDetail,\n  getSelectedProfile,\n  removeSelectedProfile\n} from \"../features/profilesSlice\";\nimport { shortlistNew } from \"../utils/Shortlist\";\nconst ListWithLoading = WithLoading(Profilepartnerpreference);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: \"100%\"\n  },\n  imageGallery: {\n    position: \"sticky\",\n    top: \"0\",\n    \"& .image-gallery-thumbnail\": {\n      \"& .image-gallery-thumbnail-image\": {\n        height: \"100px\",\n        objectFit: \"cover\"\n      }\n    }\n  },\n  actionButtons: {\n    width: \"250px\",\n    margin: \"10px\",\n    \"@media (max-width: 767px)\": {\n      margin: \"10px 5px\"\n    }\n  },\n  actionButtonsHolder: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    \"@media (max-width: 767px)\": {\n      // flexDirection: \"column\",\n      alignItems: \"center\",\n      button: {\n        padding: \"8px\"\n      }\n    }\n  },\n  actions__msg: {\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  subheading: {\n    // background: theme.palette.primary.main,\n    // padding: \"10px\",\n    // borderRadius: \"10px\",\n  },\n  listgroup: {\n    overflow: \"hidden\",\n    padding: \"10px\",\n    paddingBottom: \"0\",\n    margin: \"10px 0\"\n  },\n  listdesc: {\n    listStyle: \"none\",\n    paddingLeft: \"10px\",\n    width: \"100%\"\n  },\n  listdescli: {\n    marginBottom: \"10px\",\n    width: \"100%\",\n    \"@media (max-width: 767px)\": {\n      display: \"flex\"\n    }\n  },\n  leftSideHead: {\n    width: \"175px\",\n    display: \"block\",\n    float: \"left\",\n    textTransform: \"uppercase\",\n    position: \"relative\",\n    \"@media (max-width: 767px)\": {\n      width: \"140px\",\n      \"&::after\": {\n        content: '\":\"',\n        right: \"0\",\n        position: \"absolute\",\n        top: \"-1px\"\n      }\n    }\n  },\n\n  rightSidedesc: {\n    fontSize: \"1rem\",\n    width: \"calc(100% - 175px)\",\n    wordBreak: \"break-word\",\n    \"@media (max-width: 767px)\": {\n      width: \"calc(100% - 140px)\",\n      paddingLeft: \"5px\"\n    }\n  },\n  requestsection: {\n    justifyContent: \"center\",\n    maxWidth: \"500px\",\n    margin: \" 0 auto\",\n    display: \"flex\"\n  },\n  requestsectioninner: {\n    display: \"flex\",\n    alignItems: \"center\",\n    alignContent: \"flex-start\"\n  },\n  requestmsgholder: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    maxWidth: \"500px\",\n    margin: \"0 auto\"\n  },\n  requestmsg: {\n    display: \"inline\",\n    padding: \"10px 30px\",\n\n    float: \"left\",\n    textAlign: \"center\",\n    maxWidth: \"500px\",\n    margin: \"10px auto\",\n    \"@media (max-width: 767px)\": {\n      padding: \"10px\"\n    }\n  },\n  profile__picholder: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  profile__pic: {\n    width: \"100px\",\n    height: \"100px\",\n    borderRadius: \"50%\",\n    objectFit: \"cover\"\n  },\n  profile__preferencesul: {\n    paddingLeft: 0\n  },\n  profile__preferencesli: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"10px 5px\",\n    fontSize: \"16px\",\n    borderBottomColor: theme.palette.primary.main,\n    borderBottomWidth: \"1px\",\n    borderBottomStyle: \"solid\"\n  },\n  profile__match: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  acceptdecline: {\n    margin: \"0 5px\"\n  }\n}));\nfunction Profile() {\n  const classes = useStyles();\n  console.log(\"counttttttttttttttttttttttttttttttttt\");\n  //const { userid } = useParams();\n  const location = useLocation();\n  const userid = atob(location.pathname.split(\"/ProfileN/\")[1]);\n  // console.log(\"userid start\");\n  // console.log(userid);\n  // console.log(\"userid end\");\n  // const myparam = location?.state?.params;\n  // const userid = myparam?.uid;\n\n  //   const [profilee, setprofilee] = useState([]);\n\n  const [loadingpartnerPref, setLoadingpartnerPref] = useState(true);\n\n  const dispatch = useDispatch();\n  // console.log(\"starttttttttttttttt\");\n  const profilee = useSelector(getSelectedProfile);\n  // console.log(profilee);\n  // console.log(\"endddddddddd\");\n  useEffect(() => {\n    dispatch(fetchAsyncProfileDetail(userid));\n    return () => {\n      dispatch(removeSelectedProfile());\n    };\n  }, [dispatch, userid]);\n  // useEffect(() => {\n  //     db.collection(\"users\")\n  //         .where(\"uid\", \"==\", userid)\n  //         .get()\n  //         .then(function (querySnapshot) {\n  //             querySnapshot.forEach(function (doc) {\n  //                 // doc.data() is never undefined for query doc snapshots\n  //                 console.log(doc.id, \" => \", doc.data());\n  //                 setprofilee(doc.data());\n  //             });\n  //         })\n  //         .catch(function (error) {\n  //             console.log(\"Error getting documents: \", error);\n  //         });\n  // }, []);\n  // const [profilee, setprofilee] = useState([]);\n  // const getAge = (dateString) => {\n  //     // getAge(dateString) {\n  //     var today = new Date();\n  //     var birthDate = new Date(dateString);\n  //     var age = today.getFullYear() - birthDate.getFullYear();\n  //     var m = today.getMonth() - birthDate.getMonth();\n  //     if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n  //         age--;\n  //     }\n  //     return age;\n  // };\n\n  // const [profileeready, setProfileeready] = useState(false);\n  // const [loggedusersready, setloggedusersready] = useState(false);\n  // const useUsers = () => {\n  //   // 1\n  //   // const [users, usersSet] = React.useState([]);\n  //   // const [newProfileImages, setnewProfileImages] = useState();\n\n  //   useEffect(() => {\n  //     function fetchImages() {\n  //       // const fullResponse = await fetch(\"https://reqres.in/api/users\");\n  //       // const responseJson = await fullResponse.json();\n  //       // usersSet(responseJson.data);\n  //       setLoadingpartnerPref(true);\n  //       db.collection(\"users\")\n  //         .doc(userid)\n  //         .get()\n  //         .then((doc) => {\n  //           // doc.data() is never undefined for query doc snapshots\n  //           // console.log(doc.id, \" => \", doc.data());\n\n  //           setprofilee(doc.data());\n  //           setLoadingpartnerPref(false);\n  //           // console.log(profilee);\n  //           // if (profilee.length) setProfileeready(true);\n  //         })\n\n  //         .catch(function (error) {\n  //           console.log(\"Error getting documents: \", error);\n  //         });\n  //     }\n\n  //     //fetchImages();\n  //   }, []);\n\n  //   // 2\n  //   return [profilee];\n  // };\n\n  //const [profiles] = useUsers();\n  //console.log(profiles);\n\n  // console.log(profileimage);\n  // console.log(pic1);\n  // console.log(pic2);\n\n  // const useUsers1 = () => {\n  //     // 1\n  //     // const [users, usersSet] = React.useState([]);\n  //     // const [newProfileImages, setnewProfileImages] = useState();\n\n  //     const [profileimage, setprofileimage] = useState();\n  //     const [pic1, setpic1] = useState();\n  //     const [pic2, setpic2] = useState();\n  //     React.useEffect(() => {\n  //         async function fetchImages() {\n  //             // const fullResponse = await fetch(\"https://reqres.in/api/users\");\n  //             // const responseJson = await fullResponse.json();\n  //             // usersSet(responseJson.data);\n  //             console.log(profiles);\n  //             setprofileimage(profiles.profilepic ? profiles.profilepic : \"\");\n  //             setpic1(profiles.pic1 ? profiles.pic1 : \"\");\n  //             setpic2(profiles.pic2 ? profiles.pic2 : \"\");\n  //         }\n\n  //         fetchImages();\n  //     }, []);\n\n  //     // 2\n  //     return [profileimage, pic1, pic2];\n  // };\n\n  // const [profileimage, pic1, pic2] = useUsers1();\n  const [profileimage, setprofileimage] = useState();\n  const [pic1, setpic1] = useState();\n  const [pic2, setpic2] = useState();\n  useEffect(() => {\n    //\n    console.log(\"qwertyqwertyqwertyqwertyqwertyyyyy\");\n    setprofileimage(profilee.profilepic ? profilee.profilepic : \"\");\n    setpic1(profilee.pic1 ? profilee.pic1 : \"\");\n    setpic2(profilee.pic2 ? profilee.pic2 : \"\");\n    // setProfileeready(true);\n    //console.log(Object.keys(profilee).length + \" profileeeeeeeee length\");\n  }, [profilee]);\n  useEffect(() => {\n    // console.log(profileimage);\n    // console.log(pic1);\n    // console.log(pic2);\n  }, [profileimage, pic1, pic2]);\n\n  // console.log(profilee?.birthdate);\n  //const d = new Date(profilee?.birthdate);\n  // let date = d.getHours() + \":\" + d.getMinutes() + \", \" + d.toDateString();\n  // console.log(d);\n\n  // const [profileimages, setprofileimages] = useState([]);\n  // useEffect(() => {\n  //     if (!profileimages) {\n  //         // setprofileimages(\"\");\n  //         setprofileimages((state) => [...state, profileimage]);\n  //         setprofileimages((state) => [...state, pic1]);\n  //         setprofileimages((state) => [...state, pic2]);\n  //         console.log(profileimages);\n  //     }\n  // }, [profileimages]);\n  const images = [\n    {\n      original: profileimage,\n      thumbnail: profileimage\n    },\n    pic1 !== \" \"\n      ? {\n          original: pic1,\n          thumbnail: pic1\n        }\n      : \" \",\n    pic2 !== \"\"\n      ? {\n          original: pic2,\n          thumbnail: pic2\n        }\n      : \"\"\n  ];\n  // const timstamp =\n  //     profilee &&\n  //     profilee.bithdate &&\n  //     profilee.birthdate.nanoseconds.toDate();\n  // console.log(timstamp);\n  // db.collection(\"users\").doc(this.username).collection(\"booksList\").add({\n  //     password: this.password,\n  //     name: this.name,\n  //     rollno: this.rollno,\n  // });\n  const userDetails = useSelector(selectUser);\n  const [loggedinUser, setloggedinUser] = useState(userDetails);\n\n  useEffect(() => {\n    setloggedinUser(userDetails);\n  }, loggedinUser);\n  var user = firebase.auth().currentUser;\n\n  //var name, email, photoUrl, uid, emailVerified;\n  var email;\n  if (user != null) {\n    email = user.email;\n    //uid = user.uid;\n    // The user's ID, unique to the Firebase project. Do NOT use // this value to authenticate with your backend server, if // you have one. Use User.getToken() instead.}\n  }\n  // console.log(uid);\n  // console.log(email);\n  // db.collection(\"users\")\n  //     .doc(email)\n  //     .get()\n  //     .then(function (querySnapshot) {\n  //         console.log(querySnapshot);\n  //         querySnapshot(function (doc) {\n  //             // doc.data() is never undefined for query doc snapshots\n  //             console.log(doc.id, \" => \", doc.data());\n  //             setprofilee(doc.data());\n  //         });\n  //     })\n  //     .catch(function (error) {\n  //         console.log(\"Error getting documents: \", error);\n  //     });\n  const [loggedUsersData, setloggedUsersData] = useState([\"\"]);\n  const [iserror, setIserror] = useState(true);\n\n  // useEffect(() => {\n\n  // }, [profilee]);\n  const loadNow = () => {\n    db.collection(\"users\")\n      .doc(email)\n      .collection(\"recentlyviewed\")\n      .doc(profilee?.email)\n      .set({\n        email: profilee?.email,\n        name: profilee?.name,\n        education: profilee?.education,\n        star: profilee?.birthstar,\n        raashi: profilee?.raashi,\n        gothra: profilee?.gothra,\n        dob: profilee?.birthdate,\n        dp: profilee?.profilepic,\n        viewedon: firebase.firestore.FieldValue.serverTimestamp()\n      });\n\n    db.collection(\"users\")\n      .doc(profilee.email)\n      .collection(\"recentlyviewedme\")\n      .doc(email)\n      .set({\n        email: loggedinUser.userData.email,\n        name: loggedinUser.userData.name,\n        education: loggedinUser.userData.education,\n        star: loggedinUser.userData.birthstar,\n        raashi: loggedinUser.userData.raashi,\n        gothra: loggedinUser.userData.gothra,\n        dob: loggedinUser.userData.birthdate,\n        dp: loggedinUser.userData.profilepic,\n        viewedon: firebase.firestore.FieldValue.serverTimestamp()\n      });\n  };\n  if (profilee?.email) loadNow();\n  // useEffect(() => {\n  //     console.log(profilee + \"llllllllllllllllllllllllllll\");\n  //     alert(\"df\");\n\n  //     // db.collection(\"users\")\n  //     //     .doc(profilee.email)\n  //     //     .collection(\"recentlyviewed\")\n  //     //     .doc(email)\n  //     //     .set({\n  //     //         email: loggedinUser.userData.email,\n  //     //         name: loggedinUser.userData.name,\n  //     //         education: loggedinUser.userData.education,\n  //     //         star: loggedinUser.userData.birthstar,\n  //     //         raashi: loggedinUser.userData.raashi,\n  //     //         gothra: loggedinUser.userData.gothra,\n  //     //         dob: loggedinUser.userData.birthdate,\n  //     //         dp: loggedinUser.userData.profilepic,\n  //     //     })\n  //     //     .then(() => {\n  //     //         // console.log(\"Document successfully deleted!\");\n  //     //         // setsnackbarmsg(\"Successfully added to shortlist\");\n  //     //         // setsnackbartype(\"success\");\n  //     //         // setopenSnackbar(true);\n  //     //     })\n  //     //     .catch((error) => {\n  //     //         console.error(\"Error adding document: \", error);\n  //     //     });\n  // }, [profilee]);\n  useEffect(() => {\n    setLoadingpartnerPref(true);\n    db.collection(\"users\")\n      .doc(email)\n      .onSnapshot((doc) => {\n        setloggedUsersData(doc.data());\n        setLoadingpartnerPref(false);\n      });\n    // setloggedusersready(true);\n    // }\n  }, [email]);\n  // useEffect(() => {\n  //   console.log(loggedUsersData);\n  // }, [loggedUsersData]);\n  var userRef = db.collection(\"users\").doc(email);\n  const tobeshortlistedId = profilee?.email;\n\n  async function nshortlist() {\n    let shortlistReturn = await shortlistNew(\n      email,\n      tobeshortlistedId,\n      profilee,\n      email,\n      loggedinUser\n    );\n    const tried = await shortlistReturn;\n    if (tried === \"Success\") {\n      setsnackbarmsg(\"Successfully added to shortlist\");\n      setsnackbartype(\"success\");\n      setopenSnackbar(true);\n    }\n  }\n\n  //asyncCall();\n  const shortlist = () => {\n    //adding a array in logged in user(myshortlist(loggedin user) array)\n    userRef.set(\n      {\n        shortlisted: firebase.firestore.FieldValue.arrayUnion(tobeshortlistedId)\n      },\n      { merge: true }\n    );\n\n    // adding the shortlisted user snippet in logged in user(myshortlist(loggedin user) snippet)\n    db.collection(\"users\")\n      .doc(email)\n      .collection(\"shortlisted\")\n      .doc(profilee.email)\n      .set({\n        email: profilee.email,\n        name: profilee.name,\n        education: profilee.education,\n        star: profilee.birthstar,\n        raashi: profilee.raashi,\n        gothra: profilee.gothra,\n        dob: profilee.birthdate,\n        dp: profilee.profilepic\n      });\n\n    //adding a array in viewingprofile (shortlisted me array)\n    db.collection(\"users\")\n      .doc(profilee.email)\n      .set(\n        {\n          shortlistedme: firebase.firestore.FieldValue.arrayUnion(email)\n        },\n        { merge: true }\n      );\n\n    // adding the logged in  user snippet in viewingprofile(shortlisted me snippet)\n    db.collection(\"users\")\n      .doc(profilee.email)\n      .collection(\"shortlistedme\")\n      .doc(email)\n      .set({\n        email: loggedinUser.userData.email,\n        name: loggedinUser.userData.name,\n        education: loggedinUser.userData.education,\n        star: loggedinUser.userData.birthstar,\n        raashi: loggedinUser.userData.raashi,\n        gothra: loggedinUser.userData.gothra,\n        dob: loggedinUser.userData.birthdate,\n        dp: loggedinUser.userData.profilepic\n      })\n      .then(() => {\n        // console.log(\"Document successfully deleted!\");\n        setsnackbarmsg(\"Successfully added to shortlist\");\n        setsnackbartype(\"success\");\n        setopenSnackbar(true);\n        return new Promise((resolve) => {\n          resolve(\"resolved\");\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  const removeshortlist = () => {\n    userRef.set(\n      {\n        shortlisted: firebase.firestore.FieldValue.arrayRemove(\n          tobeshortlistedId\n        )\n      },\n      { merge: true }\n    );\n    db.collection(\"users\")\n      .doc(email)\n      .collection(\"shortlisted\")\n      .doc(profilee.email)\n      .delete()\n      .then(() => {\n        // console.log(\"Document successfully deleted!\");\n        setsnackbarmsg(\"Successfully removed from shortlist\");\n        setsnackbartype(\"error\");\n        setopenSnackbar(true);\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n\n    //removing a array in viewingprofile\n    db.collection(\"users\")\n      .doc(profilee.email)\n      .set(\n        {\n          shortlistedme: firebase.firestore.FieldValue.arrayRemove(email)\n        },\n        { merge: true }\n      );\n    // removing the logged in  user snippet in viewingprofile\n    db.collection(\"users\")\n      .doc(profilee.email)\n      .collection(\"shortlistedme\")\n      .doc(email)\n      .delete()\n      .then(() => {\n        console.log(\"Document successfully deleted!\");\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n  };\n\n  const [openSnackbar, setopenSnackbar] = useState(false);\n  const [snackbarmsg, setsnackbarmsg] = useState();\n  const [snackbartype, setsnackbartype] = useState();\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setopenSnackbar(false);\n  };\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  const sendInterest = () => {\n    //adding a array of in logged in user\n    userRef.set(\n      {\n        interestssent: firebase.firestore.FieldValue.arrayUnion(\n          tobeshortlistedId\n        )\n      },\n      { merge: true }\n    );\n    // adding the interested user snippet in logged in user(myintersets(loggedin user) snippet)\n    db.collection(\"users\")\n      .doc(email)\n      .collection(\"interestssent\")\n      .doc(profilee.email)\n      .set({\n        email: profilee.email,\n        name: profilee.name,\n        education: profilee.education,\n        star: profilee.birthstar,\n        raashi: profilee.raashi,\n        gothra: profilee.gothra,\n        dob: profilee.birthdate,\n        dp: profilee.profilepic,\n        accepted: false,\n        read: false,\n        sentDate: firebase.firestore.FieldValue.serverTimestamp()\n      });\n\n    //adding a array in viewingprofile (shortlisted me array)\n    db.collection(\"users\")\n      .doc(profilee.email)\n      .set(\n        {\n          interestsreceived: firebase.firestore.FieldValue.arrayUnion(email)\n        },\n        { merge: true }\n      );\n\n    // adding the logged in  user snippet in viewingprofile(shortlisted me snippet)\n    db.collection(\"users\")\n      .doc(profilee.email)\n      .collection(\"interestsreceived\")\n      .doc(email)\n      .set({\n        email: loggedinUser.userData.email,\n        name: loggedinUser.userData.name,\n        education: loggedinUser.userData.education,\n        star: loggedinUser.userData.birthstar,\n        raashi: loggedinUser.userData.raashi,\n        gothra: loggedinUser.userData.gothra,\n        dob: loggedinUser.userData.birthdate,\n        dp: loggedinUser.userData.profilepic,\n        accepted: false,\n        read: false,\n        recievedDate: firebase.firestore.FieldValue.serverTimestamp()\n      })\n      .then(() => {\n        // console.log(\"Document successfully deleted!\");\n        setsnackbarmsg(`Successfully sent interest to ${profilee.name}`);\n        setsnackbartype(\"success\");\n        setopenSnackbar(true);\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  const [interestSent, setinterestSent] = useState();\n  const [interestReceived, setinterestReceived] = useState();\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(email)\n      .collection(\"interestssent\")\n      .doc(userid)\n      .onSnapshot((doc) => {\n        setinterestSent(doc.data());\n      });\n\n    // }\n  }, []);\n\n  useEffect(() => {\n    // });\n    db.collection(\"users\")\n      .doc(email)\n      .collection(\"interestsreceived\")\n      .doc(userid)\n      .onSnapshot(\n        (doc) => {\n          // console.log(doc.data());\n          setinterestReceived(doc.data());\n        },\n        (error) => {\n          console.log(error);\n        }\n      );\n\n    // }\n    //console.log(email);\n  }, []);\n\n  const acceptRequest = (requestEmail) => {\n    db.collection(\"users\")\n      .doc(email)\n      .collection(\"interestsreceived\")\n      .doc(requestEmail)\n      .set(\n        {\n          accepted: true,\n          read: true\n        },\n        { merge: true }\n      );\n    db.collection(\"users\")\n      .doc(requestEmail)\n      .collection(\"interestssent\")\n      .doc(email)\n      .set(\n        {\n          accepted: \"accepted\"\n        },\n        { merge: true }\n      );\n  };\n\n  const declineRequest = (requestEmail) => {\n    db.collection(\"users\")\n      .doc(email)\n      .collection(\"interestsreceived\")\n      .doc(requestEmail)\n      .set(\n        {\n          accepted: false,\n          read: true\n        },\n        { merge: true }\n      );\n    db.collection(\"users\")\n      .doc(requestEmail)\n      .collection(\"interestssent\")\n      .doc(email)\n      .set(\n        {\n          accepted: \"declined\"\n        },\n        { merge: true }\n      );\n  };\n  // function CircularProgressWithLabel(props) {\n  //     return (\n  //         <Box position=\"relative\" display=\"inline-flex\">\n  //             <CircularProgress variant=\"determinate\" {...props} />\n  //             <Box\n  //                 top={0}\n  //                 left={0}\n  //                 bottom={0}\n  //                 right={0}\n  //                 position=\"absolute\"\n  //                 display=\"flex\"\n  //                 alignItems=\"center\"\n  //                 justifyContent=\"center\"\n  //             >\n  //                 <Typography\n  //                     variant=\"caption\"\n  //                     component=\"div\"\n  //                     color=\"textSecondary\"\n  //                 >{`${Math.round(props.value)}%`}</Typography>\n  //             </Box>\n  //         </Box>\n  //     );\n  // }\n  // CircularProgressWithLabel.propTypes = {\n  //     /**\n  //      * The value of the progress indicator for the determinate variant.\n  //      * Value between 0 and 100.\n  //      * @default 0\n  //      */\n  //     value: PropTypes.number.isRequired,\n  // };\n\n  // const [progress, setProgress] = React.useState(70);\n\n  // // React.useEffect(() => {\n  // const timer = setInterval(() => {\n  //     setProgress((prevProgress) =>\n  //         prevProgress >= progress ? 0 : prevProgress + 10\n  //     );\n  // }, 100);\n  // //return () => {\n  // if (progress >= 80) {\n  //     clearInterval(timer);\n  // }\n\n  // // };\n  // }, []);\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6}>\n          <div className={classes.imageGallery}>\n            <Profileimagegallery user={userid} images={images} />\n            <div className={classes.actionButtonsHolder}>\n              <Snackbar\n                open={openSnackbar}\n                autoHideDuration={3000}\n                onClose={handleClose}\n              >\n                <Alert onClose={handleClose} severity={snackbartype}>\n                  {snackbarmsg}\n                </Alert>\n              </Snackbar>\n              {loggedUsersData?.shortlisted?.indexOf(profilee?.email) > -1 ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.actionButtons}\n                  endIcon={<BookmarkIcon>send</BookmarkIcon>}\n                  onClick={removeshortlist}\n                >\n                  Shortlisted\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.actionButtons}\n                  endIcon={<BookmarkBorderIcon>send</BookmarkBorderIcon>}\n                  onClick={nshortlist}\n                >\n                  Shortlist\n                </Button>\n              )}\n              {loggedUsersData?.interestssent?.indexOf(profilee?.email) > -1 ? (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.actionButtons}\n                  onClick={sendInterest}\n                  endIcon={<FavoriteIcon>send</FavoriteIcon>}\n                >\n                  Interest Sent\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"large\"\n                  className={classes.actionButtons}\n                  onClick={sendInterest}\n                  endIcon={<FavoriteBorderIcon>send</FavoriteBorderIcon>}\n                >\n                  Send Interest\n                </Button>\n              )}\n            </div>\n            {/* <div className={classes.actionButtonsHolder}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                                className={classes.actionButtons}\n                                endIcon={\n                                    <PhoneIphoneIcon>send</PhoneIphoneIcon>\n                                }\n                            >\n                                View Contact\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                size=\"large\"\n                                className={classes.actionButtons}\n                                endIcon={\n                                    <ChatBubbleOutlineIcon>\n                                        send\n                                    </ChatBubbleOutlineIcon>\n                                }\n                            >\n                                Send Message\n                            </Button>\n                        </div> */}\n\n            <div className={classes.actions__msg}>\n              {loggedUsersData?.interestsreceived?.indexOf(profilee.email) >\n              -1 ? (\n                <Paper className={classes.requestmsg}>\n                  <div className={classes.requestsection}>\n                    {!interestReceived?.accepted ? (\n                      <div className={classes.requestsectioninner}>\n                        <span>\n                          {interestReceived?.name} is awaiting for response\n                        </span>\n                        <Button\n                          color=\"primary\"\n                          variant=\"contained\"\n                          className={classes.acceptdecline}\n                          onClick={(e) => acceptRequest(profilee.email)}\n                        >\n                          Accept\n                        </Button>\n                        <Button\n                          color=\"primary\"\n                          variant=\"outlined\"\n                          className={classes.acceptdecline}\n                          onClick={(e) => declineRequest(profilee.email)}\n                        >\n                          <strong>Decline</strong>\n                        </Button>\n                      </div>\n                    ) : (\n                      <div className={classes.requestmsgholder}>\n                        <Paper className={classes.requestmsg}>\n                          You have\n                          {interestReceived?.accepted\n                            ? \" accepted\"\n                            : \" declined\"}{\" \"}\n                          <strong>\n                            {interestReceived?.name}\n                            's{\" \"}\n                          </strong>\n                          request\n                        </Paper>\n                      </div>\n                    )}\n                  </div>\n                </Paper>\n              ) : (\n                <div></div>\n              )}\n\n              <div className={classes.requestmsgholder}>\n                <Paper className={classes.requestmsg}>\n                  {loggedUsersData?.interestssent?.indexOf(profilee?.email) >\n                  -1 ? (\n                    <>\n                      {!interestSent?.accepted ? (\n                        <div>\n                          Awaiting response from {interestSent?.name} for your\n                          request\n                        </div>\n                      ) : (\n                        <div>\n                          {loggedUsersData?.interestsreceived?.indexOf(\n                            profilee.email\n                          ) > -1 &&\n                          loggedUsersData?.interestssent?.indexOf(\n                            profilee.email\n                          ) > -1 ? (\n                            <>\n                              & <br />\n                            </>\n                          ) : (\n                            \"\"\n                          )}{\" \"}\n                          {/* &<br></br> */}\n                          <strong> Akshara </strong>\n                          has\n                          {interestSent?.accepted === \"accepted\"\n                            ? \" accepted\"\n                            : \" declined\"}{\" \"}\n                          <strong>Your </strong>\n                          request\n                        </div>\n                      )}\n                    </>\n                  ) : (\n                    <div></div>\n                  )}\n                </Paper>\n              </div>\n            </div>\n          </div>\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h3\">Profile of {profilee?.name}</Typography>\n\n          <Card className={classes.listgroup}>\n            <Typography variant=\"h5\" className={classes.subheading}>\n              Basic Details\n            </Typography>\n            {/* {console.log()} */}\n            <ul className={classes.listdesc}>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>NAME</strong>\n                </span>\n                <span className={classes.rightSidedesc}>{profilee?.name}</span>\n              </li>{\" \"}\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>AGE</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {/* {getAge(profilee.birthdate)} Years */}\n                  {moment(profilee?.birthdate?.toDate(), \"YYYYMMDD\")\n                    .fromNow()\n                    .replace(\"ago\", \"\")}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>HEIGHT</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee?.height}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Profile Created by</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee?.createdby}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Current Location</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee.residingcity},{profilee.residingstate},\n                  {profilee.residingcountry}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Marital Status</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee.maritalstatus}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Mother Tongue</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee.mothertongue}\n                </span>\n              </li>\n            </ul>\n          </Card>\n\n          <Card className={classes.listgroup}>\n            <Typography variant=\"h5\">Religion & Horoscope Details</Typography>\n\n            <ul className={classes.listdesc}>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Caste</strong>\n                </span>\n                <span className={classes.rightSidedesc}>{profilee.caste}</span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Sub Caste/Matha</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee.subcaste}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Gothra</strong>\n                </span>\n                <span className={classes.rightSidedesc}>{profilee.gothra}</span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Raashi</strong>\n                </span>\n                <span className={classes.rightSidedesc}>{profilee.raashi}</span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Nakshatra</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee.birthstar}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Date of Birth</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {moment(profilee.birthdate?.toDate()).format(\"ll\")}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Place of Birth</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee.birthcity},{profilee.birthstate},\n                  {profilee.birthcountry}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Time of Birth</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {/* {new Intl.DateTimeFormat(\"en-US\", {\n                                        year: \"numeric\",\n                                        month: \"2-digit\",\n                                        day: \"2-digit\",\n                                    }).format(\n                                        profilee.birthtime?.toDate().getTime()\n                                    )} */}\n                  {new Date(\n                    profilee.birthtime?.toDate().getTime()\n                  ).toLocaleTimeString()}\n                </span>\n              </li>\n            </ul>\n          </Card>\n\n          <Card className={classes.listgroup}>\n            <Typography variant=\"h5\">Professional Details</Typography>\n\n            <ul className={classes.listdesc}>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Highest Education</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee.education}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Employment</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee.employment}\n                </span>\n              </li>\n              {profilee.employment !== \"Not Working\" ? (\n                <>\n                  <li className={classes.listdescli}>\n                    <span className={classes.leftSideHead}>\n                      <strong>Company Name</strong>\n                    </span>\n                    <span className={classes.rightSidedesc}>\n                      {profilee.companyname}\n                    </span>\n                  </li>\n                  <li className={classes.listdescli}>\n                    <span className={classes.leftSideHead}>\n                      <strong>Job nature</strong>\n                    </span>\n                    <span className={classes.rightSidedesc}>\n                      {profilee.jobnature}\n                    </span>\n                  </li>\n                  <li className={classes.listdescli}>\n                    <span className={classes.leftSideHead}>\n                      <strong>Annual Income</strong>\n                    </span>\n                    <span className={classes.rightSidedesc}>\n                      {profilee.income} {profilee.Currency?.symbol}{\" \"}\n                      {profilee.Currency?.cc}\n                    </span>\n                  </li>\n                </>\n              ) : (\n                \"\"\n              )}\n            </ul>\n          </Card>\n          <Card className={classes.listgroup}>\n            <Typography variant=\"h5\">Family Details</Typography>\n            <ul className={classes.listdesc}>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Family Values</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee.familyvalues}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Family Type</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee.familytype}\n                </span>\n              </li>\n              <li className={classes.listdescli}>\n                <span className={classes.leftSideHead}>\n                  <strong>Family Status</strong>\n                </span>\n                <span className={classes.rightSidedesc}>\n                  {profilee.familystatus}\n                </span>\n              </li>\n            </ul>\n          </Card>\n\n          <Card className={classes.listgroup}>\n            <Typography variant=\"h5\">Partner Preferences</Typography>\n            {/* {loggedUsersData.partnerpreferencesflag ? ( */}\n            <ListWithLoading\n              isLoading={loadingpartnerPref}\n              loggedUsersData={loggedUsersData}\n              profilee={profilee}\n            />\n            {/* ) : (\n              \"\"\n            )} */}\n            {/* {Object.keys(loggedUsersData).length &&\n                        Object.keys(profilee).length ? (\n                            <Profilepartnerpreference\n                                loggedUsersData={loggedUsersData}\n                                profilee={profilee}\n                            />\n                        ) : (\n                            <div className={classes.root}>\n                                <Skeleton />\n                                <Skeleton animation={false} />\n                                <Skeleton animation=\"wave\" />\n                            </div>\n                        )} */}\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Profile;\n","import {\n  Avatar,\n  Button,\n  Link,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Grid,\n  IconButton,\n  Tooltip,\n  Typography\n} from \"@material-ui/core\";\nimport { AppBar, Box, Tab, Tabs } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CallReceivedIcon from \"@material-ui/icons/CallReceived\";\nimport CallMadeIcon from \"@material-ui/icons/CallMade\";\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport { db } from \"../app/firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport { red } from \"@material-ui/core/colors\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    height: \"100%\"\n  },\n  tabbutton: {\n    \"& span\": {\n      flexDirection: \"row\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      \"& svg\": {\n        marginBottom: \"0 !important\"\n      }\n    }\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  },\n  viewButton: {\n    marginTop: \"15px\"\n  },\n  education: {\n    wordBreak: \"break-word\",\n    display: \"flex\"\n  },\n  card: {\n    height: \"100%\"\n  },\n  cardfooter: {\n    justifyContent: \"flex-end\"\n  },\n  decline: {\n    marginLeft: \"15px\"\n  },\n  infoiconedu: {\n    width: \"18px\",\n    height: \"18px\",\n    cursor: \"pointer\",\n    marginLeft: \"3px\"\n  },\n  cardheader: {\n    \"& div span\": {\n      fontSize: \"1.5rem\"\n    }\n  }\n}));\nfunction Requests() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  //current user\n  const userDetails = useSelector(selectUser);\n  const [loggedinUser, setloggedinUser] = useState(userDetails);\n  useEffect(() => {\n    setloggedinUser(userDetails);\n  }, loggedinUser);\n  let loggedinuserEmail = loggedinUser.userData.email;\n  const [requests, setrequests] = useState();\n  const [sentRequests, setsentRequests] = useState();\n\n  //settting received requests\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"interestsreceived\")\n      .onSnapshot((snapshot) =>\n        setrequests(\n          snapshot.docs.map((doc) => ({\n            data: doc.data()\n          }))\n        )\n      );\n  }, []);\n\n  //setting sent requests\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"interestssent\")\n      .onSnapshot((snapshot) =>\n        setsentRequests(\n          snapshot.docs.map((doc) => ({\n            data: doc.data()\n          }))\n        )\n      );\n  }, []);\n  const history = useHistory();\n  const gotoProfile = (uid) => {\n    history.push(\"/ProfileN\", { params: { uid } });\n  };\n  const getAge = (dateString) => {\n    // getAge(dateString) {\n    var today = new Date();\n    var birthDate = new Date(dateString);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  };\n  console.log(requests);\n  const acceptRequest = (requestEmail) => {\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"interestsreceived\")\n      .doc(requestEmail)\n      .set(\n        {\n          accepted: \"accepted\",\n          read: true\n        },\n        { merge: true }\n      );\n    db.collection(\"users\")\n      .doc(requestEmail)\n      .collection(\"interestssent\")\n      .doc(loggedinuserEmail)\n      .set(\n        {\n          accepted: \"accepted\"\n        },\n        { merge: true }\n      );\n  };\n\n  const declineRequest = (requestEmail) => {\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"interestsreceived\")\n      .doc(requestEmail)\n      .set(\n        {\n          accepted: \"declined\",\n          read: true\n        },\n        { merge: true }\n      );\n    db.collection(\"users\")\n      .doc(requestEmail)\n      .collection(\"interestssent\")\n      .doc(loggedinuserEmail)\n      .set(\n        {\n          accepted: \"declined\"\n        },\n        { merge: true }\n      );\n  };\n  return (\n    <div>\n      <Tabs\n        value={value}\n        onChange={handleChange}\n        aria-label=\"simple tabs example\"\n        indicatorColor=\"primary\"\n      >\n        <Tab\n          className={classes.tabbutton}\n          label=\"Recieved\"\n          icon={<CallReceivedIcon />}\n          {...a11yProps(0)}\n        />\n        <Tab\n          className={classes.tabbutton}\n          label=\"Sent\"\n          icon={<CallMadeIcon />}\n          {...a11yProps(1)}\n        />\n      </Tabs>\n      <TabPanel value={value} index={0}>\n        <Grid container spacing={3}>\n          {requests?.map((request, index) => (\n            <Grid item xs={12} sm={4} lg={3}>\n              <Card className={classes.root}>\n                <CardHeader\n                  className={classes.cardheader}\n                  avatar={\n                    <Avatar\n                      aria-label={request.data.name}\n                      className={classes.avatar}\n                    >\n                      {request.data.name.charAt(0)}\n                    </Avatar>\n                  }\n                  title={request.data.name}\n                  subheader={request.data.residingcity}\n                />\n                <CardMedia\n                  className={classes.media}\n                  image={request.data.dp}\n                  title={request.data.name}\n                />\n                <CardContent>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <div className=\"mat__profiles-ageheight\">\n                      <div className=\"mat__profiles-age\">\n                        <span> Age:</span>\n\n                        <span>\n                          {\n                            (console.log(request.data.dob),\n                            getAge(\n                              new Intl.DateTimeFormat(\"en-US\", {\n                                year: \"numeric\",\n                                month: \"2-digit\",\n                                day: \"2-digit\"\n                              }).format(request.data?.dob?.toDate())\n                            ))\n                          }{\" \"}\n                          Years\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"mat__profiles-nakshatra\">\n                      <span>Nakshatra:</span>\n                      <span>{request.data.star}</span>\n                    </div>\n                    <div className=\"mat__profiles-nakshatra\">\n                      <span>Raashi:</span>\n                      <span>{request.data.raashi}</span>\n                    </div>\n                    <div className=\"mat__profiles-nakshatra\">\n                      <span>Gothra:</span>\n                      <span>{request.data.gothra}</span>\n                    </div>\n                    <div className={classes.education}>\n                      <span>Education:</span>\n\n                      <span>\n                        {/\\(([^)]+)\\)/.exec(request.data.education)[1]}\n                      </span>\n                      <Tooltip\n                        title={request.data.education.replace(\n                          / *\\([^)]*\\) */g,\n                          \"\"\n                        )}\n                      >\n                        <InfoIcon className={classes.infoiconedu} />\n                      </Tooltip>\n                    </div>\n\n                    {/* {new Date(\n                                    request.data.birthdate._seconds * 1000\n                                ).toLocaleDateString(\"en-US\")} */}\n                  </Typography>\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    className={classes.viewButton}\n                    // onClick={() =>\n                    //     gotoProfile(request.data.email)\n                    // }\n                  >\n                    <Link to={`/ProfileN/${btoa(request.data.email)}`}>\n                      View Profile\n                    </Link>\n                    {/* Goto Profile */}\n                  </Button>\n                </CardContent>\n                <CardActions disableSpacing classname={classes.cardfooter}>\n                  {!request.data.accepted ? (\n                    <>\n                      <Button\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={(e) => acceptRequest(request.data.email)}\n                      >\n                        Accept\n                      </Button>\n                      <Button\n                        color=\"primary\"\n                        variant=\"outlined\"\n                        className={classes.decline}\n                        onClick={(e) => declineRequest(request.data.email)}\n                      >\n                        <strong>Decline</strong>\n                      </Button>\n                    </>\n                  ) : (\n                    <div>\n                      You have{\" \"}\n                      {request.data.accepted === \"accepted\"\n                        ? \"accepted\"\n                        : \"declined\"}{\" \"}\n                      the request from {request.data.name}\n                    </div>\n                  )}\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Grid container spacing={3}>\n          {sentRequests?.map((sentRequest, index) => (\n            <Grid item xs={12} sm={4} lg={3}>\n              <Card className={classes.root}>\n                <CardHeader\n                  className={classes.cardheader}\n                  avatar={\n                    <Avatar\n                      aria-label={sentRequest.data.name}\n                      className={classes.avatar}\n                    >\n                      {sentRequest.data.name.charAt(0)}\n                    </Avatar>\n                  }\n                  title={sentRequest.data.name}\n                  subheader={sentRequest.data.residingcity}\n                />\n                <CardMedia\n                  className={classes.media}\n                  image={sentRequest.data.dp}\n                  title={sentRequest.data.name}\n                />\n                <CardContent>\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                    component=\"p\"\n                  >\n                    <div className=\"mat__profiles-ageheight\">\n                      <div className=\"mat__profiles-age\">\n                        <span> Age:</span>\n\n                        <span>\n                          {\n                            (console.log(sentRequest.data.dob),\n                            getAge(\n                              new Intl.DateTimeFormat(\"en-US\", {\n                                year: \"numeric\",\n                                month: \"2-digit\",\n                                day: \"2-digit\"\n                              }).format(sentRequest.data?.dob?.toDate())\n                            ))\n                          }{\" \"}\n                          Years\n                        </span>\n                      </div>\n                    </div>\n                    <div className=\"mat__profiles-nakshatra\">\n                      <span>Nakshatra:</span>\n                      <span>{sentRequest.data.star}</span>\n                    </div>\n                    <div className=\"mat__profiles-nakshatra\">\n                      <span>Raashi:</span>\n                      <span>{sentRequest.data.raashi}</span>\n                    </div>\n                    <div className=\"mat__profiles-nakshatra\">\n                      <span>Gothra:</span>\n                      <span>{sentRequest.data.gothra}</span>\n                    </div>\n                    <div className={classes.education}>\n                      <span>Education:</span>\n                      <span>\n                        {/\\(([^)]+)\\)/.exec(sentRequest.data.education)[1]}\n                      </span>\n                      <Tooltip\n                        title={sentRequest.data.education.replace(\n                          / *\\([^)]*\\) */g,\n                          \"\"\n                        )}\n                      >\n                        <InfoIcon className={classes.infoiconedu} />\n                      </Tooltip>\n                    </div>\n\n                    {/* {new Date(\n                                    sentRequest.data.birthdate._seconds * 1000\n                                ).toLocaleDateString(\"en-US\")} */}\n                  </Typography>\n                  <Button\n                    size=\"small\"\n                    color=\"primary\"\n                    className={classes.viewButton}\n                    // onClick={() =>\n                    //     gotoProfile(sentRequest.data.email)\n                    // }\n                  >\n                    <Link to={`/ProfileN/${btoa(sentRequest.data.email)}`}>\n                      View Profile\n                    </Link>\n                    {/* Goto Profile */}\n                  </Button>\n                </CardContent>\n                <CardActions disableSpacing classname={classes.cardfooter}>\n                  {!sentRequest.data.accepted ? (\n                    <div>\n                      {sentRequest.data.name} has not accepted/declined yor\n                      request yet!\n                    </div>\n                  ) : (\n                    <div>\n                      {sentRequest.data.name} has\n                      {sentRequest.data.accepted === \"accepted\"\n                        ? \" accepted\"\n                        : \" declined\"}{\" \"}\n                      your request.\n                    </div>\n                  )}\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </TabPanel>\n    </div>\n  );\n}\n\nexport default Requests;\n","import {\n  Avatar,\n  Button,\n  Link,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Grid,\n  Snackbar,\n  Tooltip,\n  Typography\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../app/firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport { red } from \"@material-ui/core/colors\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport globalUseStyles from \"./globalstyles\";\nfunction Shortlisted() {\n  const globalClasses = globalUseStyles();\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      height: \"100%\"\n    },\n    header: {\n      width: \"100%\",\n      paddingLeft: \"15px\"\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\" // 16:9\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\"\n    },\n    avatar: {\n      backgroundColor: red[500]\n    },\n    viewButton: {\n      marginTop: \"15px\"\n    },\n    education: {\n      wordBreak: \"break-word\",\n      display: \"flex\"\n    },\n    infoiconedu: {\n      width: \"18px\",\n      height: \"18px\",\n      cursor: \"pointer\",\n      marginLeft: \"3px\"\n    },\n    card: {\n      height: \"100%\"\n    },\n    cardfooter: {\n      // justifyContent: \"flex-end\",\n      marginTop: \"auto\",\n      // justifyContent: \"center\",\n      paddingLeft: \"16px\"\n    },\n    decline: {\n      marginLeft: \"15px\"\n    },\n    cardheader: {\n      \"& div span\": {\n        fontSize: \"1.5rem\"\n      }\n    },\n    cardgrid: {\n      \"& .MuiPaper-root\": {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      }\n    },\n    noshortlist: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    }\n  }));\n\n  const user = firebase.auth().currentUser;\n  const loggedinuserEmail = user?.email;\n  console.log(loggedinuserEmail);\n  // if (user !== null) {\n  //      loggedinuserEmail = user.email;\n  // }\n  const [shortlisted, setshortlisted] = useState([]);\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"shortlisted\")\n      .onSnapshot(\n        (snapshot) =>\n          setshortlisted(\n            snapshot.docs.map((doc) => ({\n              data: doc.data()\n            }))\n          ),\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, [loggedinuserEmail]);\n  console.log(shortlisted);\n  const classes = useStyles();\n  const getAge = (dateString) => {\n    // getAge(dateString) {\n    var today = new Date();\n    var birthDate = new Date(dateString);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  };\n  const history = useHistory();\n  const gotoProfile = (uid) => {\n    history.push(\"/ProfileN\", { params: { uid } });\n  };\n  var userRef = db.collection(\"users\").doc(loggedinuserEmail);\n  const [openSnackbar, setopenSnackbar] = useState(false);\n  const [snackbarmsg, setsnackbarmsg] = useState();\n  const [snackbartype, setsnackbartype] = useState();\n  const removeshortlist = (removershortlistmail) => {\n    userRef.set(\n      {\n        shortlisted: firebase.firestore.FieldValue.arrayRemove(\n          removershortlistmail\n        )\n      },\n      { merge: true }\n    );\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"shortlisted\")\n      .doc(removershortlistmail)\n      .delete()\n      .then(() => {\n        // console.log(\"Document successfully deleted!\");\n        setsnackbarmsg(\"Successfully removed from shortlist\");\n        setsnackbartype(\"error\");\n        setopenSnackbar(true);\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n\n    //removing a array in viewingprofile\n    db.collection(\"users\")\n      .doc(removershortlistmail)\n      .set(\n        {\n          shortlistedme: firebase.firestore.FieldValue.arrayRemove(\n            loggedinuserEmail\n          )\n        },\n        { merge: true }\n      );\n    // removing the logged in  user snippet in viewingprofile\n    db.collection(\"users\")\n      .doc(removershortlistmail)\n      .collection(\"shortlistedme\")\n      .doc(loggedinuserEmail)\n      .delete()\n      .then(() => {\n        console.log(\"Document successfully deleted!\");\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setopenSnackbar(false);\n  };\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n\n  return (\n    <Grid container spacing={3}>\n      <h1 className={classes.header}>Shortlisted Profiles</h1>\n      {shortlisted.length <= 0 ? (\n        <Grid item xs={12} sm={12} lg={12} className={classes.noshortlist}>\n          <h3>You have not shortlisted any Profiles.</h3>\n        </Grid>\n      ) : (\n        \"\"\n      )}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity={snackbartype}>\n          {snackbarmsg}\n        </Alert>\n      </Snackbar>\n\n      {shortlisted?.map((shortlist, index) => (\n        <Grid item xs={12} sm={4} lg={3} className={classes.cardgrid}>\n          <Card className={classes.customtest}>\n            <CardHeader\n              className={classes.cardheader}\n              avatar={\n                <Avatar\n                  aria-label={shortlist.data.name}\n                  className={classes.avatar}\n                >\n                  {shortlist?.data.name.charAt(0)}\n                </Avatar>\n              }\n              title={shortlist.data.name}\n              subheader={shortlist.data.residingcity}\n            />\n            <CardMedia\n              className={classes.media}\n              image={shortlist.data.dp}\n              title={shortlist.data.name}\n            />\n            <CardContent>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                <div className=\"mat__profiles-ageheight\">\n                  <div className=\"mat__profiles-age\">\n                    <span> Age:</span>\n\n                    <span>\n                      {\n                        (console.log(shortlist.data.dob),\n                        getAge(\n                          new Intl.DateTimeFormat(\"en-US\", {\n                            year: \"numeric\",\n                            month: \"2-digit\",\n                            day: \"2-digit\"\n                          }).format(shortlist.data?.dob?.toDate())\n                        ))\n                      }{\" \"}\n                      Years\n                    </span>\n                  </div>\n                </div>\n                <div className=\"mat__profiles-nakshatra\">\n                  <span>Nakshatra:</span>\n                  <span>{shortlist.data.star}</span>\n                </div>\n                <div className=\"mat__profiles-nakshatra\">\n                  <span>Raashi:</span>\n                  <span>{shortlist.data.raashi}</span>\n                </div>\n                <div className=\"mat__profiles-nakshatra\">\n                  <span>Gothra:</span>\n                  <span>{shortlist.data.gothra}</span>\n                </div>\n                <div className={classes.education}>\n                  <span>Education:</span>\n\n                  <span>{/\\(([^)]+)\\)/.exec(shortlist.data.education)[1]}</span>\n                  <Tooltip\n                    title={shortlist.data.education.replace(\n                      / *\\([^)]*\\) */g,\n                      \"\"\n                    )}\n                  >\n                    <InfoIcon className={classes.infoiconedu} />\n                  </Tooltip>\n                </div>\n\n                {/* {new Date(\n                                    shortlist.data.birthdate._seconds * 1000\n                                ).toLocaleDateString(\"en-US\")} */}\n              </Typography>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                className={classes.viewButton}\n                // onClick={() =>\n                //     gotoProfile(shortlist.data.email)\n                // }\n              >\n                <a\n                  className={globalClasses.viewLink}\n                  href={`/ProfileN/${btoa(shortlist.data.email)}`}\n                >\n                  View Profile\n                </a>\n              </Button>\n            </CardContent>\n            <CardActions disableSpacing className={classes.cardfooter}>\n              {/* <Button\n                                    onClick={() =>\n                                        removeshortlist(shortlist.data.email)\n                                    }\n                                >\n                                    Remove from Shortlist\n                                </Button> */}\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"small\"\n                className={classes.actionButtons}\n                endIcon={<BookmarkIcon>send</BookmarkIcon>}\n                onClick={() => removeshortlist(shortlist.data.email)}\n              >\n                Remove from Shortlist\n              </Button>\n            </CardActions>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default Shortlisted;\n","import {\n  Avatar,\n  Button,\n  Link,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Grid,\n  Snackbar,\n  Tooltip,\n  Typography\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../app/firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport { red } from \"@material-ui/core/colors\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport globalUseStyles from \"./globalstyles\";\nfunction Shortlistedme() {\n  const globalClasses = globalUseStyles();\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      height: \"100%\"\n    },\n    header: {\n      width: \"100%\",\n      paddingLeft: \"15px\"\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\" // 16:9\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\"\n    },\n    avatar: {\n      backgroundColor: red[500]\n    },\n    viewButton: {\n      marginTop: \"15px\"\n    },\n    education: {\n      wordBreak: \"break-word\",\n      display: \"flex\"\n    },\n    infoiconedu: {\n      width: \"18px\",\n      height: \"18px\",\n      cursor: \"pointer\",\n      marginLeft: \"3px\"\n    },\n    card: {\n      height: \"100%\"\n    },\n    cardfooter: {\n      justifyContent: \"flex-end\",\n      marginTop: \"auto\",\n      justifyContent: \"center\"\n    },\n    decline: {\n      marginLeft: \"15px\"\n    },\n    cardheader: {\n      \"& div span\": {\n        fontSize: \"1.5rem\"\n      }\n    },\n    cardgrid: {\n      \"& .MuiPaper-root\": {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      }\n    },\n    noshortlist: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    }\n  }));\n\n  const user = firebase.auth().currentUser;\n  const loggedinuserEmail = user?.email;\n  console.log(loggedinuserEmail);\n  // if (user !== null) {\n  //      loggedinuserEmail = user.email;\n  // }\n  const [shortlisted, setshortlisted] = useState([]);\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"shortlistedme\")\n      .onSnapshot(\n        (snapshot) =>\n          setshortlisted(\n            snapshot.docs.map((doc) => ({\n              data: doc.data()\n            }))\n          ),\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, [loggedinuserEmail]);\n  console.log(shortlisted);\n  const classes = useStyles();\n  const getAge = (dateString) => {\n    // getAge(dateString) {\n    var today = new Date();\n    var birthDate = new Date(dateString);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  };\n  const history = useHistory();\n  const gotoProfile = (uid) => {\n    history.push(\"/ProfileN\", { params: { uid } });\n  };\n  var userRef = db.collection(\"users\").doc(loggedinuserEmail);\n  const [openSnackbar, setopenSnackbar] = useState(false);\n  const [snackbarmsg, setsnackbarmsg] = useState();\n  const [snackbartype, setsnackbartype] = useState();\n  const removeshortlist = (removershortlistmail) => {\n    userRef.set(\n      {\n        shortlisted: firebase.firestore.FieldValue.arrayRemove(\n          removershortlistmail\n        )\n      },\n      { merge: true }\n    );\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"shortlisted\")\n      .doc(removershortlistmail)\n      .delete()\n      .then(() => {\n        // console.log(\"Document successfully deleted!\");\n        setsnackbarmsg(\"Successfully removed from shortlist\");\n        setsnackbartype(\"error\");\n        setopenSnackbar(true);\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n\n    //removing a array in viewingprofile\n    db.collection(\"users\")\n      .doc(removershortlistmail)\n      .set(\n        {\n          shortlistedme: firebase.firestore.FieldValue.arrayRemove(\n            loggedinuserEmail\n          )\n        },\n        { merge: true }\n      );\n    // removing the logged in  user snippet in viewingprofile\n    db.collection(\"users\")\n      .doc(removershortlistmail)\n      .collection(\"shortlistedme\")\n      .doc(loggedinuserEmail)\n      .delete()\n      .then(() => {\n        console.log(\"Document successfully deleted!\");\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setopenSnackbar(false);\n  };\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n  return (\n    <Grid container spacing={3}>\n      <h1 className={classes.header}>People who Shortlisted Me</h1>\n      {shortlisted.length <= 0 ? (\n        <Grid item xs={12} sm={12} lg={12} className={classes.noshortlist}>\n          <h3>No one has shortlisted you yet.</h3>\n        </Grid>\n      ) : (\n        \"\"\n      )}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity={snackbartype}>\n          {snackbarmsg}\n        </Alert>\n      </Snackbar>\n      {shortlisted?.map((shortlist, index) => (\n        <Grid item xs={12} sm={4} lg={3} className={classes.cardgrid}>\n          <Card className={classes.customtest}>\n            <CardHeader\n              className={classes.cardheader}\n              avatar={\n                <Avatar\n                  aria-label={shortlist.data.name}\n                  className={classes.avatar}\n                >\n                  {shortlist?.data.name.charAt(0)}\n                </Avatar>\n              }\n              title={shortlist.data.name}\n              subheader={shortlist.data.residingcity}\n            />\n            <CardMedia\n              className={classes.media}\n              image={shortlist.data.dp}\n              title={shortlist.data.name}\n            />\n            <CardContent>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                <div className=\"mat__profiles-ageheight\">\n                  <div className=\"mat__profiles-age\">\n                    <span> Age:</span>\n\n                    <span>\n                      {\n                        (console.log(shortlist.data.dob),\n                        getAge(\n                          new Intl.DateTimeFormat(\"en-US\", {\n                            year: \"numeric\",\n                            month: \"2-digit\",\n                            day: \"2-digit\"\n                          }).format(shortlist.data?.dob?.toDate())\n                        ))\n                      }{\" \"}\n                      Years\n                    </span>\n                  </div>\n                </div>\n                <div className=\"mat__profiles-nakshatra\">\n                  <span>Nakshatra:</span>\n                  <span>{shortlist.data.star}</span>\n                </div>\n                <div className=\"mat__profiles-nakshatra\">\n                  <span>Raashi:</span>\n                  <span>{shortlist.data.raashi}</span>\n                </div>\n                <div className=\"mat__profiles-nakshatra\">\n                  <span>Gothra:</span>\n                  <span>{shortlist.data.gothra}</span>\n                </div>\n                <div className={classes.education}>\n                  <span>Education:</span>\n                  <span>{/\\(([^)]+)\\)/.exec(shortlist.data.education)[1]}</span>\n                  <Tooltip\n                    title={shortlist.data.education.replace(\n                      / *\\([^)]*\\) */g,\n                      \"\"\n                    )}\n                  >\n                    <InfoIcon className={classes.infoiconedu} />\n                  </Tooltip>\n                </div>\n\n                {/* {new Date(\n                                    shortlist.data.birthdate._seconds * 1000\n                                ).toLocaleDateString(\"en-US\")} */}\n              </Typography>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                className={classes.viewButton}\n                // onClick={() =>\n                //     gotoProfile(shortlist.data.email)\n                // }\n              >\n                <a\n                  className={globalClasses.viewLink}\n                  href={`/ProfileN/${btoa(shortlist.data.email)}`}\n                >\n                  View Profile\n                </a>\n                {/* Goto Profile */}\n              </Button>\n            </CardContent>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default Shortlistedme;\n","import {\n  Avatar,\n  Button,\n  Card,\n  Link,\n  CardActions,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Chip,\n  Grid,\n  IconButton,\n  Snackbar,\n  Tooltip,\n  Typography\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"../app/firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport { red } from \"@material-ui/core/colors\";\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport moment from \"moment\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../features/userSlice\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport globalUseStyles from \"./globalstyles\";\nfunction Recentlyviewed() {\n  const globalClasses = globalUseStyles();\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      backgroundColor: theme.palette.background.paper,\n      height: \"100%\"\n    },\n    header: {\n      width: \"100%\",\n      paddingLeft: \"15px\"\n    },\n    media: {\n      height: 0,\n      paddingTop: \"56.25%\" // 16:9\n    },\n    expand: {\n      transform: \"rotate(0deg)\",\n      marginLeft: \"auto\",\n      transition: theme.transitions.create(\"transform\", {\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    expandOpen: {\n      transform: \"rotate(180deg)\"\n    },\n    avatar: {\n      backgroundColor: red[500]\n    },\n    viewButton: {\n      marginTop: \"15px\"\n    },\n    viewLink: {\n      color: theme.palette.primary.main\n    },\n    education: {\n      wordBreak: \"break-word\",\n      display: \"flex\"\n    },\n    infoiconedu: {\n      width: \"18px\",\n      height: \"18px\",\n      cursor: \"pointer\",\n      marginLeft: \"3px\"\n    },\n    card: {\n      height: \"100%\"\n    },\n    cardfooter: {\n      // justifyContent: \"center\",\n      marginTop: \"auto\",\n      paddingTop: \"0\",\n      margin: \"0 -5px\",\n      padding: \"0 16px 8px\",\n      \"& button\": {\n        margin: \"0 5px\"\n      }\n    },\n    decline: {\n      marginLeft: \"15px\"\n    },\n    cardheader: {\n      \"& div span\": {\n        fontSize: \"1.5rem\"\n      }\n    },\n    cardgrid: {\n      \"& .MuiPaper-root\": {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\"\n      }\n    },\n    noshortlist: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    viewed: {\n      marginTop: \"16px\"\n    },\n    sendshortbuttons: {\n      \"& .MuiButton-iconSizeSmall\": {\n        marginRight: 0\n      }\n    }\n  }));\n\n  const userlogged = firebase.auth().currentUser;\n  const loggedinuserEmail = userlogged?.email;\n  console.log(loggedinuserEmail);\n  // if (user !== null) {\n  //      loggedinuserEmail = user.email;\n  // }\n  const [shortlisted, setshortlisted] = useState([]);\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"recentlyviewed\")\n      .onSnapshot(\n        (snapshot) =>\n          setshortlisted(\n            snapshot.docs.map((doc) => ({\n              data: doc.data()\n            }))\n          ),\n        (error) => {\n          console.log(error);\n        }\n      );\n  }, [loggedinuserEmail]);\n  console.log(shortlisted);\n  const classes = useStyles();\n  const getAge = (dateString) => {\n    // getAge(dateString) {\n    var today = new Date();\n    var birthDate = new Date(dateString);\n    var age = today.getFullYear() - birthDate.getFullYear();\n    var m = today.getMonth() - birthDate.getMonth();\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n      age--;\n    }\n    return age;\n  };\n  const history = useHistory();\n  const gotoProfile = (uid) => {\n    history.push(\"/ProfileN\", { params: { uid } });\n  };\n  var userRef = db.collection(\"users\").doc(loggedinuserEmail);\n  const [openSnackbar, setopenSnackbar] = useState(false);\n  const [snackbarmsg, setsnackbarmsg] = useState();\n  const [snackbartype, setsnackbartype] = useState();\n  const removeshortlist = (removershortlistmail) => {\n    userRef.set(\n      {\n        shortlisted: firebase.firestore.FieldValue.arrayRemove(\n          removershortlistmail\n        )\n      },\n      { merge: true }\n    );\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"shortlisted\")\n      .doc(removershortlistmail)\n      .delete()\n      .then(() => {\n        // console.log(\"Document successfully deleted!\");\n        setsnackbarmsg(\"Successfully removed from shortlist\");\n        setsnackbartype(\"error\");\n        setopenSnackbar(true);\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n\n    //removing a array in viewingprofile\n    db.collection(\"users\")\n      .doc(removershortlistmail)\n      .set(\n        {\n          shortlistedme: firebase.firestore.FieldValue.arrayRemove(\n            loggedinuserEmail\n          )\n        },\n        { merge: true }\n      );\n    // removing the logged in  user snippet in viewingprofile\n    db.collection(\"users\")\n      .doc(removershortlistmail)\n      .collection(\"shortlistedme\")\n      .doc(loggedinuserEmail)\n      .delete()\n      .then(() => {\n        console.log(\"Document successfully deleted!\");\n      })\n      .catch((error) => {\n        console.error(\"Error removing document: \", error);\n      });\n  };\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setopenSnackbar(false);\n  };\n\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n  }\n  const userDetails = useSelector(selectUser);\n  const [user, setUser] = useState(userDetails);\n  useEffect(() => {\n    setUser(userDetails);\n  }, [userDetails]);\n  useEffect(() => {\n    console.log(user);\n  }, [user]);\n\n  const [loggedinprofile, setloggedinprofile] = useState([]);\n  console.log(loggedinprofile);\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .onSnapshot((doc) => {\n        console.log(\"Current user data:\", doc.data());\n        setloggedinprofile(doc.data());\n      });\n  }, []);\n\n  const sendInterest = (intersetedProfile) => {\n    alert();\n    //adding a array of in logged in user\n    userRef.set(\n      {\n        interestssent: firebase.firestore.FieldValue.arrayUnion(\n          intersetedProfile.data.email\n        )\n      },\n      { merge: true }\n    );\n    // adding the interested user snippet in logged in user(myintersets(loggedin user) snippet)\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"interestssent\")\n      .doc(intersetedProfile.data.email)\n      .set({\n        email: intersetedProfile?.data?.email,\n        name: intersetedProfile?.data?.name,\n        education: intersetedProfile?.data?.education,\n        star: intersetedProfile?.data?.star,\n        raashi: intersetedProfile?.data?.raashi,\n        gothra: intersetedProfile?.data?.gothra,\n        dob: intersetedProfile?.data?.dob,\n        dp: intersetedProfile?.data?.dp,\n        accepted: false,\n        read: false\n      });\n\n    //adding a array in viewingprofile (shortlisted me array)\n    db.collection(\"users\")\n      .doc(intersetedProfile?.data?.email)\n      .set(\n        {\n          interestsreceived: firebase.firestore.FieldValue.arrayUnion(\n            loggedinuserEmail\n          )\n        },\n        { merge: true }\n      );\n\n    // adding the logged in  user snippet in viewingprofile(shortlisted me snippet)\n    db.collection(\"users\")\n      .doc(intersetedProfile?.data?.email)\n      .collection(\"interestsreceived\")\n      .doc(loggedinuserEmail)\n      .set({\n        email: loggedinprofile.email,\n        name: loggedinprofile.name,\n        education: loggedinprofile.education,\n        star: loggedinprofile.birthstar,\n        raashi: loggedinprofile.raashi,\n        gothra: loggedinprofile.gothra,\n        dob: loggedinprofile.birthdate,\n        dp: loggedinprofile.profilepic,\n        accepted: false,\n        read: false\n      })\n      .then(() => {\n        // console.log(\"Document successfully deleted!\");\n        setsnackbarmsg(\n          `Successfully sent interest to ${intersetedProfile?.data?.name}`\n        );\n        setsnackbartype(\"success\");\n        setopenSnackbar(true);\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  const [interestSent, setinterestSent] = useState();\n  const [interestReceived, setinterestReceived] = useState();\n\n  // useEffect(() => {\n  //     db.collection(\"users\")\n  //         .doc(loggedinuserEmail)\n  //         .collection(\"interestssent\")\n  //         .doc(userid)\n  //         .onSnapshot((doc) => {\n  //             setinterestSent(doc.data());\n  //         });\n\n  //     // }\n  // }, []);\n\n  // useEffect(() => {\n  //     // });\n  //     db.collection(\"users\")\n  //         .doc(email)\n  //         .collection(\"interestsreceived\")\n  //         .doc(userid)\n  //         .onSnapshot(\n  //             (doc) => {\n  //                 console.log(doc.data());\n  //                 setinterestReceived(doc.data());\n  //             },\n  //             (error) => {\n  //                 console.log(error);\n  //             }\n  //         );\n\n  //     // }\n  //     console.log(email);\n  // }, []);\n  const shortlistrr = ([shortlist], e) => {\n    console.log(shortlisted);\n    console.log(shortlist.data.star);\n    console.log(\n      user?.userData?.name,\n      user?.userData?.education,\n      user?.userData?.email,\n      user?.userData?.birthstar,\n      user?.userData?.raashi,\n      user?.userData?.gothra,\n      user?.userData?.birthdate,\n      user?.userData?.profilepic\n    );\n    //adding a array in logged in user(myshortlist(loggedin user) array)\n    db.collection(\"users\")\n      .doc(`${loggedinuserEmail}`)\n      .set(\n        {\n          shortlisted: firebase.firestore.FieldValue.arrayUnion(\n            shortlist.data.email\n          )\n        },\n        { merge: true }\n      );\n\n    // adding the shortlisted user snippet in logged in user(myshortlist(loggedin user) snippet)\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .collection(\"shortlisted\")\n      .doc(shortlist.data.email)\n      .set({\n        email: shortlist?.data?.email,\n        name: shortlist?.data?.name,\n        education: shortlist?.data?.education,\n        star: shortlist?.data?.star,\n        raashi: shortlist?.data?.raashi,\n        gothra: shortlist?.data?.gothra,\n        dob: shortlist?.data?.dob,\n        dp: shortlist?.data?.dp\n      });\n\n    //adding a array in viewingprofile (shortlisted me array)\n    db.collection(\"users\")\n      .doc(shortlist.data.email)\n      .set(\n        {\n          shortlistedme: firebase.firestore.FieldValue.arrayUnion(\n            loggedinuserEmail\n          )\n        },\n        { merge: true }\n      );\n\n    // adding the logged in  user snippet in viewingprofile(shortlisted me snippet)\n\n    db.collection(\"users\")\n      .doc(shortlist.data.email)\n      .collection(\"shortlistedme\")\n      .doc(loggedinuserEmail)\n      .set({\n        email: loggedinprofile.email,\n        name: loggedinprofile.name,\n        education: loggedinprofile.education,\n        star: loggedinprofile.birthstar,\n        raashi: loggedinprofile.raashi,\n        gothra: loggedinprofile.gothra,\n        dob: loggedinprofile.birthdate,\n        dp: loggedinprofile.profilepic\n      })\n      .then(() => {\n        // console.log(\"Document successfully deleted!\");\n        setsnackbarmsg(\"Successfully added to shortlist\");\n        setsnackbartype(\"success\");\n        setopenSnackbar(true);\n      })\n      .catch((error) => {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n  return (\n    <Grid container spacing={3}>\n      <h1 className={classes.header}>Recently Viewed Profiles</h1>\n      {shortlisted.length <= 0 ? (\n        <Grid item xs={12} sm={12} lg={12} className={classes.noshortlist}>\n          <h3>You have not shortlisted any Profiles.</h3>\n        </Grid>\n      ) : (\n        \"\"\n      )}\n      <Snackbar\n        open={openSnackbar}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert onClose={handleClose} severity={snackbartype}>\n          {snackbarmsg}\n        </Alert>\n      </Snackbar>\n\n      {shortlisted?.map((shortlist, index) => (\n        <Grid item xs={12} sm={4} lg={3} className={classes.cardgrid}>\n          <Card className={classes.customtest}>\n            <CardHeader\n              className={classes.cardheader}\n              avatar={\n                <Avatar\n                  aria-label={shortlist.data.name}\n                  className={classes.avatar}\n                >\n                  {shortlist?.data.name.charAt(0)}\n                </Avatar>\n              }\n              title={shortlist.data.name}\n              subheader={shortlist.data.residingcity}\n            />\n            <CardMedia\n              className={classes.media}\n              image={shortlist.data.dp}\n              title={shortlist.data.name}\n            />\n            <CardContent>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                <div className=\"mat__profiles-ageheight\">\n                  <div className=\"mat__profiles-age\">\n                    <span> Age:</span>\n\n                    <span>\n                      {\n                        (console.log(shortlist.data.dob),\n                        getAge(\n                          new Intl.DateTimeFormat(\"en-US\", {\n                            year: \"numeric\",\n                            month: \"2-digit\",\n                            day: \"2-digit\"\n                          }).format(shortlist.data?.dob?.toDate())\n                        ))\n                      }{\" \"}\n                      Years\n                    </span>\n                  </div>\n                </div>\n                <div className=\"mat__profiles-nakshatra\">\n                  <span>Nakshatra:</span>\n                  <span>{shortlist.data.star}</span>\n                </div>\n                <div className=\"mat__profiles-nakshatra\">\n                  <span>Raashi:</span>\n                  <span>{shortlist.data.raashi}</span>\n                </div>\n                <div className=\"mat__profiles-nakshatra\">\n                  <span>Gothra:</span>\n                  <span>{shortlist.data.gothra}</span>\n                </div>\n                <div className={classes.education}>\n                  <span>Education:</span>\n                  <span>{/\\(([^)]+)\\)/.exec(shortlist.data.education)[1]}</span>\n                  <Tooltip\n                    title={shortlist.data.education.replace(\n                      / *\\([^)]*\\) */g,\n                      \"\"\n                    )}\n                  >\n                    <InfoIcon className={classes.infoiconedu} />\n                  </Tooltip>\n                </div>\n\n                <Chip\n                  icon={<VisibilityIcon />}\n                  label={\n                    `Last Viewed ` +\n                    moment(shortlist.data.viewedon.toDate()).fromNow()\n                  }\n                  clickable\n                  color=\"primary\"\n                  variant=\"outlined\"\n                  className={classes.viewed}\n                />\n\n                {/* {new Date(\n                                    shortlist.data.birthdate._seconds * 1000\n                                ).toLocaleDateString(\"en-US\")} */}\n              </Typography>\n              <Button\n                size=\"small\"\n                color=\"primary\"\n                className={classes.viewButton}\n                onClick={() => gotoProfile(shortlist.data.email)}\n              >\n                <a\n                  className={globalClasses.viewLink}\n                  href={`/ProfileN/${btoa(shortlist.data.email)}`}\n                >\n                  View Profile\n                </a>\n                {/* Goto Profile */}\n              </Button>\n            </CardContent>\n            <CardActions disableSpacing className={classes.cardfooter}>\n              {loggedinprofile?.shortlisted?.indexOf(shortlist.data.email) >\n              -1 ? (\n                <Button\n                  title=\"Shortlisted\"\n                  startIcon={<BookmarkIcon />}\n                  size=\"small\"\n                  className={classes.sendshortbuttons}\n                  variant=\"outlined\"\n                  onClick={(e) => removeshortlist(shortlist.data.email)}\n                >\n                  Shortlisted\n                </Button>\n              ) : (\n                <Button\n                  title=\"Shortlisted\"\n                  startIcon={<BookmarkBorderIcon />}\n                  size=\"small\"\n                  className={classes.sendshortbuttons}\n                  variant=\"outlined\"\n                  onClick={(e) => shortlistrr([shortlist], e)}\n                >\n                  Shortlist\n                </Button>\n              )}\n              {loggedinprofile?.interestssent?.indexOf(shortlist.data.email) >\n              -1 ? (\n                <Button\n                  title=\"Shortlisted\"\n                  startIcon={<BookmarkIcon />}\n                  size=\"small\"\n                  className={classes.sendshortbuttons}\n                  variant=\"outlined\"\n                >\n                  SENT INTEREST\n                </Button>\n              ) : (\n                <Button\n                  title=\"Shortlisted\"\n                  startIcon={<BookmarkBorderIcon />}\n                  size=\"small\"\n                  className={classes.sendshortbuttons}\n                  variant=\"outlined\"\n                  onClick={() => sendInterest(shortlist)}\n                >\n                  SEND INTEREST\n                </Button>\n              )}\n            </CardActions>\n          </Card>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default Recentlyviewed;\n","import DateFnsUtils from \"@date-io/date-fns\";\nimport {\n    Button,\n    FormControl,\n    FormLabel,\n    Grid,\n    makeStyles,\n    TextField,\n    Typography,\n    IconButton,\n    Link,\n} from \"@material-ui/core\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n    KeyboardDatePicker,\n    KeyboardTimePicker,\n    MuiPickersUtilsProvider,\n} from \"@material-ui/pickers\";\nimport moment from \"moment\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport { db, storage } from \"../../app/firebase\";\nimport { selectUser } from \"../../features/userSlice\";\nimport firebase from \"firebase\";\n\nimport {\n    birthStar,\n    Raashi,\n    countryList,\n    statesList,\n    Gothra,\n} from \"../Dataforsignup\";\nconst useStyles = makeStyles((theme) => ({\n    updatebutton: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        marginLeft: \"auto\",\n    },\n}));\nfunction Horoscopeedit(props) {\n    const classes = useStyles();\n    const {\n        control,\n        methods,\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    console.log(props.loggedinprofile);\n    const [country, setCountry] = useState(\"\");\n\n    const [state, setState] = useState(\"\");\n    const [city, setCity] = useState(\"\");\n    const filepickerRef = useRef(null);\n    useEffect(() => {\n        let statesC = [];\n        if (props.loggedinprofile.birthcountry === \"India\") {\n            statesList.states.map((state) => {\n                statesC.push(state.name);\n            });\n            setState(statesC);\n        }\n    }, [props.loggedinprofile.birthcountry]);\n    useEffect(() => {\n        let states = statesList.states;\n        let districts = [];\n        states.map((state) => {\n            // console.log(state.name);\n            // console.log(state.name);\n            if (state.name === props.loggedinprofile.birthstate) {\n                // console.log(state.districts);\n                // setCity(state.districts.name);\n                // console.log(state.districts);\n                state.districts.map((district) => {\n                    districts.push(district.name);\n                });\n                // console.log(districts);\n                setCity(districts);\n            }\n        });\n    }, [props.loggedinprofile.birthstate]);\n    const handleCountryChange = (e) => {\n        console.log(e);\n        let statesC = [];\n        if (e === \"India\") {\n            statesList.states.map((state) => {\n                statesC.push(state.name);\n                console.log(state.name);\n            });\n            setState(statesC);\n            console.log(statesC);\n            setCountry(\"India\");\n        } else {\n            setCountry(\"\");\n            setState(\"\");\n            setCity(\"\");\n        }\n\n        console.log(state);\n    };\n\n    const handleStateChange = (e) => {\n        console.log(e);\n        let selectedState = e;\n        console.log(selectedState);\n        let states = statesList.states;\n        let districts = [];\n        states.map((state) => {\n            // console.log(state.name);\n            if (state.name === selectedState) {\n                console.log(state.districts);\n                // setCity(state.districts.name);\n                // console.log(state.districts);\n                state.districts.map((district) => {\n                    districts.push(district.name);\n                });\n                console.log(districts);\n                setCity(districts);\n            } else {\n                console.log(\"else\");\n            }\n        });\n    };\n    const userDetails = useSelector(selectUser);\n    console.log(userDetails);\n    const [user, setUser] = useState(userDetails);\n    const [horoscopepath, setHoroscopepath] = useState();\n    const addImage = (e, imageType) => {\n        const reader = new FileReader();\n        if (e.target.files[0]) {\n            reader.readAsDataURL(e.target.files[0]);\n        }\n        reader.onload = (readerEvent) => {\n            // console.log(readerEvent.target.result);\n            if (readerEvent.target.result) {\n                const uploadTaskPic = storage\n                    .ref(`profiepics/${user.userData.email + imageType}`)\n                    .putString(readerEvent.target.result, \"data_url\");\n                // removeImage1();\n                uploadTaskPic.on(\n                    \"state_change\",\n                    null,\n                    (error) => console.log(error),\n\n                    () => {\n                        // var progress =\n                        //     (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                        // console.log(\"Upload is \" + progress + \"% done\");\n                        storage\n                            .ref(\"profiepics\")\n                            .child(user.userData.email + \"horoscope\")\n                            .getDownloadURL()\n                            .then((url) => {\n                                // firebase.auth().currentUser.updateProfile({\n                                //     photoURL: url,\n                                // });\n                                setHoroscopepath(url);\n                                console.log(url);\n                                db.collection(\"users\")\n                                    .doc(user.userData.email)\n                                    .set(\n                                        {\n                                            horoscopeurl: url,\n                                        },\n                                        { merge: true }\n                                    );\n                            });\n                    }\n                );\n            }\n        };\n    };\n\n    const onDownload = (horoscopeurl) => {\n        // var a = document.createElement(\"a\");\n        // a.href = horoscopeurl;\n        // a.setAttribute(\"download\", \"horoscope\" + props.loggedinprofile.name);\n        // a.click();\n        window.location.href = horoscopeurl;\n    };\n    const onSubmit = (data) => {\n        db.collection(\"users\")\n            .doc(props.loggedinprofile.email)\n            .set(\n                {\n                    birthstar: data.birthstar,\n                    raashi: data.raashi,\n                    gothra: data.gothra,\n                    birthcountry: data.birthcountry,\n                    birthstate: data.birthstate,\n                    birthcity: data.birthcity,\n                    birthdate: data.birthdate,\n                    birthtime: data.birthtime,\n                },\n                { merge: true }\n            )\n            .catch((error) => alert(error.message));\n    };\n    return (\n        <div>\n            <Typography variant=\"h4\">Horoscope Details</Typography>\n            <FormProvider {...methods}>\n                {Object.keys(props.loggedinprofile).length !== 0 ? (\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <Grid container>\n                            <Grid item xs={12} md={6} className=\"mat__caste\">\n                                <FormControl\n                                    component=\"fieldset\"\n                                    className=\"mat__textbox\"\n                                >\n                                    <FormLabel component=\"legend\">\n                                        D.O.B{\" \"}\n                                    </FormLabel>\n                                    <MuiPickersUtilsProvider\n                                        utils={DateFnsUtils}\n                                    >\n                                        <Controller\n                                            name=\"birthdate\"\n                                            control={control}\n                                            defaultValue={props?.loggedinprofile?.birthdate.toDate()}\n                                            // defaultValue=\"02-06-1990\"\n                                            render={({\n                                                field: { ref, ...rest },\n                                            }) => (\n                                                <KeyboardDatePicker\n                                                    margin=\"normal\"\n                                                    id=\"date-picker-dialog\"\n                                                    // label=\"Date Of Birth\"\n                                                    format=\"MM/dd/yyyy\"\n                                                    fullWidth\n                                                    value={\n                                                        props?.loggedinprofile?.birthdate.toDate()\n                                                            .toLocaleDateString\n                                                    }\n                                                    // value={moment(\n                                                    //     props.loggedinprofile?.birthdate\n                                                    //         ?.toDate()\n                                                    //         .toLocaleDateString()\n                                                    // )}\n                                                    minDate={moment().subtract(\n                                                        500,\n                                                        \"years\"\n                                                    )}\n                                                    maxDate={moment().subtract(\n                                                        18,\n                                                        \"years\"\n                                                    )}\n                                                    KeyboardButtonProps={{\n                                                        \"aria-label\":\n                                                            \"change date\",\n                                                    }}\n                                                    error={Boolean(\n                                                        errors.birthdate\n                                                    )}\n                                                    helperText={\n                                                        errors.birthdate\n                                                            ?.message\n                                                    }\n                                                    {...rest}\n                                                />\n                                            )}\n                                            rules={{\n                                                required: \"D.O.B is required.\",\n                                            }}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} md={6} className=\"mat__subcaste\">\n                                <FormControl\n                                    component=\"fieldset\"\n                                    className=\"mat__textbox\"\n                                >\n                                    <FormLabel component=\"legend\">\n                                        Time Of Birth\n                                    </FormLabel>\n                                    <MuiPickersUtilsProvider\n                                        utils={DateFnsUtils}\n                                    >\n                                        <Controller\n                                            name=\"birthtime\"\n                                            control={control}\n                                            defaultValue={props.loggedinprofile?.birthtime?.toDate()}\n                                            render={({\n                                                field: { ref, ...rest },\n                                            }) => (\n                                                <KeyboardTimePicker\n                                                    margin=\"normal\"\n                                                    id=\"time-picker\"\n                                                    placeholder=\"08:00 AM\"\n                                                    mask=\"__:__ _M\"\n                                                    value={props.loggedinprofile?.birthtime\n                                                        ?.toDate()\n                                                        .toLocaleTimeString()}\n                                                    // onChange={\n                                                    //     handleDateChange\n                                                    // }\n                                                    // value={null}\n                                                    KeyboardButtonProps={{\n                                                        \"aria-label\":\n                                                            \"change time\",\n                                                    }}\n                                                    error={Boolean(\n                                                        errors.birthdate\n                                                    )}\n                                                    helperText={\n                                                        errors.birthdate\n                                                            ?.message\n                                                    }\n                                                    {...rest}\n                                                />\n                                            )}\n                                            rules={{\n                                                required:\n                                                    \"Time of Birth is required.\",\n                                            }}\n                                        />\n                                    </MuiPickersUtilsProvider>\n                                </FormControl>\n                            </Grid>\n                        </Grid>\n                        <Controller\n                            defaultValue={props.loggedinprofile?.gothra}\n                            render={({ field, fieldState: { error } }) => (\n                                <Autocomplete\n                                    {...field}\n                                    options={Gothra ? Gothra : \"\"}\n                                    getOptionLabel={(option) => option}\n                                    defaultValue={props.loggedinprofile?.gothra}\n                                    renderInput={(params) => (\n                                        <TextField\n                                            {...params}\n                                            label=\"Gothra\"\n                                            variant=\"outlined\"\n                                            error={!!error}\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                            className=\"mat__textbox\"\n                                        />\n                                    )}\n                                    onChange={(_, data) => field.onChange(data)}\n                                />\n                            )}\n                            name=\"gothra\"\n                            control={control}\n                            rules={{\n                                required: \"Birth of Country  is required\",\n                            }}\n                        />\n                        <Grid container>\n                            <Grid item xs={12} md={6} className=\"mat__caste\">\n                                <Controller\n                                    defaultValue={\n                                        props.loggedinprofile.birthstar\n                                    }\n                                    render={({\n                                        field,\n                                        fieldState: { error },\n                                    }) => (\n                                        <Autocomplete\n                                            {...field}\n                                            options={birthStar}\n                                            getOptionLabel={(option) => option}\n                                            defaultValue={\n                                                props.loggedinprofile.birthstar\n                                            }\n                                            renderInput={(params) => (\n                                                <TextField\n                                                    {...params}\n                                                    label=\"Birth Star/Nakshatraa\"\n                                                    variant=\"outlined\"\n                                                    error={!!error}\n                                                    helperText={\n                                                        error\n                                                            ? error.message\n                                                            : null\n                                                    }\n                                                    className=\"mat__textbox\"\n                                                />\n                                            )}\n                                            onChange={(_, data) =>\n                                                field.onChange(data)\n                                            }\n                                        />\n                                    )}\n                                    name=\"birthstar\"\n                                    control={control}\n                                    rules={{\n                                        required: \"Birth Star is required\",\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} md={6} className=\"mat__subcaste\">\n                                <Controller\n                                    defaultValue={props.loggedinprofile.raashi}\n                                    render={({\n                                        field,\n                                        fieldState: { error },\n                                    }) => (\n                                        <Autocomplete\n                                            {...field}\n                                            options={Raashi}\n                                            getOptionLabel={(option) => option}\n                                            defaultValue={\n                                                props.loggedinprofile.raashi\n                                            }\n                                            renderInput={(params) => (\n                                                <TextField\n                                                    {...params}\n                                                    label=\"Raashi\"\n                                                    variant=\"outlined\"\n                                                    error={!!error}\n                                                    helperText={\n                                                        error\n                                                            ? error.message\n                                                            : null\n                                                    }\n                                                    className=\"mat__textbox\"\n                                                />\n                                            )}\n                                            onChange={(_, data) =>\n                                                field.onChange(data)\n                                            }\n                                        />\n                                    )}\n                                    name=\"raashi\"\n                                    control={control}\n                                    rules={{\n                                        required: \"Birth Star is required\",\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                        <Controller\n                            defaultValue={props.loggedinprofile?.birthcountry}\n                            render={({ field, fieldState: { error } }) => (\n                                <Autocomplete\n                                    {...field}\n                                    options={countryList ? countryList : \"\"}\n                                    getOptionLabel={(option) => option}\n                                    defaultValue={\n                                        props.loggedinprofile?.birthcountry\n                                    }\n                                    renderInput={(params) => (\n                                        <TextField\n                                            {...params}\n                                            label=\" Country of Birth\"\n                                            variant=\"outlined\"\n                                            error={!!error}\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                            className=\"mat__textbox\"\n                                        />\n                                    )}\n                                    onChange={(_, data) => (\n                                        field.onChange(data),\n                                        handleCountryChange(data)\n                                    )}\n                                />\n                            )}\n                            name=\"birthcountry\"\n                            control={control}\n                            rules={{\n                                required: \"Birth of Country  is required\",\n                            }}\n                        />\n                        {country === \"India\" ||\n                        props.loggedinprofile.birthcountry ? (\n                            <Grid container>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={6}\n                                    className=\"mat__caste\"\n                                >\n                                    <Controller\n                                        defaultValue={\n                                            props.loggedinprofile.birthstate\n                                        }\n                                        render={({\n                                            field,\n                                            fieldState: { error },\n                                        }) => (\n                                            <Autocomplete\n                                                {...field}\n                                                options={state ? state : \"\"}\n                                                getOptionLabel={(option) =>\n                                                    option\n                                                }\n                                                defaultValue={\n                                                    props.loggedinprofile\n                                                        .birthstate\n                                                }\n                                                renderInput={(params) => (\n                                                    <TextField\n                                                        {...params}\n                                                        label=\"State of Birth\"\n                                                        variant=\"outlined\"\n                                                        error={!!error}\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                        className=\"mat__textbox\"\n                                                    />\n                                                )}\n                                                onChange={(_, data) => (\n                                                    field.onChange(data),\n                                                    handleStateChange(data)\n                                                )}\n                                            />\n                                        )}\n                                        name=\"birthstate\"\n                                        control={control}\n                                        rules={{\n                                            required:\n                                                \"Birth of State  is required\",\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={6}\n                                    className=\"mat__subcaste\"\n                                >\n                                    <Controller\n                                        defaultValue={\n                                            props.loggedinprofile.birthcity\n                                        }\n                                        render={({\n                                            field,\n                                            fieldState: { error },\n                                        }) => (\n                                            <Autocomplete\n                                                {...field}\n                                                options={city ? city : \"\"}\n                                                getOptionLabel={(option) =>\n                                                    option\n                                                }\n                                                disabled={\n                                                    !city &&\n                                                    !props.loggedinprofile\n                                                        .birthcity\n                                                }\n                                                defaultValue={\n                                                    props.loggedinprofile\n                                                        .birthcity\n                                                }\n                                                renderInput={(params) => (\n                                                    <TextField\n                                                        {...params}\n                                                        label=\"Birth City\"\n                                                        variant=\"outlined\"\n                                                        error={!!error}\n                                                        helperText={\n                                                            error\n                                                                ? error.message\n                                                                : null\n                                                        }\n                                                        className=\"mat__textbox\"\n                                                    />\n                                                )}\n                                                onChange={(_, data) => (\n                                                    field.onChange(data),\n                                                    handleStateChange(data)\n                                                )}\n                                            />\n                                        )}\n                                        name=\"birthcity\"\n                                        control={control}\n                                        rules={{\n                                            required: \"Birth City  is required\",\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                        ) : (\n                            <Grid container>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={6}\n                                    className=\"mat__caste\"\n                                >\n                                    <Controller\n                                        name=\"birthstate\"\n                                        control={control}\n                                        defaultValue={\n                                            props.loggedinprofile.birthstate\n                                        }\n                                        render={({\n                                            field: { onChange, value },\n                                            fieldState: { error },\n                                        }) => (\n                                            <TextField\n                                                label=\"State of Birth\"\n                                                variant=\"outlined\"\n                                                value={value}\n                                                fullWidth\n                                                onChange={onChange}\n                                                error={!!error}\n                                                className=\"mat__textbox\"\n                                                helperText={\n                                                    error ? error.message : null\n                                                }\n                                            />\n                                        )}\n                                        rules={{\n                                            required: \"Birth State is required\",\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid\n                                    item\n                                    xs={12}\n                                    md={6}\n                                    className=\"mat__subcaste\"\n                                >\n                                    <Controller\n                                        name=\"birthcity\"\n                                        control={control}\n                                        defaultValue={\n                                            props.loggedinprofile.birthcity\n                                        }\n                                        render={({\n                                            field: { onChange, value },\n                                            fieldState: { error },\n                                        }) => (\n                                            <TextField\n                                                label=\"City of Birth\"\n                                                variant=\"outlined\"\n                                                value={value}\n                                                fullWidth\n                                                onChange={onChange}\n                                                error={!!error}\n                                                className=\"mat__textbox\"\n                                                helperText={\n                                                    error ? error.message : null\n                                                }\n                                            />\n                                        )}\n                                        rules={{\n                                            required: \"Birth City is required\",\n                                        }}\n                                    />\n                                </Grid>\n                            </Grid>\n                        )}\n                        <div\n                            className={classes.mat__profilepicupload}\n                            onClick={() => filepickerRef.current.click()}\n                        >\n                            <IconButton\n                                color=\"primary\"\n                                title=\"Upload Horoscope\"\n                                className={classes.mat__horoscopeupload}\n                            >\n                                <input\n                                    type=\"file\"\n                                    hidden\n                                    onChange={(e) => addImage(e, \"horoscope\")}\n                                    ref={filepickerRef}\n                                    className={classes.mat__horoscopeupload}\n                                />\n                                <PhotoCamera />\n                                Upload Horoscope\n                            </IconButton>\n                        </div>\n                        {/* <a href={props.loggedinprofile.horoscopeurl} download>\n                            Download Horoscope\n                        </a> */}\n                        {/* <Button\n                            onClick={() =>\n                                onDownload(props.loggedinprofile.horoscopeurl)\n                            }\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            Download\n                        </Button> */}\n                        <a\n                            href={props.loggedinprofile.horoscopeurl}\n                            className=\"ml-2\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            download\n                        >\n                            Downlaod\n                        </a>\n                        {/* onDownload */}\n                        <Button\n                            color=\"primary\"\n                            justify=\"center\"\n                            variant=\"contained\"\n                            type=\"submit\"\n                            className={classes.updatebutton}\n                        >\n                            Update\n                        </Button>\n                    </form>\n                ) : (\n                    \"\"\n                )}\n            </FormProvider>\n        </div>\n    );\n}\n\nexport default Horoscopeedit;\n","import {\n    Button,\n    FormControl,\n    FormHelperText,\n    FormLabel,\n    Grid,\n    makeStyles,\n    TextField,\n    Typography,\n} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\n\nimport React, { useState } from \"react\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport { db } from \"../../app/firebase\";\nimport { DegreeList, currencyList } from \"../Dataforsignup\";\nconst useStyles = makeStyles((theme) => ({\n    selected: {\n        \"&&\": {\n            backgroundColor: theme.palette.primary.main,\n            color: \"#fff\",\n            // color: theme.palette.primary.light,\n            \"&:hover\": {\n                // background: theme.palette.primary.dark,\n                background: \"#003b32\",\n            },\n        },\n    },\n    defaultbutton: {\n        borderWidth: \" 2px \",\n        borderStyle: \"solid\",\n        color: \"#fff\",\n        borderColor: theme.palette.primary.main,\n        // background: \"#e0f2f1\",\n        borderLeftWidth: \"2.5px !Important\",\n        borderLeftColor: theme.palette.primary.main + \"!important\",\n        color: theme.palette.action.active,\n        \"&:hover\": {\n            background: theme.palette.primary.dark,\n            color: \"#fff\",\n        },\n    },\n    currencyLabel: {\n        marginBottom: \"10px\",\n        marginTop: \"20px\",\n    },\n    updatebutton: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        marginLeft: \"auto\",\n    },\n}));\nfunction Educationedit(props) {\n    const classes = useStyles();\n    const {\n        control,\n        methods,\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n    const [employment, setEmployment] = useState(\"\");\n\n    const handleEmployment = (data) => {\n        console.log(data);\n        setEmployment(data);\n    };\n    const onSubmit = (data) => {\n        db.collection(\"users\")\n            .doc(props.loggedinprofile.email)\n            .set(\n                {\n                    education: data.education,\n                    employment: data.employment ? data.employment : \"\",\n                    Currency: data.Currency ? data.Currency : \"\",\n                    income: data.income ? data.income : \"\",\n                    companyname: data.companyname ? data.companyname : \"\",\n                    jobnature: data.jobnature ? data.jobnature : \"\",\n                },\n                { merge: true }\n            )\n            .catch((error) => alert(error.message));\n    };\n    return (\n        <div>\n            <Typography variant=\"h4\">\n                Education & Professional Details\n            </Typography>\n            <FormProvider {...methods}>\n                {Object.keys(props.loggedinprofile).length !== 0 ? (\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <Controller\n                            defaultValue={props.loggedinprofile.education}\n                            render={({ field, fieldState: { error } }) => (\n                                <Autocomplete\n                                    {...field}\n                                    options={DegreeList}\n                                    getOptionLabel={(option) => option}\n                                    renderInput={(params) => (\n                                        <TextField\n                                            {...params}\n                                            label=\"Education(Highest Degree)\"\n                                            variant=\"outlined\"\n                                            error={!!error}\n                                            helperText={\n                                                error ? error.message : null\n                                            }\n                                            className=\"mat__textbox\"\n                                        />\n                                    )}\n                                    onChange={(_, data) => field.onChange(data)}\n                                />\n                            )}\n                            name=\"education\"\n                            control={control}\n                            rules={{\n                                required: \"Education is required\",\n                            }}\n                        />\n                        <FormControl\n                            component=\"fieldset\"\n                            className=\"mat__textbox\"\n                        >\n                            <FormLabel component=\"legend\">\n                                Employed In\n                            </FormLabel>\n                            <Controller\n                                name=\"employment\"\n                                control={control}\n                                defaultValue={props.loggedinprofile.employment}\n                                value=\"\"\n                                ref={register}\n                                render={({ field, fieldState: { error } }) => (\n                                    <ToggleButtonGroup\n                                        value=\"\"\n                                        exclusive\n                                        // onChange={handleAlignment}\n                                        aria-label=\"Employment\"\n                                        {...field}\n                                        // onChange={(_, data) =>\n                                        //     field.onChange(data)\n                                        //     handleEmployment(data);\n\n                                        // }\n                                        onChange={(_, data) => {\n                                            field.onChange(data);\n                                            handleEmployment(data);\n                                        }}\n                                        error={!!error}\n                                        helperText={\n                                            error ? error.message : null\n                                        }\n                                        className=\"mat__custombutgrp\"\n                                    >\n                                        <ToggleButton\n                                            value=\"Government\"\n                                            aria-label=\"Government\"\n                                            classes={{\n                                                selected: classes.selected,\n                                                root: classes.defaultbutton,\n                                            }}\n                                        >\n                                            Government\n                                        </ToggleButton>\n                                        <ToggleButton\n                                            value=\"Private\"\n                                            aria-label=\"Private\"\n                                            classes={{\n                                                selected: classes.selected,\n                                                root: classes.defaultbutton,\n                                            }}\n                                        >\n                                            Private\n                                        </ToggleButton>\n                                        <ToggleButton\n                                            value=\"IT Sector\"\n                                            aria-label=\"IT Sector\"\n                                            classes={{\n                                                selected: classes.selected,\n                                                root: classes.defaultbutton,\n                                            }}\n                                        >\n                                            IT Sector\n                                        </ToggleButton>\n                                        <ToggleButton\n                                            value=\"Business\"\n                                            aria-label=\"Business\"\n                                            classes={{\n                                                selected: classes.selected,\n                                                root: classes.defaultbutton,\n                                            }}\n                                        >\n                                            Business\n                                        </ToggleButton>\n                                        <ToggleButton\n                                            value=\"Not Working\"\n                                            aria-label=\"Not Working\"\n                                            classes={{\n                                                selected: classes.selected,\n                                                root: classes.defaultbutton,\n                                            }}\n                                        >\n                                            Not Working\n                                        </ToggleButton>\n                                    </ToggleButtonGroup>\n                                )}\n                                rules={{\n                                    required: \"Employment is required\",\n                                }}\n                            />\n                            <FormHelperText className=\"Mui-error\">\n                                {errors.employment?.message}\n                            </FormHelperText>\n                        </FormControl>\n\n                        {employment !== \"Not Working\" ? (\n                            <div>\n                                {\" \"}\n                                <FormLabel\n                                    className={classes.currencyLabel}\n                                    component=\"legend\"\n                                >\n                                    Annual Income\n                                </FormLabel>\n                                <Grid container>\n                                    {/* <FormControl\n                                            component=\"fieldset\"\n                                            className=\"mat__textbox\"\n                                        > */}\n\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__caste\"\n                                    >\n                                        <Controller\n                                            defaultValue={\n                                                props.loggedinprofile.Currency\n                                            }\n                                            render={({\n                                                field,\n                                                fieldState: { error },\n                                            }) => (\n                                                <Autocomplete\n                                                    {...field}\n                                                    options={currencyList}\n                                                    getOptionLabel={(option) =>\n                                                        option.cc +\n                                                        \"(\" +\n                                                        option.symbol +\n                                                        \")\" +\n                                                        \" - \" +\n                                                        option.name\n                                                    }\n                                                    renderInput={(params) => (\n                                                        <TextField\n                                                            {...params}\n                                                            label=\"Currency\"\n                                                            variant=\"outlined\"\n                                                            error={!!error}\n                                                            helperText={\n                                                                error\n                                                                    ? error.message\n                                                                    : null\n                                                            }\n                                                            className=\"\"\n                                                        />\n                                                    )}\n                                                    onChange={(_, data) =>\n                                                        field.onChange(data)\n                                                    }\n                                                />\n                                            )}\n                                            name=\"Currency\"\n                                            control={control}\n                                            rules={{\n                                                required:\n                                                    \"Currency is required\",\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__subcaste\"\n                                    >\n                                        <Controller\n                                            name=\"income\"\n                                            control={control}\n                                            defaultValue={\n                                                props.loggedinprofile.income\n                                            }\n                                            render={({\n                                                field: { onChange, value },\n                                                fieldState: { error },\n                                            }) => (\n                                                <TextField\n                                                    label=\"Income\"\n                                                    variant=\"outlined\"\n                                                    value={value}\n                                                    fullWidth\n                                                    onChange={onChange}\n                                                    error={!!error}\n                                                    className=\"\"\n                                                    helperText={\n                                                        error\n                                                            ? error.message\n                                                            : null\n                                                    }\n                                                />\n                                            )}\n                                            rules={{\n                                                required: \"Income is required\",\n                                            }}\n                                        />\n                                    </Grid>\n                                    {/* </FormControl> */}\n                                </Grid>\n                                <Grid container>\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__caste\"\n                                    >\n                                        <Controller\n                                            name=\"companyname\"\n                                            control={control}\n                                            defaultValue={\n                                                props.loggedinprofile\n                                                    .companyname\n                                            }\n                                            render={({\n                                                field: { onChange, value },\n                                                fieldState: { error },\n                                            }) => (\n                                                <TextField\n                                                    label=\"Company Name\"\n                                                    variant=\"outlined\"\n                                                    value={value}\n                                                    fullWidth\n                                                    onChange={onChange}\n                                                    error={!!error}\n                                                    className=\"mat__textbox\"\n                                                    helperText={\n                                                        error\n                                                            ? error.message\n                                                            : null\n                                                    }\n                                                />\n                                            )}\n                                            rules={{\n                                                required:\n                                                    \"Company Name is required\",\n                                            }}\n                                        />\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={12}\n                                        md={6}\n                                        className=\"mat__subcaste\"\n                                    >\n                                        <Controller\n                                            name=\"jobnature\"\n                                            control={control}\n                                            defaultValue={\n                                                props.loggedinprofile.jobnature\n                                            }\n                                            render={({\n                                                field: { onChange, value },\n                                                fieldState: { error },\n                                            }) => (\n                                                <TextField\n                                                    label=\"Job Nature\"\n                                                    variant=\"outlined\"\n                                                    value={value}\n                                                    fullWidth\n                                                    onChange={onChange}\n                                                    error={!!error}\n                                                    className=\"mat__textbox\"\n                                                    helperText={\n                                                        error\n                                                            ? error.message\n                                                            : null\n                                                    }\n                                                />\n                                            )}\n                                            rules={{\n                                                required:\n                                                    \"Job Nature is required\",\n                                            }}\n                                        />\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        ) : (\n                            \"\"\n                        )}\n                        <Button\n                            color=\"primary\"\n                            justify=\"center\"\n                            variant=\"contained\"\n                            type=\"submit\"\n                            className={classes.updatebutton}\n                        >\n                            Update\n                        </Button>\n                    </form>\n                ) : (\n                    \"\"\n                )}\n            </FormProvider>\n        </div>\n    );\n}\n\nexport default Educationedit;\n","import {\n  Button,\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Grid,\n  makeStyles,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\n\nimport React, { useState } from \"react\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport { db } from \"../../app/firebase\";\nimport { DegreeList, currencyList } from \"../Dataforsignup\";\nconst useStyles = makeStyles((theme) => ({\n  selected: {\n    \"&&\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n      // color: theme.palette.primary.light,\n      \"&:hover\": {\n        // background: theme.palette.primary.dark,\n        background: \"#003b32\"\n      }\n    }\n  },\n  defaultbutton: {\n    borderWidth: \" 2px \",\n    borderStyle: \"solid\",\n    color: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    // background: \"#e0f2f1\",\n    borderLeftWidth: \"2.5px !Important\",\n    borderLeftColor: theme.palette.primary.main + \"!important\",\n    color: theme.palette.action.active,\n    \"&:hover\": {\n      background: theme.palette.primary.dark,\n      color: \"#fff\"\n    }\n  },\n  currencyLabel: {\n    marginBottom: \"10px\",\n    marginTop: \"20px\"\n  },\n  updatebutton: {\n    marginTop: \"20px\",\n    display: \"flex\",\n    marginLeft: \"auto\"\n  }\n}));\n\nfunction Familydetailsedit(props) {\n  const classes = useStyles();\n  const {\n    control,\n    methods,\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm();\n  const onSubmit = (data) => {\n    console.log(props.loggedinprofile.email + \"loggggggggg dmsd,vdfvnfc\");\n    console.log(data.motherssoccupation);\n    db.collection(\"users\")\n      .doc(props.loggedinprofile.email)\n      .set(\n        {\n          familystatus: data.familystatus ? data.familystatus : \" \",\n          familyvalues: data.familyvalues ? data.familyvalues : \" \",\n          familytype: data.familytype ? data.familytype : \" \",\n          fathersoccupation: data.fathersoccupation\n            ? data.fathersoccupation\n            : \"\",\n          motherssoccupation: data.motherssoccupation\n            ? data.motherssoccupation\n            : \"\",\n          brothers: data.brothers ? data.brothers : \"\",\n          sisters: data.sisters ? data.sisters : \"\"\n        },\n        { merge: true }\n      )\n      .catch((error) => alert(error.message));\n  };\n  return (\n    <div>\n      <Typography variant=\"h4\">Family Details</Typography>\n      <FormProvider {...methods}>\n        {Object.keys(props.loggedinprofile).length !== 0 ? (\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <FormControl component=\"fieldset\" className=\"mat__textbox\">\n              <FormLabel component=\"legend\">Family Status</FormLabel>\n              <Controller\n                name=\"familystatus\"\n                control={control}\n                defaultValue={props.loggedinprofile.familystatus}\n                value=\"\"\n                render={({ field, fieldState: { error } }) => (\n                  <ToggleButtonGroup\n                    value=\"\"\n                    exclusive\n                    color=\"primary\"\n                    // onChange={handleAlignment}\n                    aria-label=\"text alignment\"\n                    {...field}\n                    onChange={(_, data) => field.onChange(data)}\n                    error={!!error}\n                    helperText={error ? error.message : null}\n                    className=\"mat__custombutgrp\"\n                  >\n                    <ToggleButton\n                      value=\" Middle Class\"\n                      aria-label=\" Middle Class\"\n                      classes={{\n                        selected: classes.selected,\n                        root: classes.defaultbutton\n                      }}\n                    >\n                      Middle Class\n                    </ToggleButton>\n                    <ToggleButton\n                      value=\"Upper Middle Class\"\n                      aria-label=\"Upper Middle Class\"\n                      classes={{\n                        selected: classes.selected,\n                        root: classes.defaultbutton\n                      }}\n                    >\n                      Upper Middle Class\n                    </ToggleButton>\n\n                    <ToggleButton\n                      value=\"Rich\"\n                      aria-label=\"Rich\"\n                      classes={{\n                        selected: classes.selected,\n                        root: classes.defaultbutton\n                      }}\n                    >\n                      Rich\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                )}\n                rules={{\n                  required: \"Family Status is required\"\n                }}\n              />\n              <FormHelperText className=\"Mui-error\">\n                {errors.familystatus?.message}\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl component=\"fieldset\" className=\"mat__textbox\">\n              <FormLabel component=\"legend\">Family Values</FormLabel>\n              <Controller\n                name=\"familyvalues\"\n                control={control}\n                defaultValue={props.loggedinprofile.familyvalues}\n                value=\"\"\n                render={({ field }) => (\n                  <ToggleButtonGroup\n                    value=\"\"\n                    exclusive\n                    // onChange={handleAlignment}\n                    aria-label=\"text alignment\"\n                    {...field}\n                    onChange={(_, data) => field.onChange(data)}\n                    className=\"mat__custombutgrp\"\n                  >\n                    <ToggleButton\n                      value=\"Orthodox\"\n                      aria-label=\"Orthodox\"\n                      color=\"primary\"\n                      classes={{\n                        selected: classes.selected,\n                        root: classes.defaultbutton\n                      }}\n                    >\n                      Orthodox\n                    </ToggleButton>\n                    <ToggleButton\n                      value=\"Modern\"\n                      aria-label=\"Modern\"\n                      color=\"primary\"\n                      classes={{\n                        selected: classes.selected,\n                        root: classes.defaultbutton\n                      }}\n                    >\n                      Modern\n                    </ToggleButton>\n\n                    <ToggleButton\n                      value=\"Moderate\"\n                      aria-label=\"Moderate\"\n                      color=\"primary\"\n                      classes={{\n                        selected: classes.selected,\n                        root: classes.defaultbutton\n                      }}\n                    >\n                      Moderate\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                )}\n                rules={{\n                  required: \"Family Values is required\"\n                }}\n              />\n              <FormHelperText className=\"Mui-error\">\n                {errors.familyvalues?.message}\n              </FormHelperText>\n            </FormControl>\n\n            <FormControl component=\"fieldset\" className=\"mat__textbox\">\n              <FormLabel component=\"legend\">Family Type</FormLabel>\n              <Controller\n                name=\"familytype\"\n                control={control}\n                defaultValue={props.loggedinprofile.familytype}\n                value=\"\"\n                ref={register}\n                render={({ field, fieldState: { error } }) => (\n                  <ToggleButtonGroup\n                    value=\"\"\n                    exclusive\n                    // onChange={handleAlignment}\n                    aria-label=\"text alignment\"\n                    {...field}\n                    onChange={(_, data) => field.onChange(data)}\n                    error={!!error}\n                    helperText={error ? error.message : null}\n                    className=\"mat__custombutgrp\"\n                  >\n                    <ToggleButton\n                      value=\"Joint\"\n                      aria-label=\"Joint\"\n                      classes={{\n                        selected: classes.selected,\n                        root: classes.defaultbutton\n                      }}\n                    >\n                      Joint\n                    </ToggleButton>\n                    <ToggleButton\n                      value=\"Nuclear\"\n                      aria-label=\"Nuclear\"\n                      classes={{\n                        selected: classes.selected,\n                        root: classes.defaultbutton\n                      }}\n                    >\n                      Nuclear\n                    </ToggleButton>\n                  </ToggleButtonGroup>\n                )}\n                rules={{\n                  required: \"Family Type is required\"\n                }}\n              />\n              <FormHelperText className=\"Mui-error\">\n                {errors.familytype?.message}\n              </FormHelperText>\n            </FormControl>\n\n            <Controller\n              name=\"fathersoccupation\"\n              control={control}\n              defaultValue={props.loggedinprofile?.fatheroccupation}\n              render={({\n                field: { onChange, value },\n                fieldState: { error }\n              }) => (\n                <TextField\n                  label=\"Father's Occupation\"\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={onChange}\n                  className=\"mat__textbox\"\n                  value={value}\n                />\n              )}\n            />\n            <Controller\n              name=\"motherssoccupation\"\n              control={control}\n              defaultValue={props.loggedinprofile?.motheroccupation}\n              render={({\n                field: { onChange, value },\n                fieldState: { error }\n              }) => (\n                <TextField\n                  label=\"Mother's Occupation\"\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={onChange}\n                  className=\"mat__textbox\"\n                  value={value}\n                />\n              )}\n            />\n            <Controller\n              name=\"brothers\"\n              control={control}\n              defaultValue={props.loggedinprofile?.brothers}\n              render={({\n                field: { onChange, value },\n                fieldState: { error }\n              }) => (\n                <TextField\n                  label=\"No. of Brothers\"\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={onChange}\n                  className=\"mat__textbox\"\n                  value={value}\n                />\n              )}\n            />\n            <Controller\n              name=\"sisters\"\n              control={control}\n              defaultValue={props.loggedinprofile?.brothers}\n              render={({\n                field: { onChange, value },\n                fieldState: { error }\n              }) => (\n                <TextField\n                  label=\"No. of Sisters\"\n                  variant=\"outlined\"\n                  fullWidth\n                  onChange={onChange}\n                  className=\"mat__textbox\"\n                  value={value}\n                />\n              )}\n            />\n            <Button\n              color=\"primary\"\n              justify=\"center\"\n              variant=\"contained\"\n              type=\"submit\"\n              className={classes.updatebutton}\n            >\n              Update\n            </Button>\n          </form>\n        ) : (\n          \"\"\n        )}\n      </FormProvider>\n    </div>\n  );\n}\n\nexport default Familydetailsedit;\n","import React, { useEffect, useState } from \"react\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport {\n  countryList,\n  statesList,\n  subCasteArrMadhwa,\n  subCasteArrSmartha,\n  subCasteArrVaishnava,\n  employedin,\n  Gothra,\n  birthStar,\n  Raashi,\n  caste,\n  heightList,\n  languages,\n  DegreeList,\n  currencyList\n} from \"../Dataforsignup\";\nimport { auth, db } from \"../../app/firebase\";\nimport firebase from \"firebase\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  Typography,\n  TextField,\n  Button,\n  Stepper,\n  Step,\n  StepLabel,\n  Grid,\n  FormHelperText,\n  FormControlLabel,\n  RadioGroup,\n  FormLabel,\n  FormControl,\n  FormGroup,\n  Paper,\n  makeStyles,\n  InputLabel,\n  Select,\n  MenuItem,\n  Checkbox,\n  Box\n} from \"@material-ui/core\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport { Chip } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nconst useStyles = makeStyles((theme) => ({\n  selected: {\n    \"&&\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n      // color: theme.palette.primary.light,\n      \"&:hover\": {\n        // background: theme.palette.primary.dark,\n        background: \"#003b32\"\n      }\n    }\n  },\n  defaultbutton: {\n    borderWidth: \" 2px \",\n    borderStyle: \"solid\",\n    color: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    // background: \"#e0f2f1\",\n    borderLeftWidth: \"2.5px !Important\",\n    borderLeftColor: theme.palette.primary.main + \"!important\",\n    color: theme.palette.action.active,\n    \"&:hover\": {\n      background: theme.palette.primary.dark,\n      color: \"#fff\"\n    }\n  },\n  buttontemp: {\n    position: \"fixed\",\n    top: \"100px\"\n  },\n  currencyLabel: {\n    marginBottom: \"10px\",\n    marginTop: \"20px\"\n  },\n  updatebutton: {\n    marginTop: \"20px\",\n    display: \"flex\",\n    marginLeft: \"auto\"\n  },\n  age: {\n    width: \"200px\"\n  },\n  toage: {\n    // marginLeft: \"50px\",\n  },\n  ageGrp: {\n    // marginTop: \"20px\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  customlabel: {\n    float: \"left\",\n    marginRight: \"20px\",\n    marginBottom: \"10px\"\n  },\n  customlabel2: {\n    float: \"left\",\n    marginRight: \"20px\",\n    marginBottom: \"10px\"\n  },\n  toseperator: {\n    margin: \"0 35px\"\n  },\n  customwidthtextbox: {\n    width: \"200px !important\"\n  }\n}));\nfunction Partnerpreferences(props) {\n  const classes = useStyles();\n  const {\n    control,\n    register,\n    handleSubmit,\n    methods,\n    getValues,\n    formState: { errors }\n  } = useForm();\n\n  const fromAge = props.loggedinprofile.gender == \"male\" ? \"18\" : \"21\";\n  const [age, setAge] = React.useState(fromAge);\n  const [toage, setToage] = React.useState(fromAge);\n  const handleAgeChangeFrom = (event) => {\n    console.log(event);\n    setAge(event.target.value);\n  };\n  const handleAgeChangeTo = (event) => {\n    console.log(event);\n    setToage(event.target.value);\n  };\n  const getAge = () => {\n    let menuItems = [];\n    for (var i = fromAge; i < 70; i++) {\n      menuItems.push(\n        <MenuItem value={i} eventKey={i}>\n          {i}\n        </MenuItem>\n      );\n    }\n    return menuItems;\n  };\n  let ageMenuautocomplete = [];\n\n  const getAgeAutocomplete = () => {\n    for (var i = fromAge; i < 70; i++) {\n      ageMenuautocomplete.push(i.toString());\n    }\n    return ageMenuautocomplete;\n  };\n  getAgeAutocomplete();\n  const [subCasteArr, setsubCasteArr] = useState([\"\"]);\n  const [subCaste, setsubCaste] = useState(\"\");\n\n  const handleCasteChange = (e) => {\n    let subcastearrwithin = [];\n    console.log(e);\n    // setsubcasteValue(\"\");\n    // if (e == \"Madhwa\") {\n    if (e.includes(\"Madhwa\")) {\n      console.log(\"firs if\");\n      subcastearrwithin.push(...subCasteArrMadhwa);\n      setsubCasteArr((prevState) => ({\n        ...prevState,\n        subCasteArrMadhwa\n      }));\n      setsubCasteArr({ ...subCasteArr, subCasteArrMadhwa });\n      setsubCaste(\"Madhwa\");\n    }\n    //  else if (e == \"Smartha\") {\n    if (e.includes(\"Smartha\")) {\n      console.log(\"else if\");\n      subcastearrwithin.push(...subCasteArrSmartha);\n      setsubCasteArr({ ...subCasteArr, subCasteArrSmartha });\n      setsubCaste(\"Smartha\");\n    }\n    if (e.includes(\"Shri Vaishnava\")) {\n      console.log(\"else\");\n      subcastearrwithin.push(...subCasteArrVaishnava);\n      setsubCasteArr({ ...subCasteArr, subCasteArrVaishnava });\n    }\n    console.log(subcastearrwithin);\n    subcastearrwithin.push(\"Any\");\n    setsubCasteArr(subcastearrwithin);\n    setcastevalue([]);\n  };\n  const [castevalue, setcastevalue] = useState([]);\n\n  // alert(props.loggedinprofile.partnerpreferences.caste);\n  useEffect(() => {\n    if (props.loggedinprofile.partnerpreferences?.caste) {\n      handleCasteChange(props.loggedinprofile.partnerpreferences?.caste);\n    }\n  }, []);\n\n  let DegreeListt = [];\n  DegreeListt.push(\"Any\");\n  DegreeListt.push(...DegreeList);\n  DegreeListt.push(\"Other\");\n\n  const handleDelete = () => {\n    console.log(\"kkkk\");\n    setcastevalue([]);\n  };\n  const [allcaste, setallcaste] = useState([\"\"]);\n  let allcastearr = [];\n  allcastearr.push(\"Any\");\n  allcastearr.push(...caste);\n  const isEven = (toage) => toage % 2 === 0;\n\n  let incomeList = [];\n  for (let i = 1; i < 11; i++) {\n    incomeList.push(\"₹\" + i + \" Lakh & Above\");\n  }\n  for (let i = 15; i < 51; i = i + 5) {\n    incomeList.push(\"₹\" + i + \" Lakh & Above\");\n  }\n  for (let i = 60; i < 100; i = i + 10) {\n    incomeList.push(\"₹\" + i + \" Lakh & Above\");\n  }\n  for (let i = 1; i < 6; i++) {\n    incomeList.push(\"₹\" + i + \" Crore & Above\");\n  }\n  // setallcaste(allcastearr);\n\n  const onSubmit = (data) => {\n    console.log(data);\n    console.log(props.loggedinprofile.email);\n    db.collection(\"users\")\n      .doc(props.loggedinprofile.email)\n      .set(\n        {\n          partnerpreferencesflag: true,\n          partnerpreferences: {\n            maritalstatus: data.maritalstatus\n              ? data.maritalstatus\n              : \"Not Specified\",\n            age: {\n              from: data.fromage ? data.fromage : \"Not Specified\",\n              to: data.toage ? data.toage : \"Not Specified\"\n            },\n            height: {\n              from: data.heightfrom ? data.heightfrom : \"Not Specified\",\n              to: data.heightto ? data.heightto : \"Not Specified\"\n            },\n            mothertongue: data.mothertongue\n              ? data.mothertongue\n              : \"Not Specified\",\n            caste: data.caste ? data.caste : \"Not Specified\",\n            subcaste: data.subcaste ? data.subcaste : \"Not Specified\",\n            star: data.star ? data.star : \"Not Specified\",\n            education: data.education ? data.education : \"Not Specified\",\n            employedin: data.employedin ? data.employedin : \"Not Specified\",\n            annualincome: data.income ? data.income : \"Not Specified\",\n            countryliving: data.livingcountry\n              ? data.livingcountry\n              : \"Not Specified\",\n            foodhabits: data.foodhabits ? data.foodhabits : \"Not Specified\",\n            smokinghabits: data.smokinghabits\n              ? data.smokinghabits\n              : \"Not Specified\",\n            drinkinghabits: data.drinkinghabits\n              ? data.drinkinghabits\n              : \"Not Specified\"\n          }\n        },\n        { merge: true }\n      )\n      .then(alert(\"success\"))\n      // db.collection(\"users\")\n      //     .doc(props.loggedinprofile.email)\n      //     .collection(\"partnerpreferences\")\n      //     .doc(\"pref\")\n      //     .set(\n      //         {\n      //             maritalstatus: data.maritalstatus\n      //                 ? data.maritalstatus\n      //                 : \"Not Specified\",\n      //             age: {\n      //                 from: data.fromage ? data.fromage : \"Not Specified\",\n      //                 to: data.toage ? data.toage : \"Not Specified\",\n      //             },\n      //             height: {\n      //                 from: data.heightfrom ? data.heightfrom : \"Not Specified\",\n      //                 to: data.heightto ? data.heightto : \"Not Specified\",\n      //             },\n      //             mothertongue: data.mothertongue ? data.mothertongue : \"Not Specified\",\n      //             caste: data.caste ? data.caste : \"Not Specified\",\n      //             subcaste: data.subcaste ? data.subcaste : \"Not Specified\",\n      //             star: data.star ? data.star : \"Not Specified\",\n      //             education: data.education ? data.education : \"Not Specified\",\n      //             employedin: data.employedin ? data.employedin : \"Not Specified\",\n      //             annualincome: data.income ? data.income : \"Not Specified\",\n      //             countryliving: data.livingcountry\n      //                 ? data.livingcountry\n      //                 : \"Not Specified\",\n      //             foodhabits: data.foodhabits ? data.foodhabits : \"Not Specified\",\n      //             smokinghabits: data.smokinghabits\n      //                 ? data.smokinghabits\n      //                 : \"Not Specified\",\n      //             drinkinghabits: data.drinkinghabits\n      //                 ? data.drinkinghabits\n      //                 : \"Not Specified\",\n      //         },\n      //         { merge: true }\n      //     )\n      .catch((error) => alert(error.message));\n\n    // db.collection(\"users\").doc(props.loggedinprofile.email).set(\n    //     {\n    //         partnerpreferences: true,\n    //     },\n    //     { merge: true }\n    // );\n  };\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\">Marital Status</FormLabel>\n          <Controller\n            name=\"maritalstatus\"\n            control={control}\n            defaultValue={\n              props.loggedinprofile?.partnerpreferences?.maritalstatus\n            }\n            value=\"\"\n            render={({ field }) => (\n              <ToggleButtonGroup\n                defaultValue={props.loggedinprofile.createdby}\n                exclusive\n                // onChange={handleAlignment}\n                aria-label=\"text alignment\"\n                {...field}\n                onChange={(_, data) => field.onChange(data)}\n                className=\"mat__custombutgrp\"\n              >\n                <ToggleButton\n                  value=\"Unmarried\"\n                  aria-label=\"Unmarried\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Unmarried\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Widow/Widower\"\n                  aria-label=\"Widow/Widower\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Widow/Widower\n                </ToggleButton>\n\n                <ToggleButton\n                  value=\"Divorced\"\n                  aria-label=\"Divorced\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Divorced\n                </ToggleButton>\n              </ToggleButtonGroup>\n            )}\n            // rules={{\n            //     required: \"Marital Status is required\",\n            // }}\n          />\n          <FormHelperText className=\"Mui-error\">\n            {errors.maritalstatus?.message}\n          </FormHelperText>\n        </FormControl>\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\" className={classes.customlabel}>\n            Age\n          </FormLabel>\n          <div className={classes.ageGrp}>\n            <FormControl>\n              <Controller\n                name=\"fromage\"\n                control={control}\n                defaultValue={\n                  props.loggedinprofile.partnerpreferences?.age?.from\n                }\n                render={({ field, fieldState: { error } }) => (\n                  <Autocomplete\n                    {...field}\n                    options={ageMenuautocomplete}\n                    getOptionLabel={(option) => option}\n                    // defaultValue={loggedinprofile.height}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        // label=\"Height\"\n                        variant=\"outlined\"\n                        error={!!error}\n                        helperText={error ? error.message : null}\n                        className={classes.customwidthtextbox}\n                        {...register(\"fromage\", {\n                          // required:\n                          //     \"From age is required\",\n                        })}\n                      />\n                    )}\n                    onChange={(_, data) => field.onChange(data)}\n                  />\n                )}\n              />\n            </FormControl>\n            <span className={classes.toseperator}>To</span>\n            <FormControl className={classes.toage}>\n              <Controller\n                name=\"toage\"\n                control={control}\n                defaultValue={props.loggedinprofile.partnerpreferences?.age?.to}\n                render={({ field, fieldState: { error } }) => (\n                  <Autocomplete\n                    {...field}\n                    options={ageMenuautocomplete}\n                    getOptionLabel={(option) => option}\n                    // defaultValue={loggedinprofile.height}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        // label=\"Height\"\n                        variant=\"outlined\"\n                        error={!!error}\n                        helperText={error ? error.message : null}\n                        className={classes.customwidthtextbox}\n                        {...register(\"toage\", {\n                          // required:\n                          // \"This is required\",\n                          validate: (value) => {\n                            if (getValues(\"fromage\")) {\n                              return (\n                                value > getValues(\"fromage\") ||\n                                \"Should be greater than From age\"\n                              );\n                            }\n                          }\n                        })}\n                      />\n                    )}\n                    onChange={(_, data) => field.onChange(data)}\n                  />\n                )}\n              />\n            </FormControl>\n          </div>\n        </FormControl>\n\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\" className={classes.customlabel2}>\n            Height\n          </FormLabel>\n          <div className={classes.ageGrp}>\n            <Controller\n              // defaultValue={loggedinprofile.height}\n              render={({ field, fieldState: { error } }) => (\n                <Autocomplete\n                  {...field}\n                  options={heightList}\n                  defaultValue={\n                    props.loggedinprofile.partnerpreferences?.height?.from\n                  }\n                  getOptionLabel={(option) => option}\n                  // defaultValue={loggedinprofile.height}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      // label=\"Height\"\n                      variant=\"outlined\"\n                      error={!!error}\n                      helperText={error ? error.message : null}\n                      className={classes.customwidthtextbox}\n                      {...register(\"heightfrom\", {\n                        // required: \"Height is required\",\n                      })}\n                    />\n                  )}\n                  onChange={(_, data) => field.onChange(data)}\n                />\n              )}\n              name=\"heightfrom\"\n              control={control}\n            />\n            <span className={classes.toseperator}>To</span>\n            <Controller\n              // defaultValue={loggedinprofile.height}\n              render={({ field, fieldState: { error } }) => (\n                <Autocomplete\n                  {...field}\n                  options={heightList}\n                  defaultValue={\n                    props.loggedinprofile.partnerpreferences?.height?.to\n                  }\n                  getOptionLabel={(option) => option}\n                  // defaultValue={loggedinprofile.height}\n                  renderInput={(params) => (\n                    <TextField\n                      {...params}\n                      // label=\"Height\"\n                      variant=\"outlined\"\n                      error={!!error}\n                      helperText={error ? error.message : null}\n                      className={classes.customwidthtextbox}\n                      {...register(\"heightto\", {\n                        // required: \"This is required\",\n                        validate: {\n                          always: (value) => {\n                            if (getValues(\"heightfrom\")) {\n                              return (\n                                value\n                                  .slice(value.indexOf(\"/\") + 1)\n                                  .replace(\"cm\", \"\") >\n                                  getValues(\"heightfrom\")\n                                    .slice(\n                                      getValues(\"heightfrom\").indexOf(\"/\") + 1\n                                    )\n                                    .replace(\"cm\", \"\") ||\n                                \"Should be greater than From Height\"\n                              );\n                            }\n                          }\n                        }\n                      })}\n                    />\n                  )}\n                  onChange={(_, data) => field.onChange(data)}\n                />\n              )}\n              name=\"heightto\"\n              control={control}\n              // rules={{\n              //     required: \"Height is required\",\n              // }}\n            />\n          </div>\n        </FormControl>\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\" className={classes.customlabel}>\n            Mother Tongue\n          </FormLabel>\n          <Controller\n            defaultValue={\n              props.loggedinprofile.partnerpreferences?.mothertongue\n            }\n            // defaultValue={loggedinprofile.height}\n            render={({ field, fieldState: { error } }) => (\n              <Autocomplete\n                multiple\n                {...field}\n                options={languages}\n                getOptionLabel={(option) => option}\n                // defaultValue={loggedinprofile.height}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    // label=\"Height\"\n                    variant=\"outlined\"\n                    error={!!error}\n                    helperText={error ? error.message : null}\n                    // className={classes.customwidthtextbox}\n                  />\n                )}\n                onChange={(_, data) => field.onChange(data)}\n              />\n            )}\n            name=\"mothertongue\"\n            control={control}\n            // rules={{\n            //     required: \"Mother Tongue is required\",\n            // }}\n          />\n        </FormControl>\n\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\" className={classes.customlabel}>\n            Caste\n          </FormLabel>\n          <Controller\n            defaultValue={props.loggedinprofile.partnerpreferences?.caste}\n            render={({ field, fieldState: { error } }) => (\n              <Autocomplete\n                multiple\n                {...field}\n                options={allcastearr}\n                getOptionLabel={(option) => option}\n                // defaultValue={loggedinprofile.height}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip\n                      icon\n                      label={option}\n                      {...getTagProps({ index })}\n                      // onDelete={handleDelete}\n                    />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    // label=\"Height\"\n                    variant=\"outlined\"\n                    error={!!error}\n                    helperText={error ? error.message : null}\n                    // className={classes.customwidthtextbox}\n                  />\n                )}\n                onChange={(_, data) => (\n                  field.onChange(data), handleCasteChange(data)\n                )}\n              />\n            )}\n            name=\"caste\"\n            control={control}\n            // rules={{\n            //     required: \"Caste is required\",\n            // }}\n          />\n        </FormControl>\n\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\" className={classes.customlabel}>\n            Sub Caste\n          </FormLabel>\n          <Controller\n            defaultValue={props.loggedinprofile.partnerpreferences?.subcaste}\n            render={({ field, fieldState: { error } }) => (\n              <Autocomplete\n                multiple\n                {...field}\n                options={subCasteArr}\n                // value={castevalue}\n                getOptionLabel={(option) => option}\n                // defaultValue={loggedinprofile.height}\n\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    // label=\"Height\"\n                    variant=\"outlined\"\n                    error={!!error}\n                    helperText={error ? error.message : null}\n                    // className={classes.customwidthtextbox}\n                  />\n                )}\n                // onChange={(_, data) => field.onChange(data)}\n                onChange={(event, newValue) => (\n                  field.onChange(newValue), setcastevalue(newValue)\n                )}\n              />\n            )}\n            name=\"subcaste\"\n            control={control}\n            // rules={{\n            //     required: \"Sub-Caste is required\",\n            // }}\n          />\n        </FormControl>\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\" className={classes.customlabel}>\n            Star\n          </FormLabel>\n          <Controller\n            defaultValue={props.loggedinprofile.partnerpreferences?.star}\n            render={({ field, fieldState: { error } }) => (\n              <Autocomplete\n                multiple\n                {...field}\n                options={birthStar}\n                getOptionLabel={(option) => option}\n                // defaultValue={loggedinprofile.height}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip icon label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    // label=\"Height\"\n                    variant=\"outlined\"\n                    error={!!error}\n                    helperText={error ? error.message : null}\n                  />\n                )}\n                onChange={(_, data) => field.onChange(data)}\n              />\n            )}\n            name=\"star\"\n            control={control}\n            // rules={{\n            //     required: \"Star is required\",\n            // }}\n          />\n        </FormControl>\n\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\" className={classes.customlabel}>\n            Education\n          </FormLabel>\n          <Controller\n            defaultValue={props.loggedinprofile.partnerpreferences?.education}\n            render={({ field, fieldState: { error } }) => (\n              <Autocomplete\n                multiple\n                {...field}\n                options={DegreeListt}\n                getOptionLabel={(option) => option}\n                // defaultValue={loggedinprofile.height}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip icon label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    // label=\"Height\"\n                    variant=\"outlined\"\n                    error={!!error}\n                    helperText={error ? error.message : null}\n                  />\n                )}\n                onChange={(_, data) => field.onChange(data)}\n              />\n            )}\n            name=\"education\"\n            control={control}\n            // rules={{\n            //     required: \"Education is required\",\n            // }}\n          />\n        </FormControl>\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\" className={classes.customlabel}>\n            Employed In\n          </FormLabel>\n          <Controller\n            defaultValue={props.loggedinprofile.partnerpreferences?.employedin}\n            render={({ field, fieldState: { error } }) => (\n              <Autocomplete\n                multiple\n                {...field}\n                options={employedin}\n                getOptionLabel={(option) => option}\n                // defaultValue={loggedinprofile.height}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip icon label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    // label=\"Height\"\n                    variant=\"outlined\"\n                    error={!!error}\n                    helperText={error ? error.message : null}\n                  />\n                )}\n                onChange={(_, data) => field.onChange(data)}\n              />\n            )}\n            name=\"employedin\"\n            control={control}\n            // rules={{\n            //     required: \"Employment is required\",\n            // }}\n          />\n        </FormControl>\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\" className={classes.customlabel2}>\n            Annual Income\n          </FormLabel>\n\n          <Controller\n            defaultValue={\n              props.loggedinprofile.partnerpreferences?.annualincome\n            }\n            render={({ field, fieldState: { error } }) => (\n              <Autocomplete\n                {...field}\n                options={incomeList}\n                getOptionLabel={(option) => option}\n                // defaultValue={loggedinprofile.height}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    // label=\"Height\"\n                    variant=\"outlined\"\n                    error={!!error}\n                    fullWidth\n                    helperText={error ? error.message : null}\n                    // className={classes.customwidthtextbox}\n                  />\n                )}\n                onChange={(_, data) => field.onChange(data)}\n              />\n            )}\n            name=\"income\"\n            control={control}\n            // rules={{\n            //     required: \"Annual Income is required\",\n            // }}\n          />\n        </FormControl>\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\" className={classes.customlabel}>\n            Country Living In\n          </FormLabel>\n          <Controller\n            defaultValue={\n              props.loggedinprofile.partnerpreferences?.countryliving\n            }\n            render={({ field, fieldState: { error } }) => (\n              <Autocomplete\n                multiple\n                {...field}\n                options={employedin}\n                getOptionLabel={(option) => option}\n                // defaultValue={loggedinprofile.height}\n                renderTags={(value, getTagProps) =>\n                  value.map((option, index) => (\n                    <Chip icon label={option} {...getTagProps({ index })} />\n                  ))\n                }\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    // label=\"Height\"\n                    variant=\"outlined\"\n                    error={!!error}\n                    helperText={error ? error.message : null}\n                  />\n                )}\n                onChange={(_, data) => field.onChange(data)}\n              />\n            )}\n            name=\"livingcountry\"\n            control={control}\n            // rules={{\n            //     required: \"Country Living is required\",\n            // }}\n          />\n        </FormControl>\n\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\">Food Habits</FormLabel>\n          <Controller\n            name=\"foodhabits\"\n            control={control}\n            defaultValue={props.loggedinprofile.partnerpreferences?.foodhabits}\n            value=\"\"\n            render={({ field }) => (\n              <ToggleButtonGroup\n                defaultValue={props.loggedinprofile.createdby}\n                exclusive\n                // onChange={handleAlignment}\n                aria-label=\"text alignment\"\n                {...field}\n                onChange={(_, data) => field.onChange(data)}\n                className=\"mat__custombutgrp\"\n              >\n                <ToggleButton\n                  value=\"Vegetarian\"\n                  aria-label=\"Vegetarian\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Vegetarian\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Non-vegetarian\"\n                  aria-label=\"Non-vegetarian\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Non-vegetarian\n                </ToggleButton>\n\n                <ToggleButton\n                  value=\"Eggetarian\"\n                  aria-label=\"Eggetarian\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Eggetarian\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Vegan\"\n                  aria-label=\"Vegan\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Vegan\n                </ToggleButton>\n                <ToggleButton\n                  value=\"doesnotmatter\"\n                  aria-label=\"nomatter\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Doesn't Matter\n                </ToggleButton>\n              </ToggleButtonGroup>\n            )}\n          />\n        </FormControl>\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\">Smoking Habits</FormLabel>\n          <Controller\n            name=\"smokinghabits\"\n            control={control}\n            defaultValue={\n              props.loggedinprofile.partnerpreferences?.smokinghabits\n            }\n            value=\"\"\n            render={({ field }) => (\n              <ToggleButtonGroup\n                defaultValue={props.loggedinprofile.createdby}\n                exclusive\n                // onChange={handleAlignment}\n                aria-label=\"text alignment\"\n                {...field}\n                onChange={(_, data) => field.onChange(data)}\n                className=\"mat__custombutgrp\"\n              >\n                <ToggleButton\n                  value=\"Non-Smoker\"\n                  aria-label=\"Vegetarian\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Non Smoker\n                </ToggleButton>\n                <ToggleButton\n                  value=\" Light Smoker\"\n                  aria-label=\"Non-vegetarian\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Light Smoker\n                </ToggleButton>\n\n                <ToggleButton\n                  value=\"Smoker\"\n                  aria-label=\"Eggetarian\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Smoker\n                </ToggleButton>\n                <ToggleButton\n                  value=\" Doesn't matter\"\n                  aria-label=\"Vegan\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Doesn't matter\n                </ToggleButton>\n              </ToggleButtonGroup>\n            )}\n          />\n        </FormControl>\n        <FormControl component=\"fieldset\" className=\"mat__textbox\">\n          <FormLabel component=\"legend\">Drinking Habits</FormLabel>\n          <Controller\n            name=\"drinkinghabits\"\n            control={control}\n            defaultValue={\n              props.loggedinprofile.partnerpreferences?.drinkinghabits\n            }\n            value=\"\"\n            render={({ field }) => (\n              <ToggleButtonGroup\n                defaultValue={props.loggedinprofile.createdby}\n                exclusive\n                // onChange={handleAlignment}\n                aria-label=\"text alignment\"\n                {...field}\n                onChange={(_, data) => field.onChange(data)}\n                className=\"mat__custombutgrp\"\n              >\n                <ToggleButton\n                  value=\"Non-Drinker\"\n                  aria-label=\"Vegetarian\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Non-Drinker\n                </ToggleButton>\n                <ToggleButton\n                  value=\"Light Drinker\"\n                  aria-label=\"Non-vegetarian\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Light Drinker\n                </ToggleButton>\n\n                <ToggleButton\n                  value=\"Drinker\"\n                  aria-label=\"Eggetarian\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Drinker\n                </ToggleButton>\n                <ToggleButton\n                  value=\" Doesn't matter\"\n                  aria-label=\"Vegan\"\n                  color=\"primary\"\n                  classes={{\n                    selected: classes.selected,\n                    root: classes.defaultbutton\n                  }}\n                >\n                  Doesn't matter\n                </ToggleButton>\n              </ToggleButtonGroup>\n            )}\n          />\n        </FormControl>\n        <Button\n          color=\"primary\"\n          justify=\"center\"\n          variant=\"contained\"\n          type=\"submit\"\n          className={classes.updatebutton}\n        >\n          <SaveIcon />\n          Update\n        </Button>\n      </form>\n    </FormProvider>\n  );\n}\n\nexport default Partnerpreferences;\n","import { Button } from \"@material-ui/core\";\nimport { FormControl, FormLabel, makeStyles } from \"@material-ui/core\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport React from \"react\";\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\nimport { db } from \"../../app/firebase\";\nconst useStyles = makeStyles((theme) => ({\n    selected: {\n        \"&&\": {\n            backgroundColor: theme.palette.primary.main,\n            color: \"#fff\",\n            // color: theme.palette.primary.light,\n            \"&:hover\": {\n                // background: theme.palette.primary.dark,\n                background: theme.palette.primary.dark,\n            },\n        },\n    },\n    defaultbutton: {\n        borderWidth: \" 2px \",\n        borderStyle: \"solid\",\n        color: \"#fff\",\n        borderColor: theme.palette.primary.main,\n        // background: \"#e0f2f1\",\n        borderLeftWidth: \"2.5px !Important\",\n        borderLeftColor: theme.palette.primary.main + \"!important\",\n        color: theme.palette.action.active,\n        \"&:hover\": {\n            background: theme.palette.primary.dark,\n            color: \"#fff\",\n        },\n    },\n    updatebutton: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        marginLeft: \"auto\",\n    },\n}));\nfunction Lifestyle(props) {\n    const classes = useStyles();\n    const {\n        control,\n        register,\n        handleSubmit,\n        methods,\n        getValues,\n        formState: { errors },\n    } = useForm();\n    const onSubmit = (data) => {\n        db.collection(\"users\")\n            .doc(props.loggedinprofile.email)\n            .set(\n                {\n                    lifestyle: {\n                        foodhabits: data.foodhabits\n                            ? data.foodhabits\n                            : \"Not Specified\",\n                        smokinghabits: data.foodhabits\n                            ? data.smokinghabits\n                            : \"Not Specified\",\n                        drinkinghabits: data.foodhabits\n                            ? data.drinkinghabits\n                            : \"Not Specified\",\n                    },\n                },\n                { merge: true }\n            );\n    };\n    return (\n        <div>\n            <FormProvider {...methods}>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <FormControl component=\"fieldset\" className=\"mat__textbox\">\n                        <FormLabel component=\"legend\">Food Habits</FormLabel>\n                        <Controller\n                            name=\"foodhabits\"\n                            control={control}\n                            defaultValue={\n                                props.loggedinprofile.lifestyle?.foodhabits\n                            }\n                            value=\"\"\n                            render={({ field }) => (\n                                <ToggleButtonGroup\n                                    defaultValue={\n                                        props.loggedinprofile.createdby\n                                    }\n                                    exclusive\n                                    // onChange={handleAlignment}\n                                    aria-label=\"text alignment\"\n                                    {...field}\n                                    onChange={(_, data) => field.onChange(data)}\n                                    className=\"mat__custombutgrp\"\n                                >\n                                    <ToggleButton\n                                        value=\"Vegetarian\"\n                                        aria-label=\"Vegetarian\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Vegetarian\n                                    </ToggleButton>\n                                    <ToggleButton\n                                        value=\"Non-vegetarian\"\n                                        aria-label=\"Non-vegetarian\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Non-vegetarian\n                                    </ToggleButton>\n\n                                    <ToggleButton\n                                        value=\"Eggetarian\"\n                                        aria-label=\"Eggetarian\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Eggetarian\n                                    </ToggleButton>\n                                    <ToggleButton\n                                        value=\"Vegan\"\n                                        aria-label=\"Vegan\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Vegan\n                                    </ToggleButton>\n                                    <ToggleButton\n                                        value=\"Doesn't Matter\"\n                                        aria-label=\"nomatter\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Doesn't Matter\n                                    </ToggleButton>\n                                </ToggleButtonGroup>\n                            )}\n                        />\n                    </FormControl>\n                    <FormControl component=\"fieldset\" className=\"mat__textbox\">\n                        <FormLabel component=\"legend\">Smoking Habits</FormLabel>\n                        <Controller\n                            name=\"smokinghabits\"\n                            control={control}\n                            defaultValue={\n                                props.loggedinprofile.lifestyle?.smokinghabits\n                            }\n                            value=\"\"\n                            render={({ field }) => (\n                                <ToggleButtonGroup\n                                    defaultValue={\n                                        props.loggedinprofile.createdby\n                                    }\n                                    exclusive\n                                    // onChange={handleAlignment}\n                                    aria-label=\"text alignment\"\n                                    {...field}\n                                    onChange={(_, data) => field.onChange(data)}\n                                    className=\"mat__custombutgrp\"\n                                >\n                                    <ToggleButton\n                                        value=\"Non Smoker\"\n                                        aria-label=\"Vegetarian\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Non-Smoker\n                                    </ToggleButton>\n                                    <ToggleButton\n                                        value=\"Light Smoker\"\n                                        aria-label=\"Non-vegetarian\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Light Smoker\n                                    </ToggleButton>\n\n                                    <ToggleButton\n                                        value=\"Smoker\"\n                                        aria-label=\"Eggetarian\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Smoker\n                                    </ToggleButton>\n                                    <ToggleButton\n                                        value=\" Doesn't matter\"\n                                        aria-label=\"Vegan\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Doesn't matter\n                                    </ToggleButton>\n                                </ToggleButtonGroup>\n                            )}\n                        />\n                    </FormControl>\n                    <FormControl component=\"fieldset\" className=\"mat__textbox\">\n                        <FormLabel component=\"legend\">\n                            Drinking Habits\n                        </FormLabel>\n                        <Controller\n                            name=\"drinkinghabits\"\n                            control={control}\n                            defaultValue={\n                                props.loggedinprofile.lifestyle?.drinkinghabits\n                            }\n                            value=\"\"\n                            render={({ field }) => (\n                                <ToggleButtonGroup\n                                    defaultValue={\n                                        props.loggedinprofile.createdby\n                                    }\n                                    exclusive\n                                    // onChange={handleAlignment}\n                                    aria-label=\"text alignment\"\n                                    {...field}\n                                    onChange={(_, data) => field.onChange(data)}\n                                    className=\"mat__custombutgrp\"\n                                >\n                                    <ToggleButton\n                                        value=\" Non-Drinker\"\n                                        aria-label=\"Vegetarian\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Non-Drinker\n                                    </ToggleButton>\n                                    <ToggleButton\n                                        value=\"Light Drinker\"\n                                        aria-label=\"Non-vegetarian\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Light Drinker\n                                    </ToggleButton>\n\n                                    <ToggleButton\n                                        value=\"Drinker\"\n                                        aria-label=\"Eggetarian\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Drinker\n                                    </ToggleButton>\n                                    <ToggleButton\n                                        value=\"Doesn't matter\"\n                                        aria-label=\"Vegan\"\n                                        color=\"primary\"\n                                        classes={{\n                                            selected: classes.selected,\n                                            root: classes.defaultbutton,\n                                        }}\n                                    >\n                                        Doesn't matter\n                                    </ToggleButton>\n                                </ToggleButtonGroup>\n                            )}\n                        />\n                    </FormControl>\n                    <Button\n                        color=\"primary\"\n                        justify=\"center\"\n                        variant=\"contained\"\n                        type=\"submit\"\n                        className={classes.updatebutton}\n                    >\n                        Update\n                    </Button>\n                </form>\n            </FormProvider>\n        </div>\n    );\n}\n\nexport default Lifestyle;\n","import {\n  Box,\n  FormControl,\n  FormLabel,\n  Typography,\n  FormHelperText,\n  TextField,\n  Grid,\n  InputAdornment,\n  Button,\n  Hidden\n} from \"@material-ui/core\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport {\n  useForm,\n  Controller,\n  FormProvider,\n  useFormContext\n} from \"react-hook-form\";\nimport { useState } from \"react\";\nimport firebase from \"firebase\";\nimport { useEffect } from \"react\";\nimport { db } from \"../../app/firebase\";\nimport { useLocation } from \"react-router-dom\";\n\nimport {\n  KeyboardDatePicker,\n  KeyboardTimePicker,\n  MuiPickersUtilsProvider\n} from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport moment from \"moment\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport {\n  subCasteArrMadhwa,\n  subCasteArrSmartha,\n  subCasteArrVaishnava,\n  Gothra,\n  birthStar,\n  Raashi,\n  caste,\n  heightList\n} from \"../Dataforsignup\";\nimport Horoscopeedit from \"./Horoscopeedit\";\nimport Educationedit from \"./Educationedit\";\nimport Familydetailsedit from \"./Familydetailsedit\";\nimport Partnerpreferences from \"./Partnerpreferences\";\n// import { tabstate } from \"../../features/userSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Lifestyle from \"./Lifestyle\";\nimport UploadPhotos from \"../UploadPhotos\";\n// import { tabval } from \"../../features/userSlice\";\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    \"aria-controls\": `vertical-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    display: \"flex\",\n    // height: 224,\n    height: \"100%\",\n    \"@media (max-width: 960px)\": {\n      flexDirection: \"column\"\n    }\n  },\n  tabs: {\n    borderRight: `1px solid ${theme.palette.divider}`\n  },\n\n  input: {\n    \"&:-webkit-autofill\": {\n      WebkitBoxShadow: \"0 0 0 1000px white inset\"\n    }\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  selected: {\n    \"&&\": {\n      backgroundColor: theme.palette.primary.main,\n      color: \"#fff\",\n      // color: theme.palette.primary.light,\n      \"&:hover\": {\n        // background: theme.palette.primary.dark,\n        background: \"#003b32\"\n      }\n    }\n  },\n  defaultbutton: {\n    borderWidth: \" 2px \",\n    borderStyle: \"solid\",\n    color: \"#fff\",\n    borderColor: theme.palette.primary.main,\n    // background: \"#e0f2f1\",\n    borderLeftWidth: \"2.5px !Important\",\n    borderLeftColor: theme.palette.primary.main + \"!important\",\n    color: theme.palette.action.active,\n    \"&:hover\": {\n      background: theme.palette.primary.dark,\n      color: \"#fff\"\n    }\n  },\n  updatebutton: {\n    marginTop: \"20px\",\n    display: \"flex\",\n    marginLeft: \"auto\"\n  },\n  mat__Caste: {}\n}));\n\nfunction EditProfile(props) {\n  let location = useLocation();\n  let tabids = Number(location?.state?.tabids);\n  console.log(tabids + \"tabids\");\n  const classes = useStyles();\n  const [value, setValue] = React.useState(6);\n  useEffect(() => {\n    tabids ? setValue(tabids) : setValue(0);\n  }, [tabids]);\n  // const userDetails = useSelector(tabval);\n  const dispatch = useDispatch();\n  // let value = useSelector(tabval);\n  console.log(value);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    //  dispatch(tabstate(newValue));\n  };\n\n  const {\n    control,\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm();\n  console.log(errors);\n  const userlogged = firebase.auth().currentUser;\n  const loggedinuserEmail = userlogged?.email;\n  const [loggedinprofile, setloggedinprofile] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"users\")\n      .doc(loggedinuserEmail)\n      .onSnapshot((doc) => {\n        console.log(\"Current user data:\", doc.data());\n        setloggedinprofile(doc.data());\n      });\n  }, [loggedinuserEmail]);\n  console.log(loggedinprofile);\n  const methods = useForm({\n    defaultValues: {\n      createdby: \"Self\"\n    }\n  });\n  // console.log(loggedinprofile?.birthtime?.toDate().toLocaleTimeString());\n  const [createdBy, setcreatedBy] = useState(\"\");\n\n  const [subCasteArr, setsubCasteArr] = useState([\"\"]);\n  const [subCaste, setsubCaste] = useState(\"\");\n  const handleCasteChange = (e) => {\n    console.log(e);\n    // setsubcasteValue(\"\");\n    if (e === \"Madhwa\") {\n      setsubCasteArr(subCasteArrMadhwa);\n      setsubCaste(\"Madhwa\");\n    } else if (e === \"Smartha\") {\n      setsubCasteArr(subCasteArrSmartha);\n      setsubCaste(\"Smartha\");\n    } else {\n      setsubCasteArr(subCasteArrVaishnava);\n    }\n    // console.log(subcasteValue);\n  };\n  useEffect(() => {\n    setcreatedBy(loggedinprofile.createdby);\n    if (loggedinprofile.createdby === \"Parents\") setcreatedBy(\"Parents\");\n    // console.log(loggedinprofile?.birthdate?.toDate().toLocaleDateString());\n    if (loggedinprofile.caste) {\n      // alert(loggedinprofile.caste);\n      handleCasteChange(loggedinprofile.caste);\n    }\n  }, [loggedinprofile]);\n\n  useEffect(() => {}, []);\n  const onSubmit = (data) => {\n    console.log(data);\n    console.log(loggedinprofile.email);\n    console.log(data);\n    db.collection(\"users\")\n      .doc(loggedinprofile.email)\n      .set(\n        {\n          createdby: data.createdby,\n          name: data.name,\n          // phone: data.phone,\n          // gender: data.gender,\n          maritalstatus: data.maritalstatus,\n          caste: data.caste,\n          subcaste: data.subcaste,\n          mothertongue: data.mothertongue,\n          height: data.height,\n          weight: data.weight\n        },\n        { merge: true }\n      )\n      .catch((error) => alert(error.message));\n  };\n  return (\n    <div className=\"editProfile\">\n      <Typography variant=\"h3\">Edit Profile</Typography>\n      <div className={classes.root}>\n        <Hidden smDown>\n          <Tabs\n            orientation=\"vertical\"\n            variant=\"scrollable\"\n            value={value}\n            onChange={handleChange}\n            aria-label=\"Vertical tabs example\"\n            className={classes.tabs}\n          >\n            <Tab label=\"Personal Details\" {...a11yProps(0)} />\n            <Tab label=\"Horoscope Details\" {...a11yProps(1)} />\n            <Tab label=\" Education & Profession\" {...a11yProps(2)} />\n            <Tab label=\"Family Details\" {...a11yProps(3)} />\n            <Tab label=\"Partner Preferences\" {...a11yProps(4)} />\n            <Tab label=\"Lifestyle\" {...a11yProps(5)} />\n            <Tab label=\"Manage Photos\" {...a11yProps(6)} />\n          </Tabs>\n        </Hidden>\n        <Hidden mdUp>\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            variant=\"scrollable\"\n            scrollButtons=\"on\"\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            aria-label=\"scrollable force tabs example\"\n          >\n            <Tab label=\"Personal Details\" {...a11yProps(0)} />\n            <Tab label=\"Horoscope Details\" {...a11yProps(1)} />\n            <Tab label=\" Education & Profession\" {...a11yProps(2)} />\n            <Tab label=\"Family Details\" {...a11yProps(3)} />\n            <Tab label=\"Partner Preferences\" {...a11yProps(4)} />\n            <Tab label=\"Lifestyle\" {...a11yProps(5)} />\n            <Tab label=\"Item Seven\" {...a11yProps(6)} />\n          </Tabs>\n        </Hidden>\n        <Grid item xs={12} md={9} lg={6}>\n          <TabPanel value={value} index={0}>\n            <div>\n              <Typography variant=\"h4\">\n                Edit Personal & Basic Details\n              </Typography>\n              <FormProvider {...methods}>\n                {Object.keys(loggedinprofile).length !== 0 ? (\n                  <form onSubmit={handleSubmit(onSubmit)}>\n                    <FormControl component=\"fieldset\" className=\"mat__textbox\">\n                      <FormLabel component=\"legend\">\n                        Created by {loggedinprofile.createdby}\n                      </FormLabel>\n                      <Controller\n                        name=\"createdby\"\n                        control={control}\n                        defaultValue={loggedinprofile.createdby}\n                        value=\"\"\n                        render={({ field }) => (\n                          <ToggleButtonGroup\n                            value=\"\"\n                            exclusive\n                            // onChange={handleAlignment}\n                            aria-label=\"text alignment\"\n                            {...field}\n                            onChange={(_, data) => field.onChange(data)}\n                            className=\"mat__custombutgrp\"\n                          >\n                            <ToggleButton\n                              value=\"Parents\"\n                              aria-label=\"Unmarried\"\n                              color=\"primary\"\n                              classes={{\n                                selected: classes.selected,\n                                root: classes.defaultbutton\n                              }}\n                            >\n                              Parents\n                            </ToggleButton>\n                            <ToggleButton\n                              value=\"Relative\"\n                              aria-label=\"Widow/Widower\"\n                              color=\"primary\"\n                              classes={{\n                                selected: classes.selected,\n                                root: classes.defaultbutton\n                              }}\n                            >\n                              Relative\n                            </ToggleButton>\n                            <ToggleButton\n                              value=\"Sibling\"\n                              aria-label=\"Sibling\"\n                              classes={{\n                                selected: classes.selected,\n                                root: classes.defaultbutton\n                              }}\n                            >\n                              Sibling\n                            </ToggleButton>\n                            <ToggleButton\n                              value=\"Self\"\n                              aria-label=\"Divorced\"\n                              color=\"primary\"\n                              classes={{\n                                selected: classes.selected,\n                                root: classes.defaultbutton\n                              }}\n                            >\n                              Self\n                            </ToggleButton>\n                            <ToggleButton\n                              value=\"Friend\"\n                              aria-label=\"Friend\"\n                              classes={{\n                                selected: classes.selected,\n                                root: classes.defaultbutton\n                              }}\n                            >\n                              Friend\n                            </ToggleButton>\n                          </ToggleButtonGroup>\n                        )}\n                        rules={{\n                          required: \"Marital Status is required\"\n                        }}\n                      />\n                      <FormHelperText className=\"Mui-error\">\n                        {errors.maritalstatus?.message}\n                      </FormHelperText>\n                    </FormControl>\n                    <Controller\n                      name=\"name\"\n                      control={control}\n                      defaultValue={loggedinprofile.name}\n                      render={({\n                        field: { onChange, value },\n                        fieldState: { error }\n                      }) => (\n                        <TextField\n                          label=\"Name\"\n                          variant=\"outlined\"\n                          value={value}\n                          fullWidth\n                          onChange={onChange}\n                          error={!!error}\n                          className=\"mat__textbox\"\n                          helperText={error ? error.message : null}\n                        />\n                      )}\n                      rules={{\n                        required: \"Name is required\"\n                      }}\n                    />\n\n                    <FormControl component=\"fieldset\" className=\"mat__textbox\">\n                      <FormLabel component=\"legend\">Marital Status</FormLabel>\n                      <Controller\n                        name=\"maritalstatus\"\n                        control={control}\n                        defaultValue={loggedinprofile.maritalstatus}\n                        value=\"\"\n                        render={({ field }) => (\n                          <ToggleButtonGroup\n                            value=\"\"\n                            exclusive\n                            // onChange={handleAlignment}\n                            aria-label=\"text alignment\"\n                            {...field}\n                            onChange={(_, data) => field.onChange(data)}\n                            className=\"mat__custombutgrp\"\n                          >\n                            <ToggleButton\n                              value=\"Unmarried\"\n                              aria-label=\"Unmarried\"\n                              color=\"primary\"\n                              classes={{\n                                selected: classes.selected,\n                                root: classes.defaultbutton\n                              }}\n                            >\n                              Unmarried\n                            </ToggleButton>\n                            <ToggleButton\n                              value=\"Widow/Widower\"\n                              aria-label=\"Widow/Widower\"\n                              color=\"primary\"\n                              classes={{\n                                selected: classes.selected,\n                                root: classes.defaultbutton\n                              }}\n                            >\n                              Widow/Widower\n                            </ToggleButton>\n\n                            <ToggleButton\n                              value=\"Divorced\"\n                              aria-label=\"Divorced\"\n                              color=\"primary\"\n                              classes={{\n                                selected: classes.selected,\n                                root: classes.defaultbutton\n                              }}\n                            >\n                              Divorced\n                            </ToggleButton>\n                          </ToggleButtonGroup>\n                        )}\n                        rules={{\n                          required: \"Marital Status is required\"\n                        }}\n                      />\n                      <FormHelperText className=\"Mui-error\">\n                        {errors.maritalstatus?.message}\n                      </FormHelperText>\n                    </FormControl>\n\n                    <Grid container>\n                      <Grid item xs={12} md={6} className=\"mat__caste\">\n                        <Controller\n                          defaultValue={loggedinprofile.caste}\n                          render={({ field, fieldState: { error } }) => (\n                            <Autocomplete\n                              {...field}\n                              options={caste ? caste : \"\"}\n                              getOptionLabel={(option) => option}\n                              defaultValue={loggedinprofile.caste}\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Caste\"\n                                  variant=\"outlined\"\n                                  error={!!error}\n                                  helperText={error ? error.message : null}\n                                  className=\"mat__textbox\"\n                                />\n                              )}\n                              onChange={(_, data) => (\n                                field.onChange(data), handleCasteChange(data)\n                              )}\n                            />\n                          )}\n                          name=\"caste\"\n                          control={control}\n                          rules={{\n                            required: \"Caste is required\"\n                          }}\n                        />\n                      </Grid>\n                      <Grid item xs={12} md={6} className=\"mat__subcaste\">\n                        <Controller\n                          defaultValue={loggedinprofile.subcaste}\n                          render={({ field, fieldState: { error } }) => (\n                            <Autocomplete\n                              {...field}\n                              defaultValue={loggedinprofile.subcaste}\n                              options={subCasteArr}\n                              getOptionLabel={(option) => option}\n                              // disabled={!subCaste}\n                              renderInput={(params) => (\n                                <TextField\n                                  {...params}\n                                  label=\"Sub Caste\"\n                                  variant=\"outlined\"\n                                  error={!!error}\n                                  helperText={error ? error.message : null}\n                                  className=\"mat__textbox\"\n                                />\n                              )}\n                              onChange={(_, data) => field.onChange(data)}\n                            />\n                          )}\n                          name=\"subcaste\"\n                          control={control}\n                          rules={{\n                            required: \"SubCaste is required\"\n                          }}\n                        />\n                      </Grid>\n                    </Grid>\n\n                    <Controller\n                      name=\"mothertongue\"\n                      control={control}\n                      defaultValue={loggedinprofile.mothertongue}\n                      render={({\n                        field: { onChange, value },\n                        fieldState: { error }\n                      }) => (\n                        <TextField\n                          label=\"Mother Tongue\"\n                          variant=\"outlined\"\n                          fullWidth\n                          onChange={onChange}\n                          error={!!error}\n                          className=\"mat__textbox\"\n                          helperText={error ? error.message : null}\n                          value={value}\n                        />\n                      )}\n                      rules={{\n                        required: \"Mother Tongue Created By is required\"\n                      }}\n                    />\n                    <Controller\n                      defaultValue={loggedinprofile.height}\n                      render={({ field, fieldState: { error } }) => (\n                        <Autocomplete\n                          {...field}\n                          options={heightList}\n                          getOptionLabel={(option) => option}\n                          defaultValue={loggedinprofile.height}\n                          renderInput={(params) => (\n                            <TextField\n                              {...params}\n                              label=\"Height\"\n                              variant=\"outlined\"\n                              error={!!error}\n                              helperText={error ? error.message : null}\n                              className=\"mat__textbox\"\n                            />\n                          )}\n                          onChange={(_, data) => field.onChange(data)}\n                        />\n                      )}\n                      name=\"height\"\n                      control={control}\n                      rules={{\n                        required: \"Height is required\"\n                      }}\n                    />\n\n                    <Controller\n                      name=\"weight\"\n                      control={control}\n                      defaultValue={loggedinprofile?.weight}\n                      render={({ field: { onChange, value } }) => (\n                        <TextField\n                          label=\"Weight\"\n                          variant=\"outlined\"\n                          fullWidth\n                          onChange={onChange}\n                          className=\"mat__textbox\"\n                          // helperText={\n                          //     error ? error.message : null\n                          // }\n                          value={value}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                Kgs\n                              </InputAdornment>\n                            )\n                          }}\n                        />\n                      )}\n                      // rules={{\n                      //     // required: \"Weight is required\",\n                      // }}\n                    />\n                    <Button\n                      color=\"primary\"\n                      justify=\"center\"\n                      variant=\"contained\"\n                      type=\"submit\"\n                      className={classes.updatebutton}\n                    >\n                      Update\n                    </Button>\n                  </form>\n                ) : (\n                  \"\"\n                )}\n              </FormProvider>{\" \"}\n            </div>\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Horoscopeedit\n              control={control}\n              loggedinprofile={loggedinprofile}\n            />\n          </TabPanel>\n          <TabPanel value={value} index={2}>\n            <Educationedit loggedinprofile={loggedinprofile} />\n          </TabPanel>\n          <TabPanel value={value} index={3}>\n            <Familydetailsedit loggedinprofile={loggedinprofile} />\n          </TabPanel>\n          <TabPanel value={value} index={4}>\n            <Partnerpreferences loggedinprofile={loggedinprofile} />\n          </TabPanel>\n          <TabPanel value={value} index={5}>\n            <Lifestyle loggedinprofile={loggedinprofile} />\n          </TabPanel>\n          <TabPanel value={value} index={6}>\n            <UploadPhotos />\n          </TabPanel>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nexport default EditProfile;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport {\n  ThemeProvider,\n  CssBaseline,\n  createMuiTheme,\n  Backdrop,\n  makeStyles,\n  CircularProgress,\n  Paper\n} from \"@material-ui/core\";\nimport { Switch as DarkLightButtton } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Mui from \"./components/unwanted/Test\";\n\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport Tried from \"./components/unwanted/DelLater\";\n\n// import Signupstep1 from \"./components/unwanted/Signupstep1\";\n// import Signupstep2 from \"./components/unwanted/Signupstep2\";\n// import Signupstep3 from \"./components/unwanted/Signupstep3\";\n// import Signupstep4 from \"./components/unwanted/Signupstep4\";\n// import Location from \"./components/unwanted/Googleautocomp\";\nimport UploadPhotos from \"./components/UploadPhotos\";\n// import Toofanicoder from \"./components/unwanted/Toofanicoder\";\nimport SignupN from \"./components/Signupnew\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  darkmode,\n  handleDarkMode,\n  login,\n  logout,\n  selectUser\n} from \"./features/userSlice\";\nimport { useEffect } from \"react\";\nimport { auth, db } from \"./app/firebase\";\nimport Header from \"./components/Header\";\nimport Profiles from \"./components/Profiles\";\n// import Profile from \"./components/unwanted/Profile\";\nimport ProfileN from \"./components/ProfileN\";\nimport Requests from \"./components/Requests\";\nimport Shortlisted from \"./components/Shortlisted\";\nimport Shortlistedme from \"./components/Shortlisteme\";\nimport Recentlyviewed from \"./components/Recentlyviewed\";\nimport EditProfile from \"./components/EditProfile/EditProfile\";\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\"\n  }\n}));\nfunction App() {\n  const [darkMode, setDarkMode] = useState(\"dark\");\n  const darkmodeselector = useSelector(darkmode);\n\n  console.log(darkmodeselector);\n  const theme = createMuiTheme({\n    palette: {\n      // primary: { light: \"blue[300]\", main: \"blue[500]\", dark: \"blue[700]\" },\n\n      //secondary: \"green\",\n      type: darkmodeselector,\n      // primary: {\n      //     light: \"#80cbc4\",\n      //     main: \"#009688\",\n      //     dark: \"#004d40\",\n      //     contrastText: \"#fff\",\n      // },\n      // primary: {\n      //     light: \"#7cbdc9\",\n      //     main: \"#40817a\",\n      //     dark: \"#003b32\",\n      //     contrastText: \"#fff\",\n      // },\n      // ,\n      primary: {\n        light: \"#ff6e40\",\n        main: \"#1877F2\",\n        dark: \"#0091ea\",\n        contrastText: \"#fff\"\n      },\n      secondary: {\n        light: \"#ff6e40\",\n        main: \"#1877F2\",\n        dark: \"#0091ea\",\n        contrastText: \"#fff\"\n      },\n      text: {}\n    }\n  });\n\n  // const handleDarkMode = () => {\n  //     setDarkMode(!darkMode);\n  // };\n  const [open, setOpen] = React.useState(true);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n  const classes = useStyles();\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    auth.onAuthStateChanged((userAuth) => {\n      setOpen(true);\n      if (userAuth) {\n        console.log(userAuth.email);\n        var docRef = db.collection(\"users\").doc(userAuth.email);\n        let userData;\n        docRef\n          .get()\n          .then((doc) => {\n            console.log(open);\n            if (doc.exists) {\n              userData = doc.data();\n              console.log(userData);\n            } else {\n              console.log(\"else\");\n            }\n          })\n          .then(() => {\n            dispatch(\n              login({\n                email: userAuth.email,\n                uid: userAuth.uid,\n                displayName: userAuth.displayName,\n                profileUrl: userAuth.photoURL,\n                userData: userData\n              })\n            );\n            setOpen(false);\n          });\n      } else {\n        dispatch(logout());\n        setOpen(false);\n      }\n    });\n  }, []);\n  return (\n    <Router>\n      <ThemeProvider theme={theme}>\n        <CssBaseline>\n          <Header />\n          <div className=\"matrimony__container\">\n            {/* <h1>Matrimony</h1>\n                        <DarkLightButtton\n                            className=\"mat__darklighttoggle\"\n                            onChange={handleDarkMode}\n                            value={darkMode}\n                        /> */}\n\n            {!user ? (\n              <>\n                {open ? (\n                  <>\n                    {/* {alert(\"inside if\")} */}\n                    <Backdrop className={classes.backdrop} open={open}>\n                      <CircularProgress color=\"inherit\" />\n                    </Backdrop>\n                  </>\n                ) : (\n                  <>\n                    {/* {setOpen(false)} */}\n                    <Switch>\n                      <Route path=\"/signup\">\n                        <SignupN />\n                      </Route>\n                      <Route path=\"/\">\n                        <Login />\n                      </Route>\n                    </Switch>\n                    {/* <Login /> */}\n                  </>\n                )}\n              </>\n            ) : (\n              <Switch>\n                {/* <Route path=\"/signup\">\n                                <Signup />\n                            </Route>\n                            <Route path=\"/date\">\n                                <Mui />\n                            </Route>\n                            <Route path=\"/step1\">\n                                <Signupstep1 />\n                            </Route>\n                            <Route path=\"/step2\">\n                                <Signupstep2 />\n                            </Route>\n                            <Route path=\"/step3\">\n                                <Signupstep3 />\n                            </Route>\n                            <Route path=\"/step4\">\n                                <Signupstep4 />\n                            </Route> */}\n                <Route path=\"/Updateprofile\">\n                  <UploadPhotos />\n                </Route>\n                <Route path=\"/signup\">\n                  <SignupN />\n                </Route>\n                {/* <Route path=\"/Location\">\n                                <Location />\n                            </Route>\n                            <Route path=\"/Toofani\">\n                                <Toofanicoder />\n                            </Route> */}\n                {/* <Route path=\"/SignupN\">\n                                    <SignupN />\n                                </Route> */}\n                <Route path=\"/Login\">\n                  <Login />\n                </Route>\n                <Route path=\"/ProfileN/:id\">\n                  <ProfileN />\n                </Route>\n                <Route path=\"/Profile\">\n                  <ProfileN />\n                </Route>\n                <Route path=\"/Requests\">\n                  <Requests />\n                </Route>\n                <Route path=\"/Shortlisted\">\n                  <Shortlisted />\n                </Route>\n                <Route path=\"/Shortlistedme\">\n                  <Shortlistedme />\n                </Route>\n                <Route path=\"/Recentlyviewed\">\n                  <Recentlyviewed />\n                </Route>\n                <Route path=\"/EditProfile\">\n                  <EditProfile />\n                </Route>\n                <Route path=\"/\">\n                  <Profiles />\n                </Route>\n              </Switch>\n            )}\n          </div>\n        </CssBaseline>\n      </ThemeProvider>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport counterReducer from \"../features/counter/counterSlice\";\nimport signupReducer from \"../features/signupSlice\";\nimport userReducer from \"../features/userSlice\";\nimport profilesReducer from \"../features/profilesSlice\";\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    signup: signupReducer,\n    user: userReducer,\n    profiles: profilesReducer\n  },\n  devTools: process.env.NODE_ENV !== \"production\"\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}